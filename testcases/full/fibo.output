Starting parse
Entering state 0
Reading a token: Next token is token LONG (2.1-3: )
Shifting token LONG (2.1-3: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (2.1-3: )
-> $$ = nterm simple_type_specifier (2.1-3: )
Stack now 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (2.1-3: )
-> $$ = nterm type_specifier (2.1-3: )
Stack now 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (2.1-3: )
-> $$ = nterm decl_specifier (2.1-3: )
Stack now 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (2.1-3: )
-> $$ = nterm decl_specifier_seq (2.1-3: )
Stack now 0
Entering state 36
Reading a token: Next token is token INT (2.6-7: )
Shifting token INT (2.6-7: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (2.6-7: )
-> $$ = nterm simple_type_specifier (2.6-7: )
Stack now 36 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (2.6-7: )
-> $$ = nterm type_specifier (2.6-7: )
Stack now 36 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (2.6-7: )
-> $$ = nterm decl_specifier (2.6-7: )
Stack now 36 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (2.1-3: )
   $2 = nterm decl_specifier (2.6-7: )
-> $$ = nterm decl_specifier_seq (2.1-7: )
Stack now 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (2.10-12: )
Shifting token IDENTIFIER (2.10-12: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (2.10-12: )
-> $$ = nterm identifier (2.10-12: )
Stack now 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (2.10-12: )
-> $$ = nterm unqualified_id (2.10-12: )
Stack now 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (2.10-12: )
-> $$ = nterm id_expression (2.10-12: )
Stack now 36 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (2.10-12: )
-> $$ = nterm declarator_id (2.10-12: )
Stack now 36 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (2.10-12: )
-> $$ = nterm direct_declarator (2.10-12: )
Stack now 36 0
Entering state 43
Reading a token: Next token is token '(' (2.14: )
Shifting token '(' (2.14: )
Entering state 127
Reading a token: Next token is token LONG (2.15-17: )
Shifting token LONG (2.15-17: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (2.15-17: )
-> $$ = nterm simple_type_specifier (2.15-17: )
Stack now 127 43 36 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (2.15-17: )
-> $$ = nterm type_specifier (2.15-17: )
Stack now 127 43 36 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (2.15-17: )
-> $$ = nterm decl_specifier (2.15-17: )
Stack now 127 43 36 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (2.15-17: )
-> $$ = nterm decl_specifier_seq (2.15-17: )
Stack now 127 43 36 0
Entering state 170
Reading a token: Next token is token INT (2.20-21: )
Shifting token INT (2.20-21: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (2.20-21: )
-> $$ = nterm simple_type_specifier (2.20-21: )
Stack now 170 127 43 36 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (2.20-21: )
-> $$ = nterm type_specifier (2.20-21: )
Stack now 170 127 43 36 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (2.20-21: )
-> $$ = nterm decl_specifier (2.20-21: )
Stack now 170 127 43 36 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (2.15-17: )
   $2 = nterm decl_specifier (2.20-21: )
-> $$ = nterm decl_specifier_seq (2.15-21: )
Stack now 127 43 36 0
Entering state 170
Reading a token: Next token is token IDENTIFIER (2.24: )
Shifting token IDENTIFIER (2.24: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (2.24: )
-> $$ = nterm identifier (2.24: )
Stack now 170 127 43 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (2.24: )
-> $$ = nterm unqualified_id (2.24: )
Stack now 170 127 43 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (2.24: )
-> $$ = nterm id_expression (2.24: )
Stack now 170 127 43 36 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (2.24: )
-> $$ = nterm declarator_id (2.24: )
Stack now 170 127 43 36 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (2.24: )
-> $$ = nterm direct_declarator (2.24: )
Stack now 170 127 43 36 0
Entering state 43
Reading a token: Next token is token ')' (2.25: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (2.24: )
-> $$ = nterm declarator (2.24: )
Stack now 170 127 43 36 0
Entering state 272
Next token is token ')' (2.25: )
Reducing stack by rule 339 (line 1630):
-> $$ = nterm assignment_expression_opt (2.24: )
Stack now 272 170 127 43 36 0
Entering state 363
Reducing stack by rule 224 (line 1267):
   $1 = nterm decl_specifier_seq (2.15-21: )
   $2 = nterm declarator (2.24: )
   $3 = nterm assignment_expression_opt (2.24: )
-> $$ = nterm parameter_declaration (2.15-23: )
Stack now 127 43 36 0
Entering state 172
Reducing stack by rule 222 (line 1260):
   $1 = nterm parameter_declaration (2.15-23: )
-> $$ = nterm parameter_declaration_list (2.15-23: )
Stack now 127 43 36 0
Entering state 171
Next token is token ')' (2.25: )
Shifting token ')' (2.25: )
Entering state 279
Reading a token: Next token is token '{' (3.1: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (2.25: )
Stack now 279 171 127 43 36 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (2.10-12: )
   $2 = token '(' (2.14: )
   $3 = nterm parameter_declaration_list (2.15-23: )
   $4 = token ')' (2.25: )
   $5 = nterm cv_qualifier_opt (2.25: )
-> $$ = nterm direct_declarator (2.10-24: )
Stack now 36 0
Entering state 43
Next token is token '{' (3.1: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (2.10-24: )
-> $$ = nterm declarator (2.10-24: )
Stack now 36 0
Entering state 121
Next token is token '{' (3.1: )
Shifting token '{' (3.1: )
Entering state 123
Reading a token: Next token is token IF (4.5: )
Reducing stack by rule 136 (line 838):
-> $$ = nterm $@1 (3.1: )
Stack now 123 121 36 0
Entering state 168
Next token is token IF (4.5: )
Shifting token IF (4.5: )
Entering state 252
Reading a token: Next token is token '(' (4.8: )
Shifting token '(' (4.8: )
Entering state 353
Reading a token: Next token is token IDENTIFIER (4.9: )
Shifting token IDENTIFIER (4.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (4.9: )
-> $$ = nterm identifier (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (4.9: )
-> $$ = nterm unqualified_id (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (4.9: )
-> $$ = nterm id_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (4.9: )
-> $$ = nterm primary_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (4.9: )
-> $$ = nterm postfix_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 198
Reading a token: Next token is token "==" (4.11: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (4.9: )
-> $$ = nterm unary_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (4.9: )
-> $$ = nterm cast_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (4.9: )
-> $$ = nterm pm_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 204
Next token is token "==" (4.11: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (4.9: )
-> $$ = nterm multiplicative_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 205
Next token is token "==" (4.11: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (4.9: )
-> $$ = nterm additive_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 206
Next token is token "==" (4.11: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (4.9: )
-> $$ = nterm shift_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 207
Next token is token "==" (4.11: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (4.9: )
-> $$ = nterm relational_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 208
Next token is token "==" (4.11: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (4.9: )
-> $$ = nterm equality_expression (4.9: )
Stack now 353 252 168 123 121 36 0
Entering state 209
Next token is token "==" (4.11: )
Shifting token "==" (4.11: )
Entering state 305
Reading a token: Next token is token INTVAL (4.14: )
Shifting token INTVAL (4.14: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (4.14: )
-> $$ = nterm int_literal (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (4.14: )
-> $$ = nterm literal (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (4.14: )
-> $$ = nterm primary_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (4.14: )
-> $$ = nterm postfix_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 198
Reading a token: Next token is token ')' (4.15: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (4.14: )
-> $$ = nterm unary_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (4.14: )
-> $$ = nterm cast_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (4.14: )
-> $$ = nterm pm_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 204
Next token is token ')' (4.15: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (4.14: )
-> $$ = nterm multiplicative_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 205
Next token is token ')' (4.15: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (4.14: )
-> $$ = nterm additive_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 206
Next token is token ')' (4.15: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (4.14: )
-> $$ = nterm shift_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 207
Next token is token ')' (4.15: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (4.14: )
-> $$ = nterm relational_expression (4.14: )
Stack now 305 209 353 252 168 123 121 36 0
Entering state 396
Next token is token ')' (4.15: )
Reducing stack by rule 95 (line 659):
   $1 = nterm equality_expression (4.9: )
   $2 = token "==" (4.11: )
   $3 = nterm relational_expression (4.14: )
-> $$ = nterm equality_expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 209
Next token is token ')' (4.15: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (4.9-13: )
-> $$ = nterm and_expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 210
Next token is token ')' (4.15: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (4.9-13: )
-> $$ = nterm exclusive_or_expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 211
Next token is token ')' (4.15: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (4.9-13: )
-> $$ = nterm inclusive_or_expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 212
Next token is token ')' (4.15: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (4.9-13: )
-> $$ = nterm logical_and_expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 213
Next token is token ')' (4.15: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (4.9-13: )
-> $$ = nterm logical_or_expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 237
Next token is token ')' (4.15: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (4.9-13: )
-> $$ = nterm conditional_expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (4.9-13: )
-> $$ = nterm assignment_expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (4.9-13: )
-> $$ = nterm expression (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 431
Next token is token ')' (4.15: )
Reducing stack by rule 144 (line 873):
   $1 = nterm expression (4.9-13: )
-> $$ = nterm condition (4.9-13: )
Stack now 353 252 168 123 121 36 0
Entering state 432
Next token is token ')' (4.15: )
Shifting token ')' (4.15: )
Entering state 466
Reading a token: Next token is token RETURN (5.9-13: )
Shifting token RETURN (5.9-13: )
Entering state 253
Reading a token: Next token is token INTVAL (5.16: )
Shifting token INTVAL (5.16: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (5.16: )
-> $$ = nterm int_literal (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (5.16: )
-> $$ = nterm literal (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (5.16: )
-> $$ = nterm primary_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (5.16: )
-> $$ = nterm postfix_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 198
Reading a token: Next token is token ';' (5.17: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (5.16: )
-> $$ = nterm unary_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (5.16: )
-> $$ = nterm cast_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (5.16: )
-> $$ = nterm pm_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 204
Next token is token ';' (5.17: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (5.16: )
-> $$ = nterm multiplicative_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 205
Next token is token ';' (5.17: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (5.16: )
-> $$ = nterm additive_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 206
Next token is token ';' (5.17: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (5.16: )
-> $$ = nterm shift_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 207
Next token is token ';' (5.17: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (5.16: )
-> $$ = nterm relational_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 208
Next token is token ';' (5.17: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (5.16: )
-> $$ = nterm equality_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 209
Next token is token ';' (5.17: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (5.16: )
-> $$ = nterm and_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 210
Next token is token ';' (5.17: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (5.16: )
-> $$ = nterm exclusive_or_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 211
Next token is token ';' (5.17: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (5.16: )
-> $$ = nterm inclusive_or_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 212
Next token is token ';' (5.17: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (5.16: )
-> $$ = nterm logical_and_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 213
Next token is token ';' (5.17: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (5.16: )
-> $$ = nterm logical_or_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 237
Next token is token ';' (5.17: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (5.16: )
-> $$ = nterm conditional_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (5.16: )
-> $$ = nterm assignment_expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (5.16: )
-> $$ = nterm expression (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 258
Next token is token ';' (5.17: )
Reducing stack by rule 324 (line 1599):
   $1 = nterm expression (5.16: )
-> $$ = nterm expression_opt (5.16: )
Stack now 253 466 432 353 252 168 123 121 36 0
Entering state 354
Next token is token ';' (5.17: )
Shifting token ';' (5.17: )
Entering state 433
Reducing stack by rule 152 (line 921):
   $1 = token RETURN (5.9-13: )
   $2 = nterm expression_opt (5.16: )
   $3 = token ';' (5.17: )
-> $$ = nterm jump_statement (5.9-16: )
Stack now 466 432 353 252 168 123 121 36 0
Entering state 266
Reducing stack by rule 130 (line 809):
   $1 = nterm jump_statement (5.9-16: )
-> $$ = nterm statement (5.9-16: )
Stack now 466 432 353 252 168 123 121 36 0
Entering state 490
Reading a token: Next token is token ELSE (6.5-7: )
Shifting token ELSE (6.5-7: )
Entering state 504
Reading a token: Next token is token IF (6.10: )
Shifting token IF (6.10: )
Entering state 252
Reading a token: Next token is token '(' (6.13: )
Shifting token '(' (6.13: )
Entering state 353
Reading a token: Next token is token IDENTIFIER (6.14: )
Shifting token IDENTIFIER (6.14: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (6.14: )
-> $$ = nterm identifier (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (6.14: )
-> $$ = nterm unqualified_id (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (6.14: )
-> $$ = nterm id_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (6.14: )
-> $$ = nterm primary_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (6.14: )
-> $$ = nterm postfix_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 198
Reading a token: Next token is token "==" (6.16: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (6.14: )
-> $$ = nterm unary_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (6.14: )
-> $$ = nterm cast_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (6.14: )
-> $$ = nterm pm_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 204
Next token is token "==" (6.16: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (6.14: )
-> $$ = nterm multiplicative_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 205
Next token is token "==" (6.16: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (6.14: )
-> $$ = nterm additive_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 206
Next token is token "==" (6.16: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (6.14: )
-> $$ = nterm shift_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 207
Next token is token "==" (6.16: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (6.14: )
-> $$ = nterm relational_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 208
Next token is token "==" (6.16: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (6.14: )
-> $$ = nterm equality_expression (6.14: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 209
Next token is token "==" (6.16: )
Shifting token "==" (6.16: )
Entering state 305
Reading a token: Next token is token INTVAL (6.19: )
Shifting token INTVAL (6.19: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (6.19: )
-> $$ = nterm int_literal (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (6.19: )
-> $$ = nterm literal (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (6.19: )
-> $$ = nterm primary_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (6.19: )
-> $$ = nterm postfix_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 198
Reading a token: Next token is token ')' (6.20: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (6.19: )
-> $$ = nterm unary_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (6.19: )
-> $$ = nterm cast_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (6.19: )
-> $$ = nterm pm_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 204
Next token is token ')' (6.20: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (6.19: )
-> $$ = nterm multiplicative_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 205
Next token is token ')' (6.20: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (6.19: )
-> $$ = nterm additive_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 206
Next token is token ')' (6.20: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (6.19: )
-> $$ = nterm shift_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 207
Next token is token ')' (6.20: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (6.19: )
-> $$ = nterm relational_expression (6.19: )
Stack now 305 209 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 396
Next token is token ')' (6.20: )
Reducing stack by rule 95 (line 659):
   $1 = nterm equality_expression (6.14: )
   $2 = token "==" (6.16: )
   $3 = nterm relational_expression (6.19: )
-> $$ = nterm equality_expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 209
Next token is token ')' (6.20: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (6.14-18: )
-> $$ = nterm and_expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 210
Next token is token ')' (6.20: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (6.14-18: )
-> $$ = nterm exclusive_or_expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 211
Next token is token ')' (6.20: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (6.14-18: )
-> $$ = nterm inclusive_or_expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 212
Next token is token ')' (6.20: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (6.14-18: )
-> $$ = nterm logical_and_expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 213
Next token is token ')' (6.20: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (6.14-18: )
-> $$ = nterm logical_or_expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 237
Next token is token ')' (6.20: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (6.14-18: )
-> $$ = nterm conditional_expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (6.14-18: )
-> $$ = nterm assignment_expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (6.14-18: )
-> $$ = nterm expression (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 431
Next token is token ')' (6.20: )
Reducing stack by rule 144 (line 873):
   $1 = nterm expression (6.14-18: )
-> $$ = nterm condition (6.14-18: )
Stack now 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 432
Next token is token ')' (6.20: )
Shifting token ')' (6.20: )
Entering state 466
Reading a token: Next token is token RETURN (7.9-13: )
Shifting token RETURN (7.9-13: )
Entering state 253
Reading a token: Next token is token INTVAL (7.16: )
Shifting token INTVAL (7.16: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (7.16: )
-> $$ = nterm int_literal (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (7.16: )
-> $$ = nterm literal (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (7.16: )
-> $$ = nterm primary_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (7.16: )
-> $$ = nterm postfix_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 198
Reading a token: Next token is token ';' (7.17: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (7.16: )
-> $$ = nterm unary_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (7.16: )
-> $$ = nterm cast_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (7.16: )
-> $$ = nterm pm_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 204
Next token is token ';' (7.17: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (7.16: )
-> $$ = nterm multiplicative_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 205
Next token is token ';' (7.17: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (7.16: )
-> $$ = nterm additive_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 206
Next token is token ';' (7.17: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (7.16: )
-> $$ = nterm shift_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 207
Next token is token ';' (7.17: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (7.16: )
-> $$ = nterm relational_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 208
Next token is token ';' (7.17: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (7.16: )
-> $$ = nterm equality_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 209
Next token is token ';' (7.17: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (7.16: )
-> $$ = nterm and_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 210
Next token is token ';' (7.17: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (7.16: )
-> $$ = nterm exclusive_or_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 211
Next token is token ';' (7.17: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (7.16: )
-> $$ = nterm inclusive_or_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 212
Next token is token ';' (7.17: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (7.16: )
-> $$ = nterm logical_and_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 213
Next token is token ';' (7.17: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (7.16: )
-> $$ = nterm logical_or_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 237
Next token is token ';' (7.17: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (7.16: )
-> $$ = nterm conditional_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (7.16: )
-> $$ = nterm assignment_expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (7.16: )
-> $$ = nterm expression (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 258
Next token is token ';' (7.17: )
Reducing stack by rule 324 (line 1599):
   $1 = nterm expression (7.16: )
-> $$ = nterm expression_opt (7.16: )
Stack now 253 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 354
Next token is token ';' (7.17: )
Shifting token ';' (7.17: )
Entering state 433
Reducing stack by rule 152 (line 921):
   $1 = token RETURN (7.9-13: )
   $2 = nterm expression_opt (7.16: )
   $3 = token ';' (7.17: )
-> $$ = nterm jump_statement (7.9-16: )
Stack now 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 266
Reducing stack by rule 130 (line 809):
   $1 = nterm jump_statement (7.9-16: )
-> $$ = nterm statement (7.9-16: )
Stack now 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 490
Reading a token: Next token is token RETURN (8.5-9: )
Reducing stack by rule 142 (line 868):
-> $$ = nterm else_statement (7.17: )
Stack now 490 466 432 353 252 504 490 466 432 353 252 168 123 121 36 0
Entering state 505
Reducing stack by rule 140 (line 851):
   $1 = token IF (6.10: )
   $2 = token '(' (6.13: )
   $3 = nterm condition (6.14-18: )
   $4 = token ')' (6.20: )
   $5 = nterm statement (7.9-16: )
   $6 = nterm else_statement (7.17: )
-> $$ = nterm selection_statement (6.10-7.16: )
Stack now 504 490 466 432 353 252 168 123 121 36 0
Entering state 264
Reducing stack by rule 128 (line 807):
   $1 = nterm selection_statement (6.10-7.16: )
-> $$ = nterm statement (6.10-7.16: )
Stack now 504 490 466 432 353 252 168 123 121 36 0
Entering state 511
Reducing stack by rule 143 (line 869):
   $1 = token ELSE (6.5-7: )
   $2 = nterm statement (6.10-7.16: )
-> $$ = nterm else_statement (6.5-7.16: )
Stack now 490 466 432 353 252 168 123 121 36 0
Entering state 505
Reducing stack by rule 140 (line 851):
   $1 = token IF (4.5: )
   $2 = token '(' (4.8: )
   $3 = nterm condition (4.9-13: )
   $4 = token ')' (4.15: )
   $5 = nterm statement (5.9-16: )
   $6 = nterm else_statement (6.5-7.16: )
-> $$ = nterm selection_statement (4.5-7.16: )
Stack now 168 123 121 36 0
Entering state 264
Reducing stack by rule 128 (line 807):
   $1 = nterm selection_statement (4.5-7.16: )
-> $$ = nterm statement (4.5-7.16: )
Stack now 168 123 121 36 0
Entering state 259
Reducing stack by rule 138 (line 844):
   $1 = nterm statement (4.5-7.16: )
-> $$ = nterm statement_seq (4.5-7.16: )
Stack now 168 123 121 36 0
Entering state 263
Next token is token RETURN (8.5-9: )
Shifting token RETURN (8.5-9: )
Entering state 253
Reading a token: Next token is token IDENTIFIER (8.12-14: )
Shifting token IDENTIFIER (8.12-14: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.12-14: )
-> $$ = nterm identifier (8.12-14: )
Stack now 253 263 168 123 121 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.12-14: )
-> $$ = nterm unqualified_id (8.12-14: )
Stack now 253 263 168 123 121 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.12-14: )
-> $$ = nterm id_expression (8.12-14: )
Stack now 253 263 168 123 121 36 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.12-14: )
-> $$ = nterm primary_expression (8.12-14: )
Stack now 253 263 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (8.12-14: )
-> $$ = nterm postfix_expression (8.12-14: )
Stack now 253 263 168 123 121 36 0
Entering state 198
Reading a token: Next token is token '(' (8.16: )
Shifting token '(' (8.16: )
Entering state 289
Reading a token: Next token is token IDENTIFIER (8.17: )
Shifting token IDENTIFIER (8.17: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.17: )
-> $$ = nterm identifier (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.17: )
-> $$ = nterm unqualified_id (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.17: )
-> $$ = nterm id_expression (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.17: )
-> $$ = nterm primary_expression (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (8.17: )
-> $$ = nterm postfix_expression (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 198
Reading a token: Next token is token '-' (8.19: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (8.17: )
-> $$ = nterm unary_expression (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (8.17: )
-> $$ = nterm cast_expression (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (8.17: )
-> $$ = nterm pm_expression (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 204
Next token is token '-' (8.19: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (8.17: )
-> $$ = nterm multiplicative_expression (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 205
Next token is token '-' (8.19: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (8.17: )
-> $$ = nterm additive_expression (8.17: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 206
Next token is token '-' (8.19: )
Shifting token '-' (8.19: )
Entering state 298
Reading a token: Next token is token INTVAL (8.21: )
Shifting token INTVAL (8.21: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (8.21: )
-> $$ = nterm int_literal (8.21: )
Stack now 298 206 289 198 253 263 168 123 121 36 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (8.21: )
-> $$ = nterm literal (8.21: )
Stack now 298 206 289 198 253 263 168 123 121 36 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (8.21: )
-> $$ = nterm primary_expression (8.21: )
Stack now 298 206 289 198 253 263 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (8.21: )
-> $$ = nterm postfix_expression (8.21: )
Stack now 298 206 289 198 253 263 168 123 121 36 0
Entering state 198
Reading a token: Next token is token ')' (8.22: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (8.21: )
-> $$ = nterm unary_expression (8.21: )
Stack now 298 206 289 198 253 263 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (8.21: )
-> $$ = nterm cast_expression (8.21: )
Stack now 298 206 289 198 253 263 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (8.21: )
-> $$ = nterm pm_expression (8.21: )
Stack now 298 206 289 198 253 263 168 123 121 36 0
Entering state 204
Next token is token ')' (8.22: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (8.21: )
-> $$ = nterm multiplicative_expression (8.21: )
Stack now 298 206 289 198 253 263 168 123 121 36 0
Entering state 389
Next token is token ')' (8.22: )
Reducing stack by rule 85 (line 588):
   $1 = nterm additive_expression (8.17: )
   $2 = token '-' (8.19: )
   $3 = nterm multiplicative_expression (8.21: )
-> $$ = nterm additive_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 206
Next token is token ')' (8.22: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (8.17-20: )
-> $$ = nterm shift_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 207
Next token is token ')' (8.22: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (8.17-20: )
-> $$ = nterm relational_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 208
Next token is token ')' (8.22: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (8.17-20: )
-> $$ = nterm equality_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 209
Next token is token ')' (8.22: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (8.17-20: )
-> $$ = nterm and_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 210
Next token is token ')' (8.22: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (8.17-20: )
-> $$ = nterm exclusive_or_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 211
Next token is token ')' (8.22: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (8.17-20: )
-> $$ = nterm inclusive_or_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 212
Next token is token ')' (8.22: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (8.17-20: )
-> $$ = nterm logical_and_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 213
Next token is token ')' (8.22: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (8.17-20: )
-> $$ = nterm logical_or_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 237
Next token is token ')' (8.22: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (8.17-20: )
-> $$ = nterm conditional_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (8.17-20: )
-> $$ = nterm assignment_expression (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 242
Reducing stack by rule 43 (line 370):
   $1 = nterm assignment_expression (8.17-20: )
-> $$ = nterm expression_list (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 345
Next token is token ')' (8.22: )
Reducing stack by rule 314 (line 1579):
   $1 = nterm expression_list (8.17-20: )
-> $$ = nterm expression_list_opt (8.17-20: )
Stack now 289 198 253 263 168 123 121 36 0
Entering state 381
Next token is token ')' (8.22: )
Shifting token ')' (8.22: )
Entering state 445
Reducing stack by rule 36 (line 314):
   $1 = nterm postfix_expression (8.12-14: )
   $2 = token '(' (8.16: )
   $3 = nterm expression_list_opt (8.17-20: )
   $4 = token ')' (8.22: )
-> $$ = nterm postfix_expression (8.12-21: )
Stack now 253 263 168 123 121 36 0
Entering state 198
Reading a token: Next token is token '+' (8.24: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (8.12-21: )
-> $$ = nterm unary_expression (8.12-21: )
Stack now 253 263 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (8.12-21: )
-> $$ = nterm cast_expression (8.12-21: )
Stack now 253 263 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (8.12-21: )
-> $$ = nterm pm_expression (8.12-21: )
Stack now 253 263 168 123 121 36 0
Entering state 204
Next token is token '+' (8.24: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (8.12-21: )
-> $$ = nterm multiplicative_expression (8.12-21: )
Stack now 253 263 168 123 121 36 0
Entering state 205
Next token is token '+' (8.24: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (8.12-21: )
-> $$ = nterm additive_expression (8.12-21: )
Stack now 253 263 168 123 121 36 0
Entering state 206
Next token is token '+' (8.24: )
Shifting token '+' (8.24: )
Entering state 297
Reading a token: Next token is token IDENTIFIER (8.26-28: )
Shifting token IDENTIFIER (8.26-28: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.26-28: )
-> $$ = nterm identifier (8.26-28: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.26-28: )
-> $$ = nterm unqualified_id (8.26-28: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.26-28: )
-> $$ = nterm id_expression (8.26-28: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.26-28: )
-> $$ = nterm primary_expression (8.26-28: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (8.26-28: )
-> $$ = nterm postfix_expression (8.26-28: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 198
Reading a token: Next token is token '(' (8.30: )
Shifting token '(' (8.30: )
Entering state 289
Reading a token: Next token is token IDENTIFIER (8.31: )
Shifting token IDENTIFIER (8.31: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.31: )
-> $$ = nterm identifier (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.31: )
-> $$ = nterm unqualified_id (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.31: )
-> $$ = nterm id_expression (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.31: )
-> $$ = nterm primary_expression (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (8.31: )
-> $$ = nterm postfix_expression (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 198
Reading a token: Next token is token '-' (8.33: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (8.31: )
-> $$ = nterm unary_expression (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (8.31: )
-> $$ = nterm cast_expression (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (8.31: )
-> $$ = nterm pm_expression (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 204
Next token is token '-' (8.33: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (8.31: )
-> $$ = nterm multiplicative_expression (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 205
Next token is token '-' (8.33: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (8.31: )
-> $$ = nterm additive_expression (8.31: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 206
Next token is token '-' (8.33: )
Shifting token '-' (8.33: )
Entering state 298
Reading a token: Next token is token INTVAL (8.35: )
Shifting token INTVAL (8.35: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (8.35: )
-> $$ = nterm int_literal (8.35: )
Stack now 298 206 289 198 297 206 253 263 168 123 121 36 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (8.35: )
-> $$ = nterm literal (8.35: )
Stack now 298 206 289 198 297 206 253 263 168 123 121 36 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (8.35: )
-> $$ = nterm primary_expression (8.35: )
Stack now 298 206 289 198 297 206 253 263 168 123 121 36 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (8.35: )
-> $$ = nterm postfix_expression (8.35: )
Stack now 298 206 289 198 297 206 253 263 168 123 121 36 0
Entering state 198
Reading a token: Next token is token ')' (8.36: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (8.35: )
-> $$ = nterm unary_expression (8.35: )
Stack now 298 206 289 198 297 206 253 263 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (8.35: )
-> $$ = nterm cast_expression (8.35: )
Stack now 298 206 289 198 297 206 253 263 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (8.35: )
-> $$ = nterm pm_expression (8.35: )
Stack now 298 206 289 198 297 206 253 263 168 123 121 36 0
Entering state 204
Next token is token ')' (8.36: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (8.35: )
-> $$ = nterm multiplicative_expression (8.35: )
Stack now 298 206 289 198 297 206 253 263 168 123 121 36 0
Entering state 389
Next token is token ')' (8.36: )
Reducing stack by rule 85 (line 588):
   $1 = nterm additive_expression (8.31: )
   $2 = token '-' (8.33: )
   $3 = nterm multiplicative_expression (8.35: )
-> $$ = nterm additive_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 206
Next token is token ')' (8.36: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (8.31-34: )
-> $$ = nterm shift_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 207
Next token is token ')' (8.36: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (8.31-34: )
-> $$ = nterm relational_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 208
Next token is token ')' (8.36: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (8.31-34: )
-> $$ = nterm equality_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 209
Next token is token ')' (8.36: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (8.31-34: )
-> $$ = nterm and_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 210
Next token is token ')' (8.36: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (8.31-34: )
-> $$ = nterm exclusive_or_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 211
Next token is token ')' (8.36: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (8.31-34: )
-> $$ = nterm inclusive_or_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 212
Next token is token ')' (8.36: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (8.31-34: )
-> $$ = nterm logical_and_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 213
Next token is token ')' (8.36: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (8.31-34: )
-> $$ = nterm logical_or_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 237
Next token is token ')' (8.36: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (8.31-34: )
-> $$ = nterm conditional_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (8.31-34: )
-> $$ = nterm assignment_expression (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 242
Reducing stack by rule 43 (line 370):
   $1 = nterm assignment_expression (8.31-34: )
-> $$ = nterm expression_list (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 345
Next token is token ')' (8.36: )
Reducing stack by rule 314 (line 1579):
   $1 = nterm expression_list (8.31-34: )
-> $$ = nterm expression_list_opt (8.31-34: )
Stack now 289 198 297 206 253 263 168 123 121 36 0
Entering state 381
Next token is token ')' (8.36: )
Shifting token ')' (8.36: )
Entering state 445
Reducing stack by rule 36 (line 314):
   $1 = nterm postfix_expression (8.26-28: )
   $2 = token '(' (8.30: )
   $3 = nterm expression_list_opt (8.31-34: )
   $4 = token ')' (8.36: )
-> $$ = nterm postfix_expression (8.26-35: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 198
Reading a token: Next token is token ';' (8.37: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (8.26-35: )
-> $$ = nterm unary_expression (8.26-35: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (8.26-35: )
-> $$ = nterm cast_expression (8.26-35: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (8.26-35: )
-> $$ = nterm pm_expression (8.26-35: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 204
Next token is token ';' (8.37: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (8.26-35: )
-> $$ = nterm multiplicative_expression (8.26-35: )
Stack now 297 206 253 263 168 123 121 36 0
Entering state 388
Next token is token ';' (8.37: )
Reducing stack by rule 84 (line 580):
   $1 = nterm additive_expression (8.12-21: )
   $2 = token '+' (8.24: )
   $3 = nterm multiplicative_expression (8.26-35: )
-> $$ = nterm additive_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 206
Next token is token ';' (8.37: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (8.12-35: )
-> $$ = nterm shift_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 207
Next token is token ';' (8.37: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (8.12-35: )
-> $$ = nterm relational_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 208
Next token is token ';' (8.37: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (8.12-35: )
-> $$ = nterm equality_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 209
Next token is token ';' (8.37: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (8.12-35: )
-> $$ = nterm and_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 210
Next token is token ';' (8.37: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (8.12-35: )
-> $$ = nterm exclusive_or_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 211
Next token is token ';' (8.37: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (8.12-35: )
-> $$ = nterm inclusive_or_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 212
Next token is token ';' (8.37: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (8.12-35: )
-> $$ = nterm logical_and_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 213
Next token is token ';' (8.37: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (8.12-35: )
-> $$ = nterm logical_or_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 237
Next token is token ';' (8.37: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (8.12-35: )
-> $$ = nterm conditional_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (8.12-35: )
-> $$ = nterm assignment_expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (8.12-35: )
-> $$ = nterm expression (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 258
Next token is token ';' (8.37: )
Reducing stack by rule 324 (line 1599):
   $1 = nterm expression (8.12-35: )
-> $$ = nterm expression_opt (8.12-35: )
Stack now 253 263 168 123 121 36 0
Entering state 354
Next token is token ';' (8.37: )
Shifting token ';' (8.37: )
Entering state 433
Reducing stack by rule 152 (line 921):
   $1 = token RETURN (8.5-9: )
   $2 = nterm expression_opt (8.12-35: )
   $3 = token ';' (8.37: )
-> $$ = nterm jump_statement (8.5-36: )
Stack now 263 168 123 121 36 0
Entering state 266
Reducing stack by rule 130 (line 809):
   $1 = nterm jump_statement (8.5-36: )
-> $$ = nterm statement (8.5-36: )
Stack now 263 168 123 121 36 0
Entering state 359
Reducing stack by rule 139 (line 846):
   $1 = nterm statement_seq (4.5-7.16: )
   $2 = nterm statement (8.5-36: )
-> $$ = nterm statement_seq (4.5-8.36: )
Stack now 168 123 121 36 0
Entering state 263
Reading a token: Next token is token '}' (9.1: )
Shifting token '}' (9.1: )
Entering state 358
Reducing stack by rule 137 (line 837):
   $1 = token '{' (3.1: )
   $2 = nterm $@1 (3.1: )
   $3 = nterm statement_seq (4.5-8.36: )
   $4 = token '}' (9.1: )
-> $$ = nterm compound_statement (3.1-9.0: )
Stack now 121 36 0
Entering state 124
Reducing stack by rule 229 (line 1307):
   $1 = nterm compound_statement (3.1-9.0: )
-> $$ = nterm function_body (3.1-9.0: )
Stack now 121 36 0
Entering state 159
Reducing stack by rule 228 (line 1297):
   $1 = nterm decl_specifier_seq (2.1-7: )
   $2 = nterm declarator (2.10-24: )
   $3 = nterm function_body (3.1-9.0: )
-> $$ = nterm function_definition (2.1-9.0: )
Stack now 0
Entering state 48
Reducing stack by rule 157 (line 947):
   $1 = nterm function_definition (2.1-9.0: )
-> $$ = nterm declaration (2.1-9.0: )
Stack now 0
Entering state 32
Reducing stack by rule 154 (line 939):
   $1 = nterm declaration (2.1-9.0: )
-> $$ = nterm declaration_seq (2.1-9.0: )
Stack now 0
Entering state 31
Reading a token: Next token is token LONG (11.1-3: )
Shifting token LONG (11.1-3: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (11.1-3: )
-> $$ = nterm simple_type_specifier (11.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (11.1-3: )
-> $$ = nterm type_specifier (11.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (11.1-3: )
-> $$ = nterm decl_specifier (11.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (11.1-3: )
-> $$ = nterm decl_specifier_seq (11.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (11.6-7: )
Shifting token IDENTIFIER (11.6-7: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (11.6-7: )
-> $$ = nterm identifier (11.6-7: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (11.6-7: )
-> $$ = nterm unqualified_id (11.6-7: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (11.6-7: )
-> $$ = nterm id_expression (11.6-7: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (11.6-7: )
-> $$ = nterm declarator_id (11.6-7: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (11.6-7: )
-> $$ = nterm direct_declarator (11.6-7: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '(' (11.9: )
Shifting token '(' (11.9: )
Entering state 127
Reading a token: Next token is token LONG (11.10-12: )
Shifting token LONG (11.10-12: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (11.10-12: )
-> $$ = nterm simple_type_specifier (11.10-12: )
Stack now 127 43 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (11.10-12: )
-> $$ = nterm type_specifier (11.10-12: )
Stack now 127 43 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (11.10-12: )
-> $$ = nterm decl_specifier (11.10-12: )
Stack now 127 43 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (11.10-12: )
-> $$ = nterm decl_specifier_seq (11.10-12: )
Stack now 127 43 36 31 0
Entering state 170
Reading a token: Next token is token IDENTIFIER (11.15-16: )
Shifting token IDENTIFIER (11.15-16: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (11.15-16: )
-> $$ = nterm identifier (11.15-16: )
Stack now 170 127 43 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (11.15-16: )
-> $$ = nterm unqualified_id (11.15-16: )
Stack now 170 127 43 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (11.15-16: )
-> $$ = nterm id_expression (11.15-16: )
Stack now 170 127 43 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (11.15-16: )
-> $$ = nterm declarator_id (11.15-16: )
Stack now 170 127 43 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (11.15-16: )
-> $$ = nterm direct_declarator (11.15-16: )
Stack now 170 127 43 36 31 0
Entering state 43
Reading a token: Next token is token ')' (11.18: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (11.15-16: )
-> $$ = nterm declarator (11.15-16: )
Stack now 170 127 43 36 31 0
Entering state 272
Next token is token ')' (11.18: )
Reducing stack by rule 339 (line 1630):
-> $$ = nterm assignment_expression_opt (11.17: )
Stack now 272 170 127 43 36 31 0
Entering state 363
Reducing stack by rule 224 (line 1267):
   $1 = nterm decl_specifier_seq (11.10-12: )
   $2 = nterm declarator (11.15-16: )
   $3 = nterm assignment_expression_opt (11.17: )
-> $$ = nterm parameter_declaration (11.10-16: )
Stack now 127 43 36 31 0
Entering state 172
Reducing stack by rule 222 (line 1260):
   $1 = nterm parameter_declaration (11.10-16: )
-> $$ = nterm parameter_declaration_list (11.10-16: )
Stack now 127 43 36 31 0
Entering state 171
Next token is token ')' (11.18: )
Shifting token ')' (11.18: )
Entering state 279
Reading a token: Next token is token '{' (12.1: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (11.18: )
Stack now 279 171 127 43 36 31 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (11.6-7: )
   $2 = token '(' (11.9: )
   $3 = nterm parameter_declaration_list (11.10-16: )
   $4 = token ')' (11.18: )
   $5 = nterm cv_qualifier_opt (11.18: )
-> $$ = nterm direct_declarator (11.6-17: )
Stack now 36 31 0
Entering state 43
Next token is token '{' (12.1: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (11.6-17: )
-> $$ = nterm declarator (11.6-17: )
Stack now 36 31 0
Entering state 121
Next token is token '{' (12.1: )
Shifting token '{' (12.1: )
Entering state 123
Reading a token: Next token is token LONG (13.5-7: )
Reducing stack by rule 136 (line 838):
-> $$ = nterm $@1 (12.1: )
Stack now 123 121 36 31 0
Entering state 168
Next token is token LONG (13.5-7: )
Shifting token LONG (13.5-7: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (13.5-7: )
-> $$ = nterm simple_type_specifier (13.5-7: )
Stack now 168 123 121 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (13.5-7: )
-> $$ = nterm type_specifier (13.5-7: )
Stack now 168 123 121 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (13.5-7: )
-> $$ = nterm decl_specifier (13.5-7: )
Stack now 168 123 121 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (13.5-7: )
-> $$ = nterm decl_specifier_seq (13.5-7: )
Stack now 168 123 121 36 31 0
Entering state 269
Reading a token: Next token is token IDENTIFIER (13.10: )
Shifting token IDENTIFIER (13.10: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (13.10: )
-> $$ = nterm identifier (13.10: )
Stack now 269 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (13.10: )
-> $$ = nterm unqualified_id (13.10: )
Stack now 269 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (13.10: )
-> $$ = nterm id_expression (13.10: )
Stack now 269 168 123 121 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (13.10: )
-> $$ = nterm declarator_id (13.10: )
Stack now 269 168 123 121 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (13.10: )
-> $$ = nterm direct_declarator (13.10: )
Stack now 269 168 123 121 36 31 0
Entering state 43
Reading a token: Next token is token '=' (13.12: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (13.10: )
-> $$ = nterm declarator (13.10: )
Stack now 269 168 123 121 36 31 0
Entering state 235
Next token is token '=' (13.12: )
Shifting token '=' (13.12: )
Entering state 157
Reading a token: Next token is token INTVAL (13.14: )
Shifting token INTVAL (13.14: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (13.14: )
-> $$ = nterm int_literal (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (13.14: )
-> $$ = nterm literal (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (13.14: )
-> $$ = nterm primary_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (13.14: )
-> $$ = nterm postfix_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ',' (13.15: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (13.14: )
-> $$ = nterm unary_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (13.14: )
-> $$ = nterm cast_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (13.14: )
-> $$ = nterm pm_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 204
Next token is token ',' (13.15: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (13.14: )
-> $$ = nterm multiplicative_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 205
Next token is token ',' (13.15: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (13.14: )
-> $$ = nterm additive_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 206
Next token is token ',' (13.15: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (13.14: )
-> $$ = nterm shift_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 207
Next token is token ',' (13.15: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (13.14: )
-> $$ = nterm relational_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 208
Next token is token ',' (13.15: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (13.14: )
-> $$ = nterm equality_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 209
Next token is token ',' (13.15: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (13.14: )
-> $$ = nterm and_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 210
Next token is token ',' (13.15: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (13.14: )
-> $$ = nterm exclusive_or_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 211
Next token is token ',' (13.15: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (13.14: )
-> $$ = nterm inclusive_or_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 212
Next token is token ',' (13.15: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (13.14: )
-> $$ = nterm logical_and_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 213
Next token is token ',' (13.15: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (13.14: )
-> $$ = nterm logical_or_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 237
Next token is token ',' (13.15: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (13.14: )
-> $$ = nterm conditional_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (13.14: )
-> $$ = nterm assignment_expression (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (13.14: )
-> $$ = nterm initializer_clause (13.14: )
Stack now 157 235 269 168 123 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (13.12: )
   $2 = nterm initializer_clause (13.14: )
-> $$ = nterm initializer (13.12-13: )
Stack now 235 269 168 123 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (13.12-13: )
-> $$ = nterm initializer_opt (13.12-13: )
Stack now 235 269 168 123 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (13.10: )
   $2 = nterm initializer_opt (13.12-13: )
-> $$ = nterm init_declarator (13.10-13: )
Stack now 269 168 123 121 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (13.10-13: )
-> $$ = nterm init_declarator_list (13.10-13: )
Stack now 269 168 123 121 36 31 0
Entering state 119
Next token is token ',' (13.15: )
Shifting token ',' (13.15: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (13.17: )
Shifting token IDENTIFIER (13.17: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (13.17: )
-> $$ = nterm identifier (13.17: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (13.17: )
-> $$ = nterm unqualified_id (13.17: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (13.17: )
-> $$ = nterm id_expression (13.17: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (13.17: )
-> $$ = nterm declarator_id (13.17: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (13.17: )
-> $$ = nterm direct_declarator (13.17: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 43
Reading a token: Next token is token '=' (13.19: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (13.17: )
-> $$ = nterm declarator (13.17: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 235
Next token is token '=' (13.19: )
Shifting token '=' (13.19: )
Entering state 157
Reading a token: Next token is token INTVAL (13.21: )
Shifting token INTVAL (13.21: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (13.21: )
-> $$ = nterm int_literal (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (13.21: )
-> $$ = nterm literal (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (13.21: )
-> $$ = nterm primary_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (13.21: )
-> $$ = nterm postfix_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ',' (13.22: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (13.21: )
-> $$ = nterm unary_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (13.21: )
-> $$ = nterm cast_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (13.21: )
-> $$ = nterm pm_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 204
Next token is token ',' (13.22: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (13.21: )
-> $$ = nterm multiplicative_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 205
Next token is token ',' (13.22: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (13.21: )
-> $$ = nterm additive_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 206
Next token is token ',' (13.22: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (13.21: )
-> $$ = nterm shift_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 207
Next token is token ',' (13.22: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (13.21: )
-> $$ = nterm relational_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 208
Next token is token ',' (13.22: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (13.21: )
-> $$ = nterm equality_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 209
Next token is token ',' (13.22: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (13.21: )
-> $$ = nterm and_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 210
Next token is token ',' (13.22: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (13.21: )
-> $$ = nterm exclusive_or_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 211
Next token is token ',' (13.22: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (13.21: )
-> $$ = nterm inclusive_or_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 212
Next token is token ',' (13.22: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (13.21: )
-> $$ = nterm logical_and_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 213
Next token is token ',' (13.22: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (13.21: )
-> $$ = nterm logical_or_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 237
Next token is token ',' (13.22: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (13.21: )
-> $$ = nterm conditional_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (13.21: )
-> $$ = nterm assignment_expression (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (13.21: )
-> $$ = nterm initializer_clause (13.21: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (13.19: )
   $2 = nterm initializer_clause (13.21: )
-> $$ = nterm initializer (13.19-20: )
Stack now 235 155 119 269 168 123 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (13.19-20: )
-> $$ = nterm initializer_opt (13.19-20: )
Stack now 235 155 119 269 168 123 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (13.17: )
   $2 = nterm initializer_opt (13.19-20: )
-> $$ = nterm init_declarator (13.17-20: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (13.10-13: )
   $2 = token ',' (13.15: )
   $3 = nterm init_declarator (13.17-20: )
-> $$ = nterm init_declarator_list (13.10-20: )
Stack now 269 168 123 121 36 31 0
Entering state 119
Next token is token ',' (13.22: )
Shifting token ',' (13.22: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (13.24: )
Shifting token IDENTIFIER (13.24: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (13.24: )
-> $$ = nterm identifier (13.24: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (13.24: )
-> $$ = nterm unqualified_id (13.24: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (13.24: )
-> $$ = nterm id_expression (13.24: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (13.24: )
-> $$ = nterm declarator_id (13.24: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (13.24: )
-> $$ = nterm direct_declarator (13.24: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 43
Reading a token: Next token is token '=' (13.26: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (13.24: )
-> $$ = nterm declarator (13.24: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 235
Next token is token '=' (13.26: )
Shifting token '=' (13.26: )
Entering state 157
Reading a token: Next token is token INTVAL (13.28: )
Shifting token INTVAL (13.28: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (13.28: )
-> $$ = nterm int_literal (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (13.28: )
-> $$ = nterm literal (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (13.28: )
-> $$ = nterm primary_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (13.28: )
-> $$ = nterm postfix_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (13.29: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (13.28: )
-> $$ = nterm unary_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (13.28: )
-> $$ = nterm cast_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (13.28: )
-> $$ = nterm pm_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 204
Next token is token ';' (13.29: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (13.28: )
-> $$ = nterm multiplicative_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 205
Next token is token ';' (13.29: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (13.28: )
-> $$ = nterm additive_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 206
Next token is token ';' (13.29: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (13.28: )
-> $$ = nterm shift_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 207
Next token is token ';' (13.29: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (13.28: )
-> $$ = nterm relational_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 208
Next token is token ';' (13.29: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (13.28: )
-> $$ = nterm equality_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 209
Next token is token ';' (13.29: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (13.28: )
-> $$ = nterm and_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 210
Next token is token ';' (13.29: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (13.28: )
-> $$ = nterm exclusive_or_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 211
Next token is token ';' (13.29: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (13.28: )
-> $$ = nterm inclusive_or_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 212
Next token is token ';' (13.29: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (13.28: )
-> $$ = nterm logical_and_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 213
Next token is token ';' (13.29: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (13.28: )
-> $$ = nterm logical_or_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 237
Next token is token ';' (13.29: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (13.28: )
-> $$ = nterm conditional_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (13.28: )
-> $$ = nterm assignment_expression (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (13.28: )
-> $$ = nterm initializer_clause (13.28: )
Stack now 157 235 155 119 269 168 123 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (13.26: )
   $2 = nterm initializer_clause (13.28: )
-> $$ = nterm initializer (13.26-27: )
Stack now 235 155 119 269 168 123 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (13.26-27: )
-> $$ = nterm initializer_opt (13.26-27: )
Stack now 235 155 119 269 168 123 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (13.24: )
   $2 = nterm initializer_opt (13.26-27: )
-> $$ = nterm init_declarator (13.24-27: )
Stack now 155 119 269 168 123 121 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (13.10-20: )
   $2 = token ',' (13.22: )
   $3 = nterm init_declarator (13.24-27: )
-> $$ = nterm init_declarator_list (13.10-27: )
Stack now 269 168 123 121 36 31 0
Entering state 119
Next token is token ';' (13.29: )
Shifting token ';' (13.29: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (13.5-7: )
   $2 = nterm init_declarator_list (13.10-27: )
   $3 = token ';' (13.29: )
-> $$ = nterm simple_declaration (13.5-28: )
Stack now 168 123 121 36 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (13.5-28: )
-> $$ = nterm block_declaration (13.5-28: )
Stack now 168 123 121 36 31 0
Entering state 268
Reducing stack by rule 153 (line 930):
   $1 = nterm block_declaration (13.5-28: )
-> $$ = nterm declaration_statement (13.5-28: )
Stack now 168 123 121 36 31 0
Entering state 267
Reducing stack by rule 131 (line 810):
   $1 = nterm declaration_statement (13.5-28: )
-> $$ = nterm statement (13.5-28: )
Stack now 168 123 121 36 31 0
Entering state 259
Reducing stack by rule 138 (line 844):
   $1 = nterm statement (13.5-28: )
-> $$ = nterm statement_seq (13.5-28: )
Stack now 168 123 121 36 31 0
Entering state 263
Reading a token: Next token is token FOR (14.5-6: )
Shifting token FOR (14.5-6: )
Entering state 251
Reading a token: Next token is token '(' (14.9: )
Shifting token '(' (14.9: )
Entering state 352
Reading a token: Next token is token LONG (14.10-12: )
Shifting token LONG (14.10-12: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (14.10-12: )
-> $$ = nterm simple_type_specifier (14.10-12: )
Stack now 352 251 263 168 123 121 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (14.10-12: )
-> $$ = nterm type_specifier (14.10-12: )
Stack now 352 251 263 168 123 121 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (14.10-12: )
-> $$ = nterm decl_specifier (14.10-12: )
Stack now 352 251 263 168 123 121 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (14.10-12: )
-> $$ = nterm decl_specifier_seq (14.10-12: )
Stack now 352 251 263 168 123 121 36 31 0
Entering state 269
Reading a token: Next token is token INT (14.15-16: )
Shifting token INT (14.15-16: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (14.15-16: )
-> $$ = nterm simple_type_specifier (14.15-16: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (14.15-16: )
-> $$ = nterm type_specifier (14.15-16: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (14.15-16: )
-> $$ = nterm decl_specifier (14.15-16: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (14.10-12: )
   $2 = nterm decl_specifier (14.15-16: )
-> $$ = nterm decl_specifier_seq (14.10-16: )
Stack now 352 251 263 168 123 121 36 31 0
Entering state 269
Reading a token: Next token is token IDENTIFIER (14.19: )
Shifting token IDENTIFIER (14.19: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (14.19: )
-> $$ = nterm identifier (14.19: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (14.19: )
-> $$ = nterm unqualified_id (14.19: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (14.19: )
-> $$ = nterm id_expression (14.19: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (14.19: )
-> $$ = nterm declarator_id (14.19: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (14.19: )
-> $$ = nterm direct_declarator (14.19: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 43
Reading a token: Next token is token '=' (14.21: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (14.19: )
-> $$ = nterm declarator (14.19: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 235
Next token is token '=' (14.21: )
Shifting token '=' (14.21: )
Entering state 157
Reading a token: Next token is token INTVAL (14.23: )
Shifting token INTVAL (14.23: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (14.23: )
-> $$ = nterm int_literal (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (14.23: )
-> $$ = nterm literal (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (14.23: )
-> $$ = nterm primary_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (14.23: )
-> $$ = nterm postfix_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (14.24: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (14.23: )
-> $$ = nterm unary_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (14.23: )
-> $$ = nterm cast_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (14.23: )
-> $$ = nterm pm_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token ';' (14.24: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (14.23: )
-> $$ = nterm multiplicative_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token ';' (14.24: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (14.23: )
-> $$ = nterm additive_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token ';' (14.24: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (14.23: )
-> $$ = nterm shift_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token ';' (14.24: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (14.23: )
-> $$ = nterm relational_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token ';' (14.24: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (14.23: )
-> $$ = nterm equality_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token ';' (14.24: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (14.23: )
-> $$ = nterm and_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token ';' (14.24: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (14.23: )
-> $$ = nterm exclusive_or_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token ';' (14.24: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (14.23: )
-> $$ = nterm inclusive_or_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token ';' (14.24: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (14.23: )
-> $$ = nterm logical_and_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token ';' (14.24: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (14.23: )
-> $$ = nterm logical_or_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token ';' (14.24: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (14.23: )
-> $$ = nterm conditional_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (14.23: )
-> $$ = nterm assignment_expression (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (14.23: )
-> $$ = nterm initializer_clause (14.23: )
Stack now 157 235 269 352 251 263 168 123 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (14.21: )
   $2 = nterm initializer_clause (14.23: )
-> $$ = nterm initializer (14.21-22: )
Stack now 235 269 352 251 263 168 123 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (14.21-22: )
-> $$ = nterm initializer_opt (14.21-22: )
Stack now 235 269 352 251 263 168 123 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (14.19: )
   $2 = nterm initializer_opt (14.21-22: )
-> $$ = nterm init_declarator (14.19-22: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (14.19-22: )
-> $$ = nterm init_declarator_list (14.19-22: )
Stack now 269 352 251 263 168 123 121 36 31 0
Entering state 119
Next token is token ';' (14.24: )
Shifting token ';' (14.24: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (14.10-16: )
   $2 = nterm init_declarator_list (14.19-22: )
   $3 = token ';' (14.24: )
-> $$ = nterm simple_declaration (14.10-23: )
Stack now 352 251 263 168 123 121 36 31 0
Entering state 430
Reducing stack by rule 149 (line 908):
   $1 = nterm simple_declaration (14.10-23: )
-> $$ = nterm for_init_statement (14.10-23: )
Stack now 352 251 263 168 123 121 36 31 0
Entering state 429
Reading a token: Next token is token IDENTIFIER (14.26: )
Shifting token IDENTIFIER (14.26: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (14.26: )
-> $$ = nterm identifier (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (14.26: )
-> $$ = nterm unqualified_id (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (14.26: )
-> $$ = nterm id_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (14.26: )
-> $$ = nterm primary_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (14.26: )
-> $$ = nterm postfix_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token '<' (14.28: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (14.26: )
-> $$ = nterm unary_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (14.26: )
-> $$ = nterm cast_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (14.26: )
-> $$ = nterm pm_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token '<' (14.28: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (14.26: )
-> $$ = nterm multiplicative_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token '<' (14.28: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (14.26: )
-> $$ = nterm additive_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token '<' (14.28: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (14.26: )
-> $$ = nterm shift_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token '<' (14.28: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (14.26: )
-> $$ = nterm relational_expression (14.26: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token '<' (14.28: )
Shifting token '<' (14.28: )
Entering state 303
Reading a token: Next token is token IDENTIFIER (14.30-31: )
Shifting token IDENTIFIER (14.30-31: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (14.30-31: )
-> $$ = nterm identifier (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (14.30-31: )
-> $$ = nterm unqualified_id (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (14.30-31: )
-> $$ = nterm id_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (14.30-31: )
-> $$ = nterm primary_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (14.30-31: )
-> $$ = nterm postfix_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (14.33: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (14.30-31: )
-> $$ = nterm unary_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (14.30-31: )
-> $$ = nterm cast_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (14.30-31: )
-> $$ = nterm pm_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token ';' (14.33: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (14.30-31: )
-> $$ = nterm multiplicative_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token ';' (14.33: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (14.30-31: )
-> $$ = nterm additive_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token ';' (14.33: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (14.30-31: )
-> $$ = nterm shift_expression (14.30-31: )
Stack now 303 208 429 352 251 263 168 123 121 36 31 0
Entering state 394
Next token is token ';' (14.33: )
Reducing stack by rule 90 (line 622):
   $1 = nterm relational_expression (14.26: )
   $2 = token '<' (14.28: )
   $3 = nterm shift_expression (14.30-31: )
-> $$ = nterm relational_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token ';' (14.33: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (14.26-31: )
-> $$ = nterm equality_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token ';' (14.33: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (14.26-31: )
-> $$ = nterm and_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token ';' (14.33: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (14.26-31: )
-> $$ = nterm exclusive_or_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token ';' (14.33: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (14.26-31: )
-> $$ = nterm inclusive_or_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token ';' (14.33: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (14.26-31: )
-> $$ = nterm logical_and_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token ';' (14.33: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (14.26-31: )
-> $$ = nterm logical_or_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token ';' (14.33: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (14.26-31: )
-> $$ = nterm conditional_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (14.26-31: )
-> $$ = nterm assignment_expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (14.26-31: )
-> $$ = nterm expression (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 431
Next token is token ';' (14.33: )
Reducing stack by rule 144 (line 873):
   $1 = nterm expression (14.26-31: )
-> $$ = nterm condition (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 464
Reducing stack by rule 326 (line 1603):
   $1 = nterm condition (14.26-31: )
-> $$ = nterm condition_opt (14.26-31: )
Stack now 429 352 251 263 168 123 121 36 31 0
Entering state 465
Next token is token ';' (14.33: )
Shifting token ';' (14.33: )
Entering state 489
Reading a token: Next token is token IDENTIFIER (14.35: )
Shifting token IDENTIFIER (14.35: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (14.35: )
-> $$ = nterm identifier (14.35: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (14.35: )
-> $$ = nterm unqualified_id (14.35: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (14.35: )
-> $$ = nterm id_expression (14.35: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (14.35: )
-> $$ = nterm primary_expression (14.35: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (14.35: )
-> $$ = nterm postfix_expression (14.35: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token "++" (14.36: )
Shifting token "++" (14.36: )
Entering state 285
Reducing stack by rule 41 (line 353):
   $1 = nterm postfix_expression (14.35: )
   $2 = token "++" (14.36: )
-> $$ = nterm postfix_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ')' (14.38: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (14.35-36: )
-> $$ = nterm unary_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (14.35-36: )
-> $$ = nterm cast_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (14.35-36: )
-> $$ = nterm pm_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token ')' (14.38: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (14.35-36: )
-> $$ = nterm multiplicative_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token ')' (14.38: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (14.35-36: )
-> $$ = nterm additive_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token ')' (14.38: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (14.35-36: )
-> $$ = nterm shift_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token ')' (14.38: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (14.35-36: )
-> $$ = nterm relational_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token ')' (14.38: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (14.35-36: )
-> $$ = nterm equality_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token ')' (14.38: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (14.35-36: )
-> $$ = nterm and_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token ')' (14.38: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (14.35-36: )
-> $$ = nterm exclusive_or_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token ')' (14.38: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (14.35-36: )
-> $$ = nterm inclusive_or_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token ')' (14.38: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (14.35-36: )
-> $$ = nterm logical_and_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token ')' (14.38: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (14.35-36: )
-> $$ = nterm logical_or_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token ')' (14.38: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (14.35-36: )
-> $$ = nterm conditional_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (14.35-36: )
-> $$ = nterm assignment_expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (14.35-36: )
-> $$ = nterm expression (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 258
Next token is token ')' (14.38: )
Reducing stack by rule 324 (line 1599):
   $1 = nterm expression (14.35-36: )
-> $$ = nterm expression_opt (14.35-36: )
Stack now 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 503
Next token is token ')' (14.38: )
Shifting token ')' (14.38: )
Entering state 510
Reading a token: Next token is token '{' (14.40: )
Shifting token '{' (14.40: )
Entering state 123
Reading a token: Next token is token IDENTIFIER (15.9: )
Reducing stack by rule 136 (line 838):
-> $$ = nterm $@1 (14.40: )
Stack now 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 168
Next token is token IDENTIFIER (15.9: )
Shifting token IDENTIFIER (15.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (15.9: )
-> $$ = nterm identifier (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (15.9: )
-> $$ = nterm unqualified_id (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (15.9: )
-> $$ = nterm id_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (15.9: )
-> $$ = nterm primary_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (15.9: )
-> $$ = nterm postfix_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token '=' (15.11: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (15.9: )
-> $$ = nterm unary_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (15.9: )
-> $$ = nterm cast_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (15.9: )
-> $$ = nterm pm_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token '=' (15.11: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (15.9: )
-> $$ = nterm multiplicative_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token '=' (15.11: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (15.9: )
-> $$ = nterm additive_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token '=' (15.11: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (15.9: )
-> $$ = nterm shift_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token '=' (15.11: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (15.9: )
-> $$ = nterm relational_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token '=' (15.11: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (15.9: )
-> $$ = nterm equality_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token '=' (15.11: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (15.9: )
-> $$ = nterm and_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token '=' (15.11: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (15.9: )
-> $$ = nterm exclusive_or_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token '=' (15.11: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (15.9: )
-> $$ = nterm inclusive_or_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token '=' (15.11: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (15.9: )
-> $$ = nterm logical_and_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token '=' (15.11: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (15.9: )
-> $$ = nterm logical_or_expression (15.9: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token '=' (15.11: )
Shifting token '=' (15.11: )
Entering state 340
Reducing stack by rule 111 (line 769):
   $1 = token '=' (15.11: )
-> $$ = nterm assignment_operator (15.11: )
Stack now 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 341
Reading a token: Next token is token IDENTIFIER (15.13: )
Shifting token IDENTIFIER (15.13: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (15.13: )
-> $$ = nterm identifier (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (15.13: )
-> $$ = nterm unqualified_id (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (15.13: )
-> $$ = nterm id_expression (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (15.13: )
-> $$ = nterm primary_expression (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (15.13: )
-> $$ = nterm postfix_expression (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token '+' (15.15: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (15.13: )
-> $$ = nterm unary_expression (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (15.13: )
-> $$ = nterm cast_expression (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (15.13: )
-> $$ = nterm pm_expression (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token '+' (15.15: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (15.13: )
-> $$ = nterm multiplicative_expression (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token '+' (15.15: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (15.13: )
-> $$ = nterm additive_expression (15.13: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token '+' (15.15: )
Shifting token '+' (15.15: )
Entering state 297
Reading a token: Next token is token IDENTIFIER (15.17: )
Shifting token IDENTIFIER (15.17: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (15.17: )
-> $$ = nterm identifier (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (15.17: )
-> $$ = nterm unqualified_id (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (15.17: )
-> $$ = nterm id_expression (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (15.17: )
-> $$ = nterm primary_expression (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (15.17: )
-> $$ = nterm postfix_expression (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (15.18: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (15.17: )
-> $$ = nterm unary_expression (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (15.17: )
-> $$ = nterm cast_expression (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (15.17: )
-> $$ = nterm pm_expression (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token ';' (15.18: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (15.17: )
-> $$ = nterm multiplicative_expression (15.17: )
Stack now 297 206 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 388
Next token is token ';' (15.18: )
Reducing stack by rule 84 (line 580):
   $1 = nterm additive_expression (15.13: )
   $2 = token '+' (15.15: )
   $3 = nterm multiplicative_expression (15.17: )
-> $$ = nterm additive_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token ';' (15.18: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (15.13-16: )
-> $$ = nterm shift_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token ';' (15.18: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (15.13-16: )
-> $$ = nterm relational_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token ';' (15.18: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (15.13-16: )
-> $$ = nterm equality_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token ';' (15.18: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (15.13-16: )
-> $$ = nterm and_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token ';' (15.18: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (15.13-16: )
-> $$ = nterm exclusive_or_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token ';' (15.18: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (15.13-16: )
-> $$ = nterm inclusive_or_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token ';' (15.18: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (15.13-16: )
-> $$ = nterm logical_and_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token ';' (15.18: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (15.13-16: )
-> $$ = nterm logical_or_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token ';' (15.18: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (15.13-16: )
-> $$ = nterm conditional_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (15.13-16: )
-> $$ = nterm assignment_expression (15.13-16: )
Stack now 341 237 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 422
Reducing stack by rule 110 (line 758):
   $1 = nterm logical_or_expression (15.9: )
   $2 = nterm assignment_operator (15.11: )
   $3 = nterm assignment_expression (15.13-16: )
-> $$ = nterm assignment_expression (15.9-16: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (15.9-16: )
-> $$ = nterm expression (15.9-16: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 258
Next token is token ';' (15.18: )
Reducing stack by rule 324 (line 1599):
   $1 = nterm expression (15.9-16: )
-> $$ = nterm expression_opt (15.9-16: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 270
Next token is token ';' (15.18: )
Shifting token ';' (15.18: )
Entering state 360
Reducing stack by rule 134 (line 830):
   $1 = nterm expression_opt (15.9-16: )
   $2 = token ';' (15.18: )
-> $$ = nterm expression_statement (15.9-17: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 261
Reducing stack by rule 126 (line 805):
   $1 = nterm expression_statement (15.9-17: )
-> $$ = nterm statement (15.9-17: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 259
Reducing stack by rule 138 (line 844):
   $1 = nterm statement (15.9-17: )
-> $$ = nterm statement_seq (15.9-17: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 263
Reading a token: Next token is token IDENTIFIER (16.9: )
Shifting token IDENTIFIER (16.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (16.9: )
-> $$ = nterm identifier (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (16.9: )
-> $$ = nterm unqualified_id (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (16.9: )
-> $$ = nterm id_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (16.9: )
-> $$ = nterm primary_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (16.9: )
-> $$ = nterm postfix_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token '=' (16.11: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (16.9: )
-> $$ = nterm unary_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (16.9: )
-> $$ = nterm cast_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (16.9: )
-> $$ = nterm pm_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token '=' (16.11: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (16.9: )
-> $$ = nterm multiplicative_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token '=' (16.11: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (16.9: )
-> $$ = nterm additive_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token '=' (16.11: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (16.9: )
-> $$ = nterm shift_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token '=' (16.11: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (16.9: )
-> $$ = nterm relational_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token '=' (16.11: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (16.9: )
-> $$ = nterm equality_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token '=' (16.11: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (16.9: )
-> $$ = nterm and_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token '=' (16.11: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (16.9: )
-> $$ = nterm exclusive_or_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token '=' (16.11: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (16.9: )
-> $$ = nterm inclusive_or_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token '=' (16.11: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (16.9: )
-> $$ = nterm logical_and_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token '=' (16.11: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (16.9: )
-> $$ = nterm logical_or_expression (16.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token '=' (16.11: )
Shifting token '=' (16.11: )
Entering state 340
Reducing stack by rule 111 (line 769):
   $1 = token '=' (16.11: )
-> $$ = nterm assignment_operator (16.11: )
Stack now 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 341
Reading a token: Next token is token IDENTIFIER (16.13: )
Shifting token IDENTIFIER (16.13: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (16.13: )
-> $$ = nterm identifier (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (16.13: )
-> $$ = nterm unqualified_id (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (16.13: )
-> $$ = nterm id_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (16.13: )
-> $$ = nterm primary_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (16.13: )
-> $$ = nterm postfix_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (16.14: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (16.13: )
-> $$ = nterm unary_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (16.13: )
-> $$ = nterm cast_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (16.13: )
-> $$ = nterm pm_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token ';' (16.14: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (16.13: )
-> $$ = nterm multiplicative_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token ';' (16.14: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (16.13: )
-> $$ = nterm additive_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token ';' (16.14: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (16.13: )
-> $$ = nterm shift_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token ';' (16.14: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (16.13: )
-> $$ = nterm relational_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token ';' (16.14: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (16.13: )
-> $$ = nterm equality_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token ';' (16.14: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (16.13: )
-> $$ = nterm and_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token ';' (16.14: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (16.13: )
-> $$ = nterm exclusive_or_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token ';' (16.14: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (16.13: )
-> $$ = nterm inclusive_or_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token ';' (16.14: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (16.13: )
-> $$ = nterm logical_and_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token ';' (16.14: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (16.13: )
-> $$ = nterm logical_or_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token ';' (16.14: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (16.13: )
-> $$ = nterm conditional_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (16.13: )
-> $$ = nterm assignment_expression (16.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 422
Reducing stack by rule 110 (line 758):
   $1 = nterm logical_or_expression (16.9: )
   $2 = nterm assignment_operator (16.11: )
   $3 = nterm assignment_expression (16.13: )
-> $$ = nterm assignment_expression (16.9-12: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (16.9-12: )
-> $$ = nterm expression (16.9-12: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 258
Next token is token ';' (16.14: )
Reducing stack by rule 324 (line 1599):
   $1 = nterm expression (16.9-12: )
-> $$ = nterm expression_opt (16.9-12: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 270
Next token is token ';' (16.14: )
Shifting token ';' (16.14: )
Entering state 360
Reducing stack by rule 134 (line 830):
   $1 = nterm expression_opt (16.9-12: )
   $2 = token ';' (16.14: )
-> $$ = nterm expression_statement (16.9-13: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 261
Reducing stack by rule 126 (line 805):
   $1 = nterm expression_statement (16.9-13: )
-> $$ = nterm statement (16.9-13: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 359
Reducing stack by rule 139 (line 846):
   $1 = nterm statement_seq (15.9-17: )
   $2 = nterm statement (16.9-13: )
-> $$ = nterm statement_seq (15.9-16.13: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 263
Reading a token: Next token is token IDENTIFIER (17.9: )
Shifting token IDENTIFIER (17.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (17.9: )
-> $$ = nterm identifier (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (17.9: )
-> $$ = nterm unqualified_id (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (17.9: )
-> $$ = nterm id_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (17.9: )
-> $$ = nterm primary_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (17.9: )
-> $$ = nterm postfix_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token '=' (17.11: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (17.9: )
-> $$ = nterm unary_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (17.9: )
-> $$ = nterm cast_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (17.9: )
-> $$ = nterm pm_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token '=' (17.11: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (17.9: )
-> $$ = nterm multiplicative_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token '=' (17.11: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (17.9: )
-> $$ = nterm additive_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token '=' (17.11: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (17.9: )
-> $$ = nterm shift_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token '=' (17.11: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (17.9: )
-> $$ = nterm relational_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token '=' (17.11: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (17.9: )
-> $$ = nterm equality_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token '=' (17.11: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (17.9: )
-> $$ = nterm and_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token '=' (17.11: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (17.9: )
-> $$ = nterm exclusive_or_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token '=' (17.11: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (17.9: )
-> $$ = nterm inclusive_or_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token '=' (17.11: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (17.9: )
-> $$ = nterm logical_and_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token '=' (17.11: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (17.9: )
-> $$ = nterm logical_or_expression (17.9: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token '=' (17.11: )
Shifting token '=' (17.11: )
Entering state 340
Reducing stack by rule 111 (line 769):
   $1 = token '=' (17.11: )
-> $$ = nterm assignment_operator (17.11: )
Stack now 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 341
Reading a token: Next token is token IDENTIFIER (17.13: )
Shifting token IDENTIFIER (17.13: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (17.13: )
-> $$ = nterm identifier (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (17.13: )
-> $$ = nterm unqualified_id (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (17.13: )
-> $$ = nterm id_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (17.13: )
-> $$ = nterm primary_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (17.13: )
-> $$ = nterm postfix_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (17.14: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (17.13: )
-> $$ = nterm unary_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (17.13: )
-> $$ = nterm cast_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (17.13: )
-> $$ = nterm pm_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 204
Next token is token ';' (17.14: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (17.13: )
-> $$ = nterm multiplicative_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 205
Next token is token ';' (17.14: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (17.13: )
-> $$ = nterm additive_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 206
Next token is token ';' (17.14: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (17.13: )
-> $$ = nterm shift_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 207
Next token is token ';' (17.14: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (17.13: )
-> $$ = nterm relational_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 208
Next token is token ';' (17.14: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (17.13: )
-> $$ = nterm equality_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 209
Next token is token ';' (17.14: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (17.13: )
-> $$ = nterm and_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 210
Next token is token ';' (17.14: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (17.13: )
-> $$ = nterm exclusive_or_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 211
Next token is token ';' (17.14: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (17.13: )
-> $$ = nterm inclusive_or_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 212
Next token is token ';' (17.14: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (17.13: )
-> $$ = nterm logical_and_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 213
Next token is token ';' (17.14: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (17.13: )
-> $$ = nterm logical_or_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 237
Next token is token ';' (17.14: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (17.13: )
-> $$ = nterm conditional_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (17.13: )
-> $$ = nterm assignment_expression (17.13: )
Stack now 341 237 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 422
Reducing stack by rule 110 (line 758):
   $1 = nterm logical_or_expression (17.9: )
   $2 = nterm assignment_operator (17.11: )
   $3 = nterm assignment_expression (17.13: )
-> $$ = nterm assignment_expression (17.9-12: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (17.9-12: )
-> $$ = nterm expression (17.9-12: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 258
Next token is token ';' (17.14: )
Reducing stack by rule 324 (line 1599):
   $1 = nterm expression (17.9-12: )
-> $$ = nterm expression_opt (17.9-12: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 270
Next token is token ';' (17.14: )
Shifting token ';' (17.14: )
Entering state 360
Reducing stack by rule 134 (line 830):
   $1 = nterm expression_opt (17.9-12: )
   $2 = token ';' (17.14: )
-> $$ = nterm expression_statement (17.9-13: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 261
Reducing stack by rule 126 (line 805):
   $1 = nterm expression_statement (17.9-13: )
-> $$ = nterm statement (17.9-13: )
Stack now 263 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 359
Reducing stack by rule 139 (line 846):
   $1 = nterm statement_seq (15.9-16.13: )
   $2 = nterm statement (17.9-13: )
-> $$ = nterm statement_seq (15.9-17.13: )
Stack now 168 123 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 263
Reading a token: Next token is token '}' (18.5: )
Shifting token '}' (18.5: )
Entering state 358
Reducing stack by rule 137 (line 837):
   $1 = token '{' (14.40: )
   $2 = nterm $@1 (14.40: )
   $3 = nterm statement_seq (15.9-17.13: )
   $4 = token '}' (18.5: )
-> $$ = nterm compound_statement (14.40-18.4: )
Stack now 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 262
Reducing stack by rule 127 (line 806):
   $1 = nterm compound_statement (14.40-18.4: )
-> $$ = nterm statement (14.40-18.4: )
Stack now 510 503 489 465 429 352 251 263 168 123 121 36 31 0
Entering state 513
Reducing stack by rule 147 (line 891):
   $1 = token FOR (14.5-6: )
   $2 = token '(' (14.9: )
   $3 = nterm for_init_statement (14.10-23: )
   $4 = nterm condition_opt (14.26-31: )
   $5 = token ';' (14.33: )
   $6 = nterm expression_opt (14.35-36: )
   $7 = token ')' (14.38: )
   $8 = nterm statement (14.40-18.4: )
-> $$ = nterm iteration_statement (14.5-18.4: )
Stack now 263 168 123 121 36 31 0
Entering state 265
Reducing stack by rule 129 (line 808):
   $1 = nterm iteration_statement (14.5-18.4: )
-> $$ = nterm statement (14.5-18.4: )
Stack now 263 168 123 121 36 31 0
Entering state 359
Reducing stack by rule 139 (line 846):
   $1 = nterm statement_seq (13.5-28: )
   $2 = nterm statement (14.5-18.4: )
-> $$ = nterm statement_seq (13.5-18.4: )
Stack now 168 123 121 36 31 0
Entering state 263
Reading a token: Next token is token RETURN (19.5-9: )
Shifting token RETURN (19.5-9: )
Entering state 253
Reading a token: Next token is token IDENTIFIER (19.12: )
Shifting token IDENTIFIER (19.12: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (19.12: )
-> $$ = nterm identifier (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (19.12: )
-> $$ = nterm unqualified_id (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (19.12: )
-> $$ = nterm id_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (19.12: )
-> $$ = nterm primary_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (19.12: )
-> $$ = nterm postfix_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (19.13: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (19.12: )
-> $$ = nterm unary_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (19.12: )
-> $$ = nterm cast_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (19.12: )
-> $$ = nterm pm_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 204
Next token is token ';' (19.13: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (19.12: )
-> $$ = nterm multiplicative_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 205
Next token is token ';' (19.13: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (19.12: )
-> $$ = nterm additive_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 206
Next token is token ';' (19.13: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (19.12: )
-> $$ = nterm shift_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 207
Next token is token ';' (19.13: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (19.12: )
-> $$ = nterm relational_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 208
Next token is token ';' (19.13: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (19.12: )
-> $$ = nterm equality_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 209
Next token is token ';' (19.13: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (19.12: )
-> $$ = nterm and_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 210
Next token is token ';' (19.13: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (19.12: )
-> $$ = nterm exclusive_or_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 211
Next token is token ';' (19.13: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (19.12: )
-> $$ = nterm inclusive_or_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 212
Next token is token ';' (19.13: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (19.12: )
-> $$ = nterm logical_and_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 213
Next token is token ';' (19.13: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (19.12: )
-> $$ = nterm logical_or_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 237
Next token is token ';' (19.13: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (19.12: )
-> $$ = nterm conditional_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (19.12: )
-> $$ = nterm assignment_expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 257
Reducing stack by rule 122 (line 783):
   $1 = nterm assignment_expression (19.12: )
-> $$ = nterm expression (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 258
Next token is token ';' (19.13: )
Reducing stack by rule 324 (line 1599):
   $1 = nterm expression (19.12: )
-> $$ = nterm expression_opt (19.12: )
Stack now 253 263 168 123 121 36 31 0
Entering state 354
Next token is token ';' (19.13: )
Shifting token ';' (19.13: )
Entering state 433
Reducing stack by rule 152 (line 921):
   $1 = token RETURN (19.5-9: )
   $2 = nterm expression_opt (19.12: )
   $3 = token ';' (19.13: )
-> $$ = nterm jump_statement (19.5-12: )
Stack now 263 168 123 121 36 31 0
Entering state 266
Reducing stack by rule 130 (line 809):
   $1 = nterm jump_statement (19.5-12: )
-> $$ = nterm statement (19.5-12: )
Stack now 263 168 123 121 36 31 0
Entering state 359
Reducing stack by rule 139 (line 846):
   $1 = nterm statement_seq (13.5-18.4: )
   $2 = nterm statement (19.5-12: )
-> $$ = nterm statement_seq (13.5-19.12: )
Stack now 168 123 121 36 31 0
Entering state 263
Reading a token: Next token is token '}' (20.1: )
Shifting token '}' (20.1: )
Entering state 358
Reducing stack by rule 137 (line 837):
   $1 = token '{' (12.1: )
   $2 = nterm $@1 (12.1: )
   $3 = nterm statement_seq (13.5-19.12: )
   $4 = token '}' (20.1: )
-> $$ = nterm compound_statement (12.1-20.0: )
Stack now 121 36 31 0
Entering state 124
Reducing stack by rule 229 (line 1307):
   $1 = nterm compound_statement (12.1-20.0: )
-> $$ = nterm function_body (12.1-20.0: )
Stack now 121 36 31 0
Entering state 159
Reducing stack by rule 228 (line 1297):
   $1 = nterm decl_specifier_seq (11.1-3: )
   $2 = nterm declarator (11.6-17: )
   $3 = nterm function_body (12.1-20.0: )
-> $$ = nterm function_definition (11.1-20.0: )
Stack now 31 0
Entering state 48
Reducing stack by rule 157 (line 947):
   $1 = nterm function_definition (11.1-20.0: )
-> $$ = nterm declaration (11.1-20.0: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (2.1-9.0: )
   $2 = nterm declaration (11.1-20.0: )
-> $$ = nterm declaration_seq (2.1-20.0: )
Stack now 0
Entering state 31
Reading a token: Next token is token $end (20.1: )
Reducing stack by rule 16 (line 236):
   $1 = nterm declaration_seq (2.1-20.0: )
-> $$ = nterm translation_unit (2.1-20.0: )
Stack now 0
Entering state 26
Next token is token $end (20.1: )
Shifting token $end (20.1: )
Entering state 113
Cleanup: popping token $end (20.1: )
Cleanup: popping nterm translation_unit (2.1-20.0: )
