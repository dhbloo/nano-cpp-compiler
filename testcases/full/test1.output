Starting parse
Entering state 0
Reading a token: Next token is token INT (9.1-2: )
Shifting token INT (9.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (9.1-2: )
-> $$ = nterm simple_type_specifier (9.1-2: )
Stack now 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (9.1-2: )
-> $$ = nterm type_specifier (9.1-2: )
Stack now 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (9.1-2: )
-> $$ = nterm decl_specifier (9.1-2: )
Stack now 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (9.1-2: )
-> $$ = nterm decl_specifier_seq (9.1-2: )
Stack now 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (9.5: )
Shifting token IDENTIFIER (9.5: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (9.5: )
-> $$ = nterm identifier (9.5: )
Stack now 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (9.5: )
-> $$ = nterm unqualified_id (9.5: )
Stack now 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (9.5: )
-> $$ = nterm id_expression (9.5: )
Stack now 36 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (9.5: )
-> $$ = nterm declarator_id (9.5: )
Stack now 36 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (9.5: )
-> $$ = nterm direct_declarator (9.5: )
Stack now 36 0
Entering state 43
Reading a token: Next token is token ',' (9.6: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (9.5: )
-> $$ = nterm declarator (9.5: )
Stack now 36 0
Entering state 121
Next token is token ',' (9.6: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (9.5: )
Stack now 121 36 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (9.5: )
   $2 = nterm initializer_opt (9.5: )
-> $$ = nterm init_declarator (9.5: )
Stack now 36 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (9.5: )
-> $$ = nterm init_declarator_list (9.5: )
Stack now 36 0
Entering state 119
Next token is token ',' (9.6: )
Shifting token ',' (9.6: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (9.8: )
Shifting token IDENTIFIER (9.8: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (9.8: )
-> $$ = nterm identifier (9.8: )
Stack now 155 119 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (9.8: )
-> $$ = nterm unqualified_id (9.8: )
Stack now 155 119 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (9.8: )
-> $$ = nterm id_expression (9.8: )
Stack now 155 119 36 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (9.8: )
-> $$ = nterm declarator_id (9.8: )
Stack now 155 119 36 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (9.8: )
-> $$ = nterm direct_declarator (9.8: )
Stack now 155 119 36 0
Entering state 43
Reading a token: Next token is token ',' (9.9: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (9.8: )
-> $$ = nterm declarator (9.8: )
Stack now 155 119 36 0
Entering state 235
Next token is token ',' (9.9: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (9.8: )
Stack now 235 155 119 36 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (9.8: )
   $2 = nterm initializer_opt (9.8: )
-> $$ = nterm init_declarator (9.8: )
Stack now 155 119 36 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (9.5: )
   $2 = token ',' (9.6: )
   $3 = nterm init_declarator (9.8: )
-> $$ = nterm init_declarator_list (9.5-7: )
Stack now 36 0
Entering state 119
Next token is token ',' (9.9: )
Shifting token ',' (9.9: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (9.11: )
Shifting token IDENTIFIER (9.11: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (9.11: )
-> $$ = nterm identifier (9.11: )
Stack now 155 119 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (9.11: )
-> $$ = nterm unqualified_id (9.11: )
Stack now 155 119 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (9.11: )
-> $$ = nterm id_expression (9.11: )
Stack now 155 119 36 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (9.11: )
-> $$ = nterm declarator_id (9.11: )
Stack now 155 119 36 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (9.11: )
-> $$ = nterm direct_declarator (9.11: )
Stack now 155 119 36 0
Entering state 43
Reading a token: Next token is token ';' (9.12: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (9.11: )
-> $$ = nterm declarator (9.11: )
Stack now 155 119 36 0
Entering state 235
Next token is token ';' (9.12: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (9.11: )
Stack now 235 155 119 36 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (9.11: )
   $2 = nterm initializer_opt (9.11: )
-> $$ = nterm init_declarator (9.11: )
Stack now 155 119 36 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (9.5-7: )
   $2 = token ',' (9.9: )
   $3 = nterm init_declarator (9.11: )
-> $$ = nterm init_declarator_list (9.5-10: )
Stack now 36 0
Entering state 119
Next token is token ';' (9.12: )
Shifting token ';' (9.12: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (9.1-2: )
   $2 = nterm init_declarator_list (9.5-10: )
   $3 = token ';' (9.12: )
-> $$ = nterm simple_declaration (9.1-11: )
Stack now 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (9.1-11: )
-> $$ = nterm block_declaration (9.1-11: )
Stack now 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (9.1-11: )
-> $$ = nterm declaration (9.1-11: )
Stack now 0
Entering state 32
Reducing stack by rule 154 (line 939):
   $1 = nterm declaration (9.1-11: )
-> $$ = nterm declaration_seq (9.1-11: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (10.1-2: )
Shifting token INT (10.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (10.1-2: )
-> $$ = nterm simple_type_specifier (10.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (10.1-2: )
-> $$ = nterm type_specifier (10.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (10.1-2: )
-> $$ = nterm decl_specifier (10.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (10.1-2: )
-> $$ = nterm decl_specifier_seq (10.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token INTVAL (10.5: )
Reducing stack by rule 315 (line 1582):
-> $$ = nterm name_specifier_opt (10.3: )
Stack now 36 31 0
Entering state 54
Next token is token INTVAL (10.5: )
syntax error, unexpected INTVAL, expecting CLASSNAME or ENUMNAME or TYPEDEFNAME at location 10.5
Error: popping nterm name_specifier_opt (10.3: )
Stack now 36 31 0
Error: popping nterm decl_specifier_seq (10.1-2: )
Stack now 31 0
Error: popping nterm declaration_seq (9.1-11: )
Stack now 0
Cleanup: discarding lookahead token INTVAL (10.5: )
Parsing failed!

