Starting parse
Entering state 0
Reading a token: Next token is token INT (1.1-2: )
Shifting token INT (1.1-2: )
Entering state 11
Reducing stack by rule 175 (line 1020):
   $1 = token INT (1.1-2: )
-> $$ = nterm simple_type_specifier (1.1-2: )
Stack now 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (1.1-2: )
-> $$ = nterm type_specifier (1.1-2: )
Stack now 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (1.1-2: )
-> $$ = nterm decl_specifier (1.1-2: )
Stack now 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (1.1-2: )
-> $$ = nterm decl_specifier_seq (1.1-2: )
Stack now 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (1.5: )
Shifting token IDENTIFIER (1.5: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (1.5: )
-> $$ = nterm identifier (1.5: )
Stack now 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (1.5: )
-> $$ = nterm unqualified_id (1.5: )
Stack now 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (1.5: )
-> $$ = nterm id_expression (1.5: )
Stack now 36 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (1.5: )
-> $$ = nterm declarator_id (1.5: )
Stack now 36 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (1.5: )
-> $$ = nterm direct_declarator (1.5: )
Stack now 36 0
Entering state 43
Reading a token: Next token is token '=' (1.7: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (1.5: )
-> $$ = nterm declarator (1.5: )
Stack now 36 0
Entering state 121
Next token is token '=' (1.7: )
Shifting token '=' (1.7: )
Entering state 158
Reading a token: Next token is token INTVAL (1.9: )
Shifting token INTVAL (1.9: )
Entering state 168
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (1.9: )
-> $$ = nterm int_literal (1.9: )
Stack now 158 121 36 0
Entering state 197
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (1.9: )
-> $$ = nterm literal (1.9: )
Stack now 158 121 36 0
Entering state 196
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (1.9: )
-> $$ = nterm primary_expression (1.9: )
Stack now 158 121 36 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (1.9: )
-> $$ = nterm postfix_expression (1.9: )
Stack now 158 121 36 0
Entering state 205
Reading a token: Next token is token ';' (1.11: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (1.9: )
-> $$ = nterm unary_expression (1.9: )
Stack now 158 121 36 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (1.9: )
-> $$ = nterm cast_expression (1.9: )
Stack now 158 121 36 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (1.9: )
-> $$ = nterm pm_expression (1.9: )
Stack now 158 121 36 0
Entering state 211
Next token is token ';' (1.11: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (1.9: )
-> $$ = nterm multiplicative_expression (1.9: )
Stack now 158 121 36 0
Entering state 212
Next token is token ';' (1.11: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (1.9: )
-> $$ = nterm additive_expression (1.9: )
Stack now 158 121 36 0
Entering state 213
Next token is token ';' (1.11: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (1.9: )
-> $$ = nterm shift_expression (1.9: )
Stack now 158 121 36 0
Entering state 214
Next token is token ';' (1.11: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (1.9: )
-> $$ = nterm relational_expression (1.9: )
Stack now 158 121 36 0
Entering state 215
Next token is token ';' (1.11: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (1.9: )
-> $$ = nterm equality_expression (1.9: )
Stack now 158 121 36 0
Entering state 216
Next token is token ';' (1.11: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (1.9: )
-> $$ = nterm and_expression (1.9: )
Stack now 158 121 36 0
Entering state 217
Next token is token ';' (1.11: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (1.9: )
-> $$ = nterm exclusive_or_expression (1.9: )
Stack now 158 121 36 0
Entering state 218
Next token is token ';' (1.11: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (1.9: )
-> $$ = nterm inclusive_or_expression (1.9: )
Stack now 158 121 36 0
Entering state 219
Next token is token ';' (1.11: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (1.9: )
-> $$ = nterm logical_and_expression (1.9: )
Stack now 158 121 36 0
Entering state 220
Next token is token ';' (1.11: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (1.9: )
-> $$ = nterm logical_or_expression (1.9: )
Stack now 158 121 36 0
Entering state 221
Next token is token ';' (1.11: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (1.9: )
-> $$ = nterm conditional_expression (1.9: )
Stack now 158 121 36 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (1.9: )
-> $$ = nterm assignment_expression (1.9: )
Stack now 158 121 36 0
Entering state 270
Reducing stack by rule 231 (line 1302):
   $1 = nterm assignment_expression (1.9: )
-> $$ = nterm initializer_clause (1.9: )
Stack now 158 121 36 0
Entering state 271
Reducing stack by rule 229 (line 1292):
   $1 = token '=' (1.7: )
   $2 = nterm initializer_clause (1.9: )
-> $$ = nterm initializer (1.7-9: )
Stack now 121 36 0
Entering state 161
Reducing stack by rule 328 (line 1588):
   $1 = nterm initializer (1.7-9: )
-> $$ = nterm initializer_opt (1.7-9: )
Stack now 121 36 0
Entering state 162
Reducing stack by rule 197 (line 1112):
   $1 = nterm declarator (1.5: )
   $2 = nterm initializer_opt (1.7-9: )
-> $$ = nterm init_declarator (1.5-9: )
Stack now 36 0
Entering state 120
Reducing stack by rule 195 (line 1105):
   $1 = nterm init_declarator (1.5-9: )
-> $$ = nterm init_declarator_list (1.5-9: )
Stack now 36 0
Entering state 119
Next token is token ';' (1.11: )
Shifting token ';' (1.11: )
Entering state 157
Reducing stack by rule 159 (line 951):
   $1 = nterm decl_specifier_seq (1.1-2: )
   $2 = nterm init_declarator_list (1.5-9: )
   $3 = token ';' (1.11: )
-> $$ = nterm simple_declaration (1.1-10: )
Stack now 0
Entering state 34
Reducing stack by rule 157 (line 945):
   $1 = nterm simple_declaration (1.1-10: )
-> $$ = nterm block_declaration (1.1-10: )
Stack now 0
Entering state 33
Reducing stack by rule 155 (line 940):
   $1 = nterm block_declaration (1.1-10: )
-> $$ = nterm declaration (1.1-10: )
Stack now 0
Entering state 32
Reducing stack by rule 153 (line 933):
   $1 = nterm declaration (1.1-10: )
-> $$ = nterm declaration_seq (1.1-10: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (2.1-2: )
Shifting token INT (2.1-2: )
Entering state 11
Reducing stack by rule 175 (line 1020):
   $1 = token INT (2.1-2: )
-> $$ = nterm simple_type_specifier (2.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (2.1-2: )
-> $$ = nterm type_specifier (2.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (2.1-2: )
-> $$ = nterm decl_specifier (2.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (2.1-2: )
-> $$ = nterm decl_specifier_seq (2.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (2.5: )
Shifting token IDENTIFIER (2.5: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (2.5: )
-> $$ = nterm identifier (2.5: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (2.5: )
-> $$ = nterm unqualified_id (2.5: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (2.5: )
-> $$ = nterm id_expression (2.5: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (2.5: )
-> $$ = nterm declarator_id (2.5: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (2.5: )
-> $$ = nterm direct_declarator (2.5: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '(' (2.6: )
Shifting token '(' (2.6: )
Entering state 127
Reading a token: Next token is token ')' (2.7: )
Reducing stack by rule 220 (line 1240):
-> $$ = nterm parameter_declaration_list (2.6: )
Stack now 127 43 36 31 0
Entering state 240
Next token is token ')' (2.7: )
Shifting token ')' (2.7: )
Entering state 346
Reading a token: Next token is token '{' (3.1: )
Reducing stack by rule 329 (line 1591):
-> $$ = nterm cv_qualifier_opt (2.7: )
Stack now 346 240 127 43 36 31 0
Entering state 432
Reducing stack by rule 201 (line 1130):
   $1 = nterm direct_declarator (2.5: )
   $2 = token '(' (2.6: )
   $3 = nterm parameter_declaration_list (2.6: )
   $4 = token ')' (2.7: )
   $5 = nterm cv_qualifier_opt (2.7: )
-> $$ = nterm direct_declarator (2.5-6: )
Stack now 36 31 0
Entering state 43
Next token is token '{' (3.1: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (2.5-6: )
-> $$ = nterm declarator (2.5-6: )
Stack now 36 31 0
Entering state 121
Next token is token '{' (3.1: )
Shifting token '{' (3.1: )
Entering state 123
Reading a token: Next token is token INT (4.5-6: )
Shifting token INT (4.5-6: )
Entering state 11
Reducing stack by rule 175 (line 1020):
   $1 = token INT (4.5-6: )
-> $$ = nterm simple_type_specifier (4.5-6: )
Stack now 123 121 36 31 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (4.5-6: )
-> $$ = nterm type_specifier (4.5-6: )
Stack now 123 121 36 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (4.5-6: )
-> $$ = nterm decl_specifier (4.5-6: )
Stack now 123 121 36 31 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (4.5-6: )
-> $$ = nterm decl_specifier_seq (4.5-6: )
Stack now 123 121 36 31 0
Entering state 235
Reading a token: Next token is token IDENTIFIER (4.11: )
Shifting token IDENTIFIER (4.11: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (4.11: )
-> $$ = nterm identifier (4.11: )
Stack now 235 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (4.11: )
-> $$ = nterm unqualified_id (4.11: )
Stack now 235 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (4.11: )
-> $$ = nterm id_expression (4.11: )
Stack now 235 123 121 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (4.11: )
-> $$ = nterm declarator_id (4.11: )
Stack now 235 123 121 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (4.11: )
-> $$ = nterm direct_declarator (4.11: )
Stack now 235 123 121 36 31 0
Entering state 43
Reading a token: Next token is token '=' (4.13: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (4.11: )
-> $$ = nterm declarator (4.11: )
Stack now 235 123 121 36 31 0
Entering state 268
Next token is token '=' (4.13: )
Shifting token '=' (4.13: )
Entering state 158
Reading a token: Next token is token INTVAL (4.15: )
Shifting token INTVAL (4.15: )
Entering state 168
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (4.15: )
-> $$ = nterm int_literal (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 197
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (4.15: )
-> $$ = nterm literal (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 196
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (4.15: )
-> $$ = nterm primary_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (4.15: )
-> $$ = nterm postfix_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ',' (4.16: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (4.15: )
-> $$ = nterm unary_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (4.15: )
-> $$ = nterm cast_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (4.15: )
-> $$ = nterm pm_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 211
Next token is token ',' (4.16: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (4.15: )
-> $$ = nterm multiplicative_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 212
Next token is token ',' (4.16: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (4.15: )
-> $$ = nterm additive_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 213
Next token is token ',' (4.16: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (4.15: )
-> $$ = nterm shift_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 214
Next token is token ',' (4.16: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (4.15: )
-> $$ = nterm relational_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 215
Next token is token ',' (4.16: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (4.15: )
-> $$ = nterm equality_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 216
Next token is token ',' (4.16: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (4.15: )
-> $$ = nterm and_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 217
Next token is token ',' (4.16: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (4.15: )
-> $$ = nterm exclusive_or_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 218
Next token is token ',' (4.16: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (4.15: )
-> $$ = nterm inclusive_or_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 219
Next token is token ',' (4.16: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (4.15: )
-> $$ = nterm logical_and_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 220
Next token is token ',' (4.16: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (4.15: )
-> $$ = nterm logical_or_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 221
Next token is token ',' (4.16: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (4.15: )
-> $$ = nterm conditional_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (4.15: )
-> $$ = nterm assignment_expression (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 270
Reducing stack by rule 231 (line 1302):
   $1 = nterm assignment_expression (4.15: )
-> $$ = nterm initializer_clause (4.15: )
Stack now 158 268 235 123 121 36 31 0
Entering state 271
Reducing stack by rule 229 (line 1292):
   $1 = token '=' (4.13: )
   $2 = nterm initializer_clause (4.15: )
-> $$ = nterm initializer (4.13-14: )
Stack now 268 235 123 121 36 31 0
Entering state 161
Reducing stack by rule 328 (line 1588):
   $1 = nterm initializer (4.13-14: )
-> $$ = nterm initializer_opt (4.13-14: )
Stack now 268 235 123 121 36 31 0
Entering state 162
Reducing stack by rule 197 (line 1112):
   $1 = nterm declarator (4.11: )
   $2 = nterm initializer_opt (4.13-14: )
-> $$ = nterm init_declarator (4.11-14: )
Stack now 235 123 121 36 31 0
Entering state 120
Reducing stack by rule 195 (line 1105):
   $1 = nterm init_declarator (4.11-14: )
-> $$ = nterm init_declarator_list (4.11-14: )
Stack now 235 123 121 36 31 0
Entering state 119
Next token is token ',' (4.16: )
Shifting token ',' (4.16: )
Entering state 156
Reading a token: Next token is token IDENTIFIER (4.18: )
Shifting token IDENTIFIER (4.18: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (4.18: )
-> $$ = nterm identifier (4.18: )
Stack now 156 119 235 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (4.18: )
-> $$ = nterm unqualified_id (4.18: )
Stack now 156 119 235 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (4.18: )
-> $$ = nterm id_expression (4.18: )
Stack now 156 119 235 123 121 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (4.18: )
-> $$ = nterm declarator_id (4.18: )
Stack now 156 119 235 123 121 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (4.18: )
-> $$ = nterm direct_declarator (4.18: )
Stack now 156 119 235 123 121 36 31 0
Entering state 43
Reading a token: Next token is token '=' (4.20: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (4.18: )
-> $$ = nterm declarator (4.18: )
Stack now 156 119 235 123 121 36 31 0
Entering state 268
Next token is token '=' (4.20: )
Shifting token '=' (4.20: )
Entering state 158
Reading a token: Next token is token INTVAL (4.22: )
Shifting token INTVAL (4.22: )
Entering state 168
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (4.22: )
-> $$ = nterm int_literal (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 197
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (4.22: )
-> $$ = nterm literal (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 196
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (4.22: )
-> $$ = nterm primary_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (4.22: )
-> $$ = nterm postfix_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ',' (4.23: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (4.22: )
-> $$ = nterm unary_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (4.22: )
-> $$ = nterm cast_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (4.22: )
-> $$ = nterm pm_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 211
Next token is token ',' (4.23: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (4.22: )
-> $$ = nterm multiplicative_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 212
Next token is token ',' (4.23: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (4.22: )
-> $$ = nterm additive_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 213
Next token is token ',' (4.23: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (4.22: )
-> $$ = nterm shift_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 214
Next token is token ',' (4.23: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (4.22: )
-> $$ = nterm relational_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 215
Next token is token ',' (4.23: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (4.22: )
-> $$ = nterm equality_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 216
Next token is token ',' (4.23: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (4.22: )
-> $$ = nterm and_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 217
Next token is token ',' (4.23: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (4.22: )
-> $$ = nterm exclusive_or_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 218
Next token is token ',' (4.23: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (4.22: )
-> $$ = nterm inclusive_or_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 219
Next token is token ',' (4.23: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (4.22: )
-> $$ = nterm logical_and_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 220
Next token is token ',' (4.23: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (4.22: )
-> $$ = nterm logical_or_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 221
Next token is token ',' (4.23: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (4.22: )
-> $$ = nterm conditional_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (4.22: )
-> $$ = nterm assignment_expression (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 270
Reducing stack by rule 231 (line 1302):
   $1 = nterm assignment_expression (4.22: )
-> $$ = nterm initializer_clause (4.22: )
Stack now 158 268 156 119 235 123 121 36 31 0
Entering state 271
Reducing stack by rule 229 (line 1292):
   $1 = token '=' (4.20: )
   $2 = nterm initializer_clause (4.22: )
-> $$ = nterm initializer (4.20-21: )
Stack now 268 156 119 235 123 121 36 31 0
Entering state 161
Reducing stack by rule 328 (line 1588):
   $1 = nterm initializer (4.20-21: )
-> $$ = nterm initializer_opt (4.20-21: )
Stack now 268 156 119 235 123 121 36 31 0
Entering state 162
Reducing stack by rule 197 (line 1112):
   $1 = nterm declarator (4.18: )
   $2 = nterm initializer_opt (4.20-21: )
-> $$ = nterm init_declarator (4.18-21: )
Stack now 156 119 235 123 121 36 31 0
Entering state 267
Reducing stack by rule 196 (line 1107):
   $1 = nterm init_declarator_list (4.11-14: )
   $2 = token ',' (4.16: )
   $3 = nterm init_declarator (4.18-21: )
-> $$ = nterm init_declarator_list (4.11-21: )
Stack now 235 123 121 36 31 0
Entering state 119
Next token is token ',' (4.23: )
Shifting token ',' (4.23: )
Entering state 156
Reading a token: Next token is token IDENTIFIER (4.25: )
Shifting token IDENTIFIER (4.25: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (4.25: )
-> $$ = nterm identifier (4.25: )
Stack now 156 119 235 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (4.25: )
-> $$ = nterm unqualified_id (4.25: )
Stack now 156 119 235 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (4.25: )
-> $$ = nterm id_expression (4.25: )
Stack now 156 119 235 123 121 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (4.25: )
-> $$ = nterm declarator_id (4.25: )
Stack now 156 119 235 123 121 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (4.25: )
-> $$ = nterm direct_declarator (4.25: )
Stack now 156 119 235 123 121 36 31 0
Entering state 43
Reading a token: Next token is token ';' (4.26: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (4.25: )
-> $$ = nterm declarator (4.25: )
Stack now 156 119 235 123 121 36 31 0
Entering state 268
Next token is token ';' (4.26: )
Reducing stack by rule 327 (line 1587):
-> $$ = nterm initializer_opt (4.25: )
Stack now 268 156 119 235 123 121 36 31 0
Entering state 162
Reducing stack by rule 197 (line 1112):
   $1 = nterm declarator (4.25: )
   $2 = nterm initializer_opt (4.25: )
-> $$ = nterm init_declarator (4.25: )
Stack now 156 119 235 123 121 36 31 0
Entering state 267
Reducing stack by rule 196 (line 1107):
   $1 = nterm init_declarator_list (4.11-21: )
   $2 = token ',' (4.23: )
   $3 = nterm init_declarator (4.25: )
-> $$ = nterm init_declarator_list (4.11-24: )
Stack now 235 123 121 36 31 0
Entering state 119
Next token is token ';' (4.26: )
Shifting token ';' (4.26: )
Entering state 157
Reducing stack by rule 159 (line 951):
   $1 = nterm decl_specifier_seq (4.5-6: )
   $2 = nterm init_declarator_list (4.11-24: )
   $3 = token ';' (4.26: )
-> $$ = nterm simple_declaration (4.5-25: )
Stack now 123 121 36 31 0
Entering state 34
Reducing stack by rule 157 (line 945):
   $1 = nterm simple_declaration (4.5-25: )
-> $$ = nterm block_declaration (4.5-25: )
Stack now 123 121 36 31 0
Entering state 234
Reducing stack by rule 152 (line 924):
   $1 = nterm block_declaration (4.5-25: )
-> $$ = nterm declaration_statement (4.5-25: )
Stack now 123 121 36 31 0
Entering state 233
Reducing stack by rule 131 (line 806):
   $1 = nterm declaration_statement (4.5-25: )
-> $$ = nterm statement (4.5-25: )
Stack now 123 121 36 31 0
Entering state 225
Reducing stack by rule 137 (line 838):
   $1 = nterm statement (4.5-25: )
-> $$ = nterm statement_seq (4.5-25: )
Stack now 123 121 36 31 0
Entering state 229
Reading a token: Next token is token SHORT (5.5-8: )
Shifting token SHORT (5.5-8: )
Entering state 14
Reducing stack by rule 174 (line 1019):
   $1 = token SHORT (5.5-8: )
-> $$ = nterm simple_type_specifier (5.5-8: )
Stack now 229 123 121 36 31 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (5.5-8: )
-> $$ = nterm type_specifier (5.5-8: )
Stack now 229 123 121 36 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (5.5-8: )
-> $$ = nterm decl_specifier (5.5-8: )
Stack now 229 123 121 36 31 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (5.5-8: )
-> $$ = nterm decl_specifier_seq (5.5-8: )
Stack now 229 123 121 36 31 0
Entering state 235
Reading a token: Next token is token IDENTIFIER (5.11: )
Shifting token IDENTIFIER (5.11: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (5.11: )
-> $$ = nterm identifier (5.11: )
Stack now 235 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (5.11: )
-> $$ = nterm unqualified_id (5.11: )
Stack now 235 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (5.11: )
-> $$ = nterm id_expression (5.11: )
Stack now 235 229 123 121 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (5.11: )
-> $$ = nterm declarator_id (5.11: )
Stack now 235 229 123 121 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (5.11: )
-> $$ = nterm direct_declarator (5.11: )
Stack now 235 229 123 121 36 31 0
Entering state 43
Reading a token: Next token is token '=' (5.13: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (5.11: )
-> $$ = nterm declarator (5.11: )
Stack now 235 229 123 121 36 31 0
Entering state 268
Next token is token '=' (5.13: )
Shifting token '=' (5.13: )
Entering state 158
Reading a token: Next token is token INTVAL (5.15: )
Shifting token INTVAL (5.15: )
Entering state 168
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (5.15: )
-> $$ = nterm int_literal (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 197
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (5.15: )
-> $$ = nterm literal (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 196
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (5.15: )
-> $$ = nterm primary_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (5.15: )
-> $$ = nterm postfix_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ';' (5.16: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (5.15: )
-> $$ = nterm unary_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (5.15: )
-> $$ = nterm cast_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (5.15: )
-> $$ = nterm pm_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 211
Next token is token ';' (5.16: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (5.15: )
-> $$ = nterm multiplicative_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 212
Next token is token ';' (5.16: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (5.15: )
-> $$ = nterm additive_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 213
Next token is token ';' (5.16: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (5.15: )
-> $$ = nterm shift_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 214
Next token is token ';' (5.16: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (5.15: )
-> $$ = nterm relational_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 215
Next token is token ';' (5.16: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (5.15: )
-> $$ = nterm equality_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 216
Next token is token ';' (5.16: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (5.15: )
-> $$ = nterm and_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 217
Next token is token ';' (5.16: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (5.15: )
-> $$ = nterm exclusive_or_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 218
Next token is token ';' (5.16: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (5.15: )
-> $$ = nterm inclusive_or_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 219
Next token is token ';' (5.16: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (5.15: )
-> $$ = nterm logical_and_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 220
Next token is token ';' (5.16: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (5.15: )
-> $$ = nterm logical_or_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 221
Next token is token ';' (5.16: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (5.15: )
-> $$ = nterm conditional_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (5.15: )
-> $$ = nterm assignment_expression (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 270
Reducing stack by rule 231 (line 1302):
   $1 = nterm assignment_expression (5.15: )
-> $$ = nterm initializer_clause (5.15: )
Stack now 158 268 235 229 123 121 36 31 0
Entering state 271
Reducing stack by rule 229 (line 1292):
   $1 = token '=' (5.13: )
   $2 = nterm initializer_clause (5.15: )
-> $$ = nterm initializer (5.13-14: )
Stack now 268 235 229 123 121 36 31 0
Entering state 161
Reducing stack by rule 328 (line 1588):
   $1 = nterm initializer (5.13-14: )
-> $$ = nterm initializer_opt (5.13-14: )
Stack now 268 235 229 123 121 36 31 0
Entering state 162
Reducing stack by rule 197 (line 1112):
   $1 = nterm declarator (5.11: )
   $2 = nterm initializer_opt (5.13-14: )
-> $$ = nterm init_declarator (5.11-14: )
Stack now 235 229 123 121 36 31 0
Entering state 120
Reducing stack by rule 195 (line 1105):
   $1 = nterm init_declarator (5.11-14: )
-> $$ = nterm init_declarator_list (5.11-14: )
Stack now 235 229 123 121 36 31 0
Entering state 119
Next token is token ';' (5.16: )
Shifting token ';' (5.16: )
Entering state 157
Reducing stack by rule 159 (line 951):
   $1 = nterm decl_specifier_seq (5.5-8: )
   $2 = nterm init_declarator_list (5.11-14: )
   $3 = token ';' (5.16: )
-> $$ = nterm simple_declaration (5.5-15: )
Stack now 229 123 121 36 31 0
Entering state 34
Reducing stack by rule 157 (line 945):
   $1 = nterm simple_declaration (5.5-15: )
-> $$ = nterm block_declaration (5.5-15: )
Stack now 229 123 121 36 31 0
Entering state 234
Reducing stack by rule 152 (line 924):
   $1 = nterm block_declaration (5.5-15: )
-> $$ = nterm declaration_statement (5.5-15: )
Stack now 229 123 121 36 31 0
Entering state 233
Reducing stack by rule 131 (line 806):
   $1 = nterm declaration_statement (5.5-15: )
-> $$ = nterm statement (5.5-15: )
Stack now 229 123 121 36 31 0
Entering state 334
Reducing stack by rule 138 (line 840):
   $1 = nterm statement_seq (4.5-25: )
   $2 = nterm statement (5.5-15: )
-> $$ = nterm statement_seq (4.5-5.15: )
Stack now 123 121 36 31 0
Entering state 229
Reading a token: Next token is token IDENTIFIER (7.5: )
Shifting token IDENTIFIER (7.5: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (7.5: )
-> $$ = nterm identifier (7.5: )
Stack now 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (7.5: )
-> $$ = nterm unqualified_id (7.5: )
Stack now 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (7.5: )
-> $$ = nterm id_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (7.5: )
-> $$ = nterm primary_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (7.5: )
-> $$ = nterm postfix_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '=' (7.7: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (7.5: )
-> $$ = nterm unary_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (7.5: )
-> $$ = nterm cast_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (7.5: )
-> $$ = nterm pm_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 211
Next token is token '=' (7.7: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (7.5: )
-> $$ = nterm multiplicative_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 212
Next token is token '=' (7.7: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (7.5: )
-> $$ = nterm additive_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 213
Next token is token '=' (7.7: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (7.5: )
-> $$ = nterm shift_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 214
Next token is token '=' (7.7: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (7.5: )
-> $$ = nterm relational_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 215
Next token is token '=' (7.7: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (7.5: )
-> $$ = nterm equality_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 216
Next token is token '=' (7.7: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (7.5: )
-> $$ = nterm and_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 217
Next token is token '=' (7.7: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (7.5: )
-> $$ = nterm exclusive_or_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 218
Next token is token '=' (7.7: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (7.5: )
-> $$ = nterm inclusive_or_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 219
Next token is token '=' (7.7: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (7.5: )
-> $$ = nterm logical_and_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 220
Next token is token '=' (7.7: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (7.5: )
-> $$ = nterm logical_or_expression (7.5: )
Stack now 229 123 121 36 31 0
Entering state 221
Next token is token '=' (7.7: )
Shifting token '=' (7.7: )
Entering state 329
Reducing stack by rule 111 (line 765):
   $1 = token '=' (7.7: )
-> $$ = nterm assignment_operator (7.7: )
Stack now 221 229 123 121 36 31 0
Entering state 331
Reading a token: Next token is token IDENTIFIER (7.9: )
Shifting token IDENTIFIER (7.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (7.9: )
-> $$ = nterm identifier (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (7.9: )
-> $$ = nterm unqualified_id (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (7.9: )
-> $$ = nterm id_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (7.9: )
-> $$ = nterm primary_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (7.9: )
-> $$ = nterm postfix_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ">>" (7.11: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (7.9: )
-> $$ = nterm unary_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (7.9: )
-> $$ = nterm cast_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (7.9: )
-> $$ = nterm pm_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 211
Next token is token ">>" (7.11: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (7.9: )
-> $$ = nterm multiplicative_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 212
Next token is token ">>" (7.11: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (7.9: )
-> $$ = nterm additive_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 213
Next token is token ">>" (7.11: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (7.9: )
-> $$ = nterm shift_expression (7.9: )
Stack now 331 221 229 123 121 36 31 0
Entering state 214
Next token is token ">>" (7.11: )
Shifting token ">>" (7.11: )
Entering state 307
Reading a token: Next token is token INTVAL (7.14: )
Shifting token INTVAL (7.14: )
Entering state 168
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (7.14: )
-> $$ = nterm int_literal (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 197
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (7.14: )
-> $$ = nterm literal (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 196
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (7.14: )
-> $$ = nterm primary_expression (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (7.14: )
-> $$ = nterm postfix_expression (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '|' (7.16: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (7.14: )
-> $$ = nterm unary_expression (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (7.14: )
-> $$ = nterm cast_expression (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (7.14: )
-> $$ = nterm pm_expression (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 211
Next token is token '|' (7.16: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (7.14: )
-> $$ = nterm multiplicative_expression (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 212
Next token is token '|' (7.16: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (7.14: )
-> $$ = nterm additive_expression (7.14: )
Stack now 307 214 331 221 229 123 121 36 31 0
Entering state 404
Next token is token '|' (7.16: )
Reducing stack by rule 88 (line 605):
   $1 = nterm shift_expression (7.9: )
   $2 = token ">>" (7.11: )
   $3 = nterm additive_expression (7.14: )
-> $$ = nterm shift_expression (7.9-13: )
Stack now 331 221 229 123 121 36 31 0
Entering state 214
Next token is token '|' (7.16: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (7.9-13: )
-> $$ = nterm relational_expression (7.9-13: )
Stack now 331 221 229 123 121 36 31 0
Entering state 215
Next token is token '|' (7.16: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (7.9-13: )
-> $$ = nterm equality_expression (7.9-13: )
Stack now 331 221 229 123 121 36 31 0
Entering state 216
Next token is token '|' (7.16: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (7.9-13: )
-> $$ = nterm and_expression (7.9-13: )
Stack now 331 221 229 123 121 36 31 0
Entering state 217
Next token is token '|' (7.16: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (7.9-13: )
-> $$ = nterm exclusive_or_expression (7.9-13: )
Stack now 331 221 229 123 121 36 31 0
Entering state 218
Next token is token '|' (7.16: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (7.9-13: )
-> $$ = nterm inclusive_or_expression (7.9-13: )
Stack now 331 221 229 123 121 36 31 0
Entering state 219
Next token is token '|' (7.16: )
Shifting token '|' (7.16: )
Entering state 316
Reading a token: Next token is token IDENTIFIER (7.18: )
Shifting token IDENTIFIER (7.18: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (7.18: )
-> $$ = nterm identifier (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (7.18: )
-> $$ = nterm unqualified_id (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (7.18: )
-> $$ = nterm id_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (7.18: )
-> $$ = nterm primary_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (7.18: )
-> $$ = nterm postfix_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token "<<" (7.20: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (7.18: )
-> $$ = nterm unary_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (7.18: )
-> $$ = nterm cast_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (7.18: )
-> $$ = nterm pm_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 211
Next token is token "<<" (7.20: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (7.18: )
-> $$ = nterm multiplicative_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 212
Next token is token "<<" (7.20: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (7.18: )
-> $$ = nterm additive_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 213
Next token is token "<<" (7.20: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (7.18: )
-> $$ = nterm shift_expression (7.18: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 214
Next token is token "<<" (7.20: )
Shifting token "<<" (7.20: )
Entering state 306
Reading a token: Next token is token INTVAL (7.23: )
Shifting token INTVAL (7.23: )
Entering state 168
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (7.23: )
-> $$ = nterm int_literal (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 197
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (7.23: )
-> $$ = nterm literal (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 196
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (7.23: )
-> $$ = nterm primary_expression (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (7.23: )
-> $$ = nterm postfix_expression (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ';' (7.24: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (7.23: )
-> $$ = nterm unary_expression (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (7.23: )
-> $$ = nterm cast_expression (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (7.23: )
-> $$ = nterm pm_expression (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 211
Next token is token ';' (7.24: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (7.23: )
-> $$ = nterm multiplicative_expression (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 212
Next token is token ';' (7.24: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (7.23: )
-> $$ = nterm additive_expression (7.23: )
Stack now 306 214 316 219 331 221 229 123 121 36 31 0
Entering state 403
Next token is token ';' (7.24: )
Reducing stack by rule 87 (line 597):
   $1 = nterm shift_expression (7.18: )
   $2 = token "<<" (7.20: )
   $3 = nterm additive_expression (7.23: )
-> $$ = nterm shift_expression (7.18-22: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 214
Next token is token ';' (7.24: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (7.18-22: )
-> $$ = nterm relational_expression (7.18-22: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 215
Next token is token ';' (7.24: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (7.18-22: )
-> $$ = nterm equality_expression (7.18-22: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 216
Next token is token ';' (7.24: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (7.18-22: )
-> $$ = nterm and_expression (7.18-22: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 217
Next token is token ';' (7.24: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (7.18-22: )
-> $$ = nterm exclusive_or_expression (7.18-22: )
Stack now 316 219 331 221 229 123 121 36 31 0
Entering state 413
Next token is token ';' (7.24: )
Reducing stack by rule 102 (line 702):
   $1 = nterm inclusive_or_expression (7.9-13: )
   $2 = token '|' (7.16: )
   $3 = nterm exclusive_or_expression (7.18-22: )
-> $$ = nterm inclusive_or_expression (7.9-22: )
Stack now 331 221 229 123 121 36 31 0
Entering state 219
Next token is token ';' (7.24: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (7.9-22: )
-> $$ = nterm logical_and_expression (7.9-22: )
Stack now 331 221 229 123 121 36 31 0
Entering state 220
Next token is token ';' (7.24: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (7.9-22: )
-> $$ = nterm logical_or_expression (7.9-22: )
Stack now 331 221 229 123 121 36 31 0
Entering state 221
Next token is token ';' (7.24: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (7.9-22: )
-> $$ = nterm conditional_expression (7.9-22: )
Stack now 331 221 229 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (7.9-22: )
-> $$ = nterm assignment_expression (7.9-22: )
Stack now 331 221 229 123 121 36 31 0
Entering state 417
Reducing stack by rule 110 (line 754):
   $1 = nterm logical_or_expression (7.5: )
   $2 = nterm assignment_operator (7.7: )
   $3 = nterm assignment_expression (7.9-22: )
-> $$ = nterm assignment_expression (7.5-22: )
Stack now 229 123 121 36 31 0
Entering state 223
Reducing stack by rule 122 (line 779):
   $1 = nterm assignment_expression (7.5-22: )
-> $$ = nterm expression (7.5-22: )
Stack now 229 123 121 36 31 0
Entering state 224
Next token is token ';' (7.24: )
Reducing stack by rule 322 (line 1576):
   $1 = nterm expression (7.5-22: )
-> $$ = nterm expression_opt (7.5-22: )
Stack now 229 123 121 36 31 0
Entering state 237
Next token is token ';' (7.24: )
Shifting token ';' (7.24: )
Entering state 337
Reducing stack by rule 134 (line 826):
   $1 = nterm expression_opt (7.5-22: )
   $2 = token ';' (7.24: )
-> $$ = nterm expression_statement (7.5-23: )
Stack now 229 123 121 36 31 0
Entering state 227
Reducing stack by rule 126 (line 801):
   $1 = nterm expression_statement (7.5-23: )
-> $$ = nterm statement (7.5-23: )
Stack now 229 123 121 36 31 0
Entering state 334
Reducing stack by rule 138 (line 840):
   $1 = nterm statement_seq (4.5-5.15: )
   $2 = nterm statement (7.5-23: )
-> $$ = nterm statement_seq (4.5-7.23: )
Stack now 123 121 36 31 0
Entering state 229
Reading a token: Next token is token RETURN (8.5-9: )
Shifting token RETURN (8.5-9: )
Entering state 183
Reading a token: Next token is token IDENTIFIER (8.12: )
Shifting token IDENTIFIER (8.12: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.12: )
-> $$ = nterm identifier (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.12: )
-> $$ = nterm unqualified_id (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.12: )
-> $$ = nterm id_expression (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.12: )
-> $$ = nterm primary_expression (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (8.12: )
-> $$ = nterm postfix_expression (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '*' (8.14: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (8.12: )
-> $$ = nterm unary_expression (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (8.12: )
-> $$ = nterm cast_expression (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (8.12: )
-> $$ = nterm pm_expression (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 211
Next token is token '*' (8.14: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (8.12: )
-> $$ = nterm multiplicative_expression (8.12: )
Stack now 183 229 123 121 36 31 0
Entering state 212
Next token is token '*' (8.14: )
Shifting token '*' (8.14: )
Entering state 301
Reading a token: Next token is token IDENTIFIER (8.16: )
Shifting token IDENTIFIER (8.16: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.16: )
-> $$ = nterm identifier (8.16: )
Stack now 301 212 183 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.16: )
-> $$ = nterm unqualified_id (8.16: )
Stack now 301 212 183 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.16: )
-> $$ = nterm id_expression (8.16: )
Stack now 301 212 183 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.16: )
-> $$ = nterm primary_expression (8.16: )
Stack now 301 212 183 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (8.16: )
-> $$ = nterm postfix_expression (8.16: )
Stack now 301 212 183 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '%' (8.18: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (8.16: )
-> $$ = nterm unary_expression (8.16: )
Stack now 301 212 183 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (8.16: )
-> $$ = nterm cast_expression (8.16: )
Stack now 301 212 183 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (8.16: )
-> $$ = nterm pm_expression (8.16: )
Stack now 301 212 183 229 123 121 36 31 0
Entering state 398
Next token is token '%' (8.18: )
Reducing stack by rule 80 (line 547):
   $1 = nterm multiplicative_expression (8.12: )
   $2 = token '*' (8.14: )
   $3 = nterm pm_expression (8.16: )
-> $$ = nterm multiplicative_expression (8.12-15: )
Stack now 183 229 123 121 36 31 0
Entering state 212
Next token is token '%' (8.18: )
Shifting token '%' (8.18: )
Entering state 303
Reading a token: Next token is token IDENTIFIER (8.20: )
Shifting token IDENTIFIER (8.20: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.20: )
-> $$ = nterm identifier (8.20: )
Stack now 303 212 183 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.20: )
-> $$ = nterm unqualified_id (8.20: )
Stack now 303 212 183 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.20: )
-> $$ = nterm id_expression (8.20: )
Stack now 303 212 183 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.20: )
-> $$ = nterm primary_expression (8.20: )
Stack now 303 212 183 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (8.20: )
-> $$ = nterm postfix_expression (8.20: )
Stack now 303 212 183 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '+' (8.22: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (8.20: )
-> $$ = nterm unary_expression (8.20: )
Stack now 303 212 183 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (8.20: )
-> $$ = nterm cast_expression (8.20: )
Stack now 303 212 183 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (8.20: )
-> $$ = nterm pm_expression (8.20: )
Stack now 303 212 183 229 123 121 36 31 0
Entering state 400
Next token is token '+' (8.22: )
Reducing stack by rule 82 (line 563):
   $1 = nterm multiplicative_expression (8.12-15: )
   $2 = token '%' (8.18: )
   $3 = nterm pm_expression (8.20: )
-> $$ = nterm multiplicative_expression (8.12-19: )
Stack now 183 229 123 121 36 31 0
Entering state 212
Next token is token '+' (8.22: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (8.12-19: )
-> $$ = nterm additive_expression (8.12-19: )
Stack now 183 229 123 121 36 31 0
Entering state 213
Next token is token '+' (8.22: )
Shifting token '+' (8.22: )
Entering state 304
Reading a token: Next token is token IDENTIFIER (8.24: )
Shifting token IDENTIFIER (8.24: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.24: )
-> $$ = nterm identifier (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.24: )
-> $$ = nterm unqualified_id (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.24: )
-> $$ = nterm id_expression (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.24: )
-> $$ = nterm primary_expression (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (8.24: )
-> $$ = nterm postfix_expression (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '*' (8.26: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (8.24: )
-> $$ = nterm unary_expression (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (8.24: )
-> $$ = nterm cast_expression (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (8.24: )
-> $$ = nterm pm_expression (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 211
Next token is token '*' (8.26: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (8.24: )
-> $$ = nterm multiplicative_expression (8.24: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 401
Next token is token '*' (8.26: )
Shifting token '*' (8.26: )
Entering state 301
Reading a token: Next token is token IDENTIFIER (8.28: )
Shifting token IDENTIFIER (8.28: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.28: )
-> $$ = nterm identifier (8.28: )
Stack now 301 401 304 213 183 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.28: )
-> $$ = nterm unqualified_id (8.28: )
Stack now 301 401 304 213 183 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.28: )
-> $$ = nterm id_expression (8.28: )
Stack now 301 401 304 213 183 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.28: )
-> $$ = nterm primary_expression (8.28: )
Stack now 301 401 304 213 183 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (8.28: )
-> $$ = nterm postfix_expression (8.28: )
Stack now 301 401 304 213 183 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '/' (8.30: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (8.28: )
-> $$ = nterm unary_expression (8.28: )
Stack now 301 401 304 213 183 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (8.28: )
-> $$ = nterm cast_expression (8.28: )
Stack now 301 401 304 213 183 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (8.28: )
-> $$ = nterm pm_expression (8.28: )
Stack now 301 401 304 213 183 229 123 121 36 31 0
Entering state 398
Next token is token '/' (8.30: )
Reducing stack by rule 80 (line 547):
   $1 = nterm multiplicative_expression (8.24: )
   $2 = token '*' (8.26: )
   $3 = nterm pm_expression (8.28: )
-> $$ = nterm multiplicative_expression (8.24-27: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 401
Next token is token '/' (8.30: )
Shifting token '/' (8.30: )
Entering state 302
Reading a token: Next token is token IDENTIFIER (8.32: )
Shifting token IDENTIFIER (8.32: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.32: )
-> $$ = nterm identifier (8.32: )
Stack now 302 401 304 213 183 229 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.32: )
-> $$ = nterm unqualified_id (8.32: )
Stack now 302 401 304 213 183 229 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.32: )
-> $$ = nterm id_expression (8.32: )
Stack now 302 401 304 213 183 229 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (8.32: )
-> $$ = nterm primary_expression (8.32: )
Stack now 302 401 304 213 183 229 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (8.32: )
-> $$ = nterm postfix_expression (8.32: )
Stack now 302 401 304 213 183 229 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ';' (8.33: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (8.32: )
-> $$ = nterm unary_expression (8.32: )
Stack now 302 401 304 213 183 229 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (8.32: )
-> $$ = nterm cast_expression (8.32: )
Stack now 302 401 304 213 183 229 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (8.32: )
-> $$ = nterm pm_expression (8.32: )
Stack now 302 401 304 213 183 229 123 121 36 31 0
Entering state 399
Next token is token ';' (8.33: )
Reducing stack by rule 81 (line 555):
   $1 = nterm multiplicative_expression (8.24-27: )
   $2 = token '/' (8.30: )
   $3 = nterm pm_expression (8.32: )
-> $$ = nterm multiplicative_expression (8.24-31: )
Stack now 304 213 183 229 123 121 36 31 0
Entering state 401
Next token is token ';' (8.33: )
Reducing stack by rule 84 (line 576):
   $1 = nterm additive_expression (8.12-19: )
   $2 = token '+' (8.22: )
   $3 = nterm multiplicative_expression (8.24-31: )
-> $$ = nterm additive_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 213
Next token is token ';' (8.33: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (8.12-31: )
-> $$ = nterm shift_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 214
Next token is token ';' (8.33: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (8.12-31: )
-> $$ = nterm relational_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 215
Next token is token ';' (8.33: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (8.12-31: )
-> $$ = nterm equality_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 216
Next token is token ';' (8.33: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (8.12-31: )
-> $$ = nterm and_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 217
Next token is token ';' (8.33: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (8.12-31: )
-> $$ = nterm exclusive_or_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 218
Next token is token ';' (8.33: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (8.12-31: )
-> $$ = nterm inclusive_or_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 219
Next token is token ';' (8.33: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (8.12-31: )
-> $$ = nterm logical_and_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 220
Next token is token ';' (8.33: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (8.12-31: )
-> $$ = nterm logical_or_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 221
Next token is token ';' (8.33: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (8.12-31: )
-> $$ = nterm conditional_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (8.12-31: )
-> $$ = nterm assignment_expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 223
Reducing stack by rule 122 (line 779):
   $1 = nterm assignment_expression (8.12-31: )
-> $$ = nterm expression (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 224
Next token is token ';' (8.33: )
Reducing stack by rule 322 (line 1576):
   $1 = nterm expression (8.12-31: )
-> $$ = nterm expression_opt (8.12-31: )
Stack now 183 229 123 121 36 31 0
Entering state 284
Next token is token ';' (8.33: )
Shifting token ';' (8.33: )
Entering state 380
Reducing stack by rule 151 (line 915):
   $1 = token RETURN (8.5-9: )
   $2 = nterm expression_opt (8.12-31: )
   $3 = token ';' (8.33: )
-> $$ = nterm jump_statement (8.5-32: )
Stack now 229 123 121 36 31 0
Entering state 232
Reducing stack by rule 130 (line 805):
   $1 = nterm jump_statement (8.5-32: )
-> $$ = nterm statement (8.5-32: )
Stack now 229 123 121 36 31 0
Entering state 334
Reducing stack by rule 138 (line 840):
   $1 = nterm statement_seq (4.5-7.23: )
   $2 = nterm statement (8.5-32: )
-> $$ = nterm statement_seq (4.5-8.32: )
Stack now 123 121 36 31 0
Entering state 229
Reading a token: Next token is token '}' (9.1: )
Shifting token '}' (9.1: )
Entering state 333
Reducing stack by rule 136 (line 833):
   $1 = token '{' (3.1: )
   $2 = nterm statement_seq (4.5-8.32: )
   $3 = token '}' (9.1: )
-> $$ = nterm compound_statement (3.1-9.0: )
Stack now 121 36 31 0
Entering state 124
Reducing stack by rule 228 (line 1288):
   $1 = nterm compound_statement (3.1-9.0: )
-> $$ = nterm function_body (3.1-9.0: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 227 (line 1278):
   $1 = nterm decl_specifier_seq (2.1-2: )
   $2 = nterm declarator (2.5-6: )
   $3 = nterm function_body (3.1-9.0: )
-> $$ = nterm function_definition (2.1-9.0: )
Stack now 31 0
Entering state 48
Reducing stack by rule 156 (line 941):
   $1 = nterm function_definition (2.1-9.0: )
-> $$ = nterm declaration (2.1-9.0: )
Stack now 31 0
Entering state 116
Reducing stack by rule 154 (line 935):
   $1 = nterm declaration_seq (1.1-10: )
   $2 = nterm declaration (2.1-9.0: )
-> $$ = nterm declaration_seq (1.1-9.0: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (11.1-2: )
Shifting token INT (11.1-2: )
Entering state 11
Reducing stack by rule 175 (line 1020):
   $1 = token INT (11.1-2: )
-> $$ = nterm simple_type_specifier (11.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (11.1-2: )
-> $$ = nterm type_specifier (11.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (11.1-2: )
-> $$ = nterm decl_specifier (11.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (11.1-2: )
-> $$ = nterm decl_specifier_seq (11.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (11.5-6: )
Shifting token IDENTIFIER (11.5-6: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (11.5-6: )
-> $$ = nterm identifier (11.5-6: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (11.5-6: )
-> $$ = nterm unqualified_id (11.5-6: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (11.5-6: )
-> $$ = nterm id_expression (11.5-6: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (11.5-6: )
-> $$ = nterm declarator_id (11.5-6: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (11.5-6: )
-> $$ = nterm direct_declarator (11.5-6: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '(' (11.8: )
Shifting token '(' (11.8: )
Entering state 127
Reading a token: Next token is token INT (11.9-10: )
Shifting token INT (11.9-10: )
Entering state 11
Reducing stack by rule 175 (line 1020):
   $1 = token INT (11.9-10: )
-> $$ = nterm simple_type_specifier (11.9-10: )
Stack now 127 43 36 31 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (11.9-10: )
-> $$ = nterm type_specifier (11.9-10: )
Stack now 127 43 36 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (11.9-10: )
-> $$ = nterm decl_specifier (11.9-10: )
Stack now 127 43 36 31 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (11.9-10: )
-> $$ = nterm decl_specifier_seq (11.9-10: )
Stack now 127 43 36 31 0
Entering state 239
Reading a token: Next token is token IDENTIFIER (11.13: )
Shifting token IDENTIFIER (11.13: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (11.13: )
-> $$ = nterm identifier (11.13: )
Stack now 239 127 43 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (11.13: )
-> $$ = nterm unqualified_id (11.13: )
Stack now 239 127 43 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (11.13: )
-> $$ = nterm id_expression (11.13: )
Stack now 239 127 43 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (11.13: )
-> $$ = nterm declarator_id (11.13: )
Stack now 239 127 43 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (11.13: )
-> $$ = nterm direct_declarator (11.13: )
Stack now 239 127 43 36 31 0
Entering state 43
Reading a token: Next token is token ',' (11.14: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (11.13: )
-> $$ = nterm declarator (11.13: )
Stack now 239 127 43 36 31 0
Entering state 339
Next token is token ',' (11.14: )
Reducing stack by rule 335 (line 1603):
-> $$ = nterm assignment_expression_opt (11.13: )
Stack now 339 239 127 43 36 31 0
Entering state 426
Reducing stack by rule 223 (line 1248):
   $1 = nterm decl_specifier_seq (11.9-10: )
   $2 = nterm declarator (11.13: )
   $3 = nterm assignment_expression_opt (11.13: )
-> $$ = nterm parameter_declaration (11.9-12: )
Stack now 127 43 36 31 0
Entering state 241
Reducing stack by rule 221 (line 1241):
   $1 = nterm parameter_declaration (11.9-12: )
-> $$ = nterm parameter_declaration_list (11.9-12: )
Stack now 127 43 36 31 0
Entering state 240
Next token is token ',' (11.14: )
Shifting token ',' (11.14: )
Entering state 345
Reading a token: Next token is token INT (11.16-17: )
Shifting token INT (11.16-17: )
Entering state 11
Reducing stack by rule 175 (line 1020):
   $1 = token INT (11.16-17: )
-> $$ = nterm simple_type_specifier (11.16-17: )
Stack now 345 240 127 43 36 31 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (11.16-17: )
-> $$ = nterm type_specifier (11.16-17: )
Stack now 345 240 127 43 36 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (11.16-17: )
-> $$ = nterm decl_specifier (11.16-17: )
Stack now 345 240 127 43 36 31 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (11.16-17: )
-> $$ = nterm decl_specifier_seq (11.16-17: )
Stack now 345 240 127 43 36 31 0
Entering state 239
Reading a token: Next token is token IDENTIFIER (11.20: )
Shifting token IDENTIFIER (11.20: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (11.20: )
-> $$ = nterm identifier (11.20: )
Stack now 239 345 240 127 43 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (11.20: )
-> $$ = nterm unqualified_id (11.20: )
Stack now 239 345 240 127 43 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (11.20: )
-> $$ = nterm id_expression (11.20: )
Stack now 239 345 240 127 43 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (11.20: )
-> $$ = nterm declarator_id (11.20: )
Stack now 239 345 240 127 43 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (11.20: )
-> $$ = nterm direct_declarator (11.20: )
Stack now 239 345 240 127 43 36 31 0
Entering state 43
Reading a token: Next token is token ')' (11.21: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (11.20: )
-> $$ = nterm declarator (11.20: )
Stack now 239 345 240 127 43 36 31 0
Entering state 339
Next token is token ')' (11.21: )
Reducing stack by rule 335 (line 1603):
-> $$ = nterm assignment_expression_opt (11.20: )
Stack now 339 239 345 240 127 43 36 31 0
Entering state 426
Reducing stack by rule 223 (line 1248):
   $1 = nterm decl_specifier_seq (11.16-17: )
   $2 = nterm declarator (11.20: )
   $3 = nterm assignment_expression_opt (11.20: )
-> $$ = nterm parameter_declaration (11.16-19: )
Stack now 345 240 127 43 36 31 0
Entering state 431
Reducing stack by rule 222 (line 1243):
   $1 = nterm parameter_declaration_list (11.9-12: )
   $2 = token ',' (11.14: )
   $3 = nterm parameter_declaration (11.16-19: )
-> $$ = nterm parameter_declaration_list (11.9-19: )
Stack now 127 43 36 31 0
Entering state 240
Next token is token ')' (11.21: )
Shifting token ')' (11.21: )
Entering state 346
Reading a token: Next token is token '{' (11.23: )
Reducing stack by rule 329 (line 1591):
-> $$ = nterm cv_qualifier_opt (11.21: )
Stack now 346 240 127 43 36 31 0
Entering state 432
Reducing stack by rule 201 (line 1130):
   $1 = nterm direct_declarator (11.5-6: )
   $2 = token '(' (11.8: )
   $3 = nterm parameter_declaration_list (11.9-19: )
   $4 = token ')' (11.21: )
   $5 = nterm cv_qualifier_opt (11.21: )
-> $$ = nterm direct_declarator (11.5-20: )
Stack now 36 31 0
Entering state 43
Next token is token '{' (11.23: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (11.5-20: )
-> $$ = nterm declarator (11.5-20: )
Stack now 36 31 0
Entering state 121
Next token is token '{' (11.23: )
Shifting token '{' (11.23: )
Entering state 123
Reading a token: Next token is token RETURN (12.5-9: )
Shifting token RETURN (12.5-9: )
Entering state 183
Reading a token: Next token is token IDENTIFIER (12.12: )
Shifting token IDENTIFIER (12.12: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (12.12: )
-> $$ = nterm identifier (12.12: )
Stack now 183 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (12.12: )
-> $$ = nterm unqualified_id (12.12: )
Stack now 183 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (12.12: )
-> $$ = nterm id_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (12.12: )
-> $$ = nterm primary_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (12.12: )
-> $$ = nterm postfix_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '>' (12.14: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (12.12: )
-> $$ = nterm unary_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (12.12: )
-> $$ = nterm cast_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (12.12: )
-> $$ = nterm pm_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 211
Next token is token '>' (12.14: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (12.12: )
-> $$ = nterm multiplicative_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 212
Next token is token '>' (12.14: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (12.12: )
-> $$ = nterm additive_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 213
Next token is token '>' (12.14: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (12.12: )
-> $$ = nterm shift_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 214
Next token is token '>' (12.14: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (12.12: )
-> $$ = nterm relational_expression (12.12: )
Stack now 183 123 121 36 31 0
Entering state 215
Next token is token '>' (12.14: )
Shifting token '>' (12.14: )
Entering state 311
Reading a token: Next token is token IDENTIFIER (12.16: )
Shifting token IDENTIFIER (12.16: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (12.16: )
-> $$ = nterm identifier (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (12.16: )
-> $$ = nterm unqualified_id (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (12.16: )
-> $$ = nterm id_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (12.16: )
-> $$ = nterm primary_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (12.16: )
-> $$ = nterm postfix_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '?' (12.18: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (12.16: )
-> $$ = nterm unary_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (12.16: )
-> $$ = nterm cast_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (12.16: )
-> $$ = nterm pm_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 211
Next token is token '?' (12.18: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (12.16: )
-> $$ = nterm multiplicative_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 212
Next token is token '?' (12.18: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (12.16: )
-> $$ = nterm additive_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 213
Next token is token '?' (12.18: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (12.16: )
-> $$ = nterm shift_expression (12.16: )
Stack now 311 215 183 123 121 36 31 0
Entering state 408
Next token is token '?' (12.18: )
Reducing stack by rule 91 (line 626):
   $1 = nterm relational_expression (12.12: )
   $2 = token '>' (12.14: )
   $3 = nterm shift_expression (12.16: )
-> $$ = nterm relational_expression (12.12-15: )
Stack now 183 123 121 36 31 0
Entering state 215
Next token is token '?' (12.18: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (12.12-15: )
-> $$ = nterm equality_expression (12.12-15: )
Stack now 183 123 121 36 31 0
Entering state 216
Next token is token '?' (12.18: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (12.12-15: )
-> $$ = nterm and_expression (12.12-15: )
Stack now 183 123 121 36 31 0
Entering state 217
Next token is token '?' (12.18: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (12.12-15: )
-> $$ = nterm exclusive_or_expression (12.12-15: )
Stack now 183 123 121 36 31 0
Entering state 218
Next token is token '?' (12.18: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (12.12-15: )
-> $$ = nterm inclusive_or_expression (12.12-15: )
Stack now 183 123 121 36 31 0
Entering state 219
Next token is token '?' (12.18: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (12.12-15: )
-> $$ = nterm logical_and_expression (12.12-15: )
Stack now 183 123 121 36 31 0
Entering state 220
Next token is token '?' (12.18: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (12.12-15: )
-> $$ = nterm logical_or_expression (12.12-15: )
Stack now 183 123 121 36 31 0
Entering state 221
Next token is token '?' (12.18: )
Shifting token '?' (12.18: )
Entering state 330
Reading a token: Next token is token IDENTIFIER (12.20: )
Shifting token IDENTIFIER (12.20: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (12.20: )
-> $$ = nterm identifier (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (12.20: )
-> $$ = nterm unqualified_id (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (12.20: )
-> $$ = nterm id_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (12.20: )
-> $$ = nterm primary_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (12.20: )
-> $$ = nterm postfix_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ':' (12.22: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (12.20: )
-> $$ = nterm unary_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (12.20: )
-> $$ = nterm cast_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (12.20: )
-> $$ = nterm pm_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 211
Next token is token ':' (12.22: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (12.20: )
-> $$ = nterm multiplicative_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 212
Next token is token ':' (12.22: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (12.20: )
-> $$ = nterm additive_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 213
Next token is token ':' (12.22: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (12.20: )
-> $$ = nterm shift_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 214
Next token is token ':' (12.22: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (12.20: )
-> $$ = nterm relational_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 215
Next token is token ':' (12.22: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (12.20: )
-> $$ = nterm equality_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 216
Next token is token ':' (12.22: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (12.20: )
-> $$ = nterm and_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 217
Next token is token ':' (12.22: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (12.20: )
-> $$ = nterm exclusive_or_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 218
Next token is token ':' (12.22: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (12.20: )
-> $$ = nterm inclusive_or_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 219
Next token is token ':' (12.22: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (12.20: )
-> $$ = nterm logical_and_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 220
Next token is token ':' (12.22: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (12.20: )
-> $$ = nterm logical_or_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 221
Next token is token ':' (12.22: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (12.20: )
-> $$ = nterm conditional_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (12.20: )
-> $$ = nterm assignment_expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 223
Reducing stack by rule 122 (line 779):
   $1 = nterm assignment_expression (12.20: )
-> $$ = nterm expression (12.20: )
Stack now 330 221 183 123 121 36 31 0
Entering state 416
Next token is token ':' (12.22: )
Shifting token ':' (12.22: )
Entering state 460
Reading a token: Next token is token IDENTIFIER (12.24: )
Shifting token IDENTIFIER (12.24: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (12.24: )
-> $$ = nterm identifier (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (12.24: )
-> $$ = nterm unqualified_id (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (12.24: )
-> $$ = nterm id_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (12.24: )
-> $$ = nterm primary_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (12.24: )
-> $$ = nterm postfix_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ';' (12.25: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (12.24: )
-> $$ = nterm unary_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (12.24: )
-> $$ = nterm cast_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (12.24: )
-> $$ = nterm pm_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 211
Next token is token ';' (12.25: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (12.24: )
-> $$ = nterm multiplicative_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 212
Next token is token ';' (12.25: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (12.24: )
-> $$ = nterm additive_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 213
Next token is token ';' (12.25: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (12.24: )
-> $$ = nterm shift_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 214
Next token is token ';' (12.25: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (12.24: )
-> $$ = nterm relational_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 215
Next token is token ';' (12.25: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (12.24: )
-> $$ = nterm equality_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 216
Next token is token ';' (12.25: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (12.24: )
-> $$ = nterm and_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 217
Next token is token ';' (12.25: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (12.24: )
-> $$ = nterm exclusive_or_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 218
Next token is token ';' (12.25: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (12.24: )
-> $$ = nterm inclusive_or_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 219
Next token is token ';' (12.25: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (12.24: )
-> $$ = nterm logical_and_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 220
Next token is token ';' (12.25: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (12.24: )
-> $$ = nterm logical_or_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 221
Next token is token ';' (12.25: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (12.24: )
-> $$ = nterm conditional_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (12.24: )
-> $$ = nterm assignment_expression (12.24: )
Stack now 460 416 330 221 183 123 121 36 31 0
Entering state 483
Reducing stack by rule 108 (line 741):
   $1 = nterm logical_or_expression (12.12-15: )
   $2 = token '?' (12.18: )
   $3 = nterm expression (12.20: )
   $4 = token ':' (12.22: )
   $5 = nterm assignment_expression (12.24: )
-> $$ = nterm conditional_expression (12.12-23: )
Stack now 183 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (12.12-23: )
-> $$ = nterm assignment_expression (12.12-23: )
Stack now 183 123 121 36 31 0
Entering state 223
Reducing stack by rule 122 (line 779):
   $1 = nterm assignment_expression (12.12-23: )
-> $$ = nterm expression (12.12-23: )
Stack now 183 123 121 36 31 0
Entering state 224
Next token is token ';' (12.25: )
Reducing stack by rule 322 (line 1576):
   $1 = nterm expression (12.12-23: )
-> $$ = nterm expression_opt (12.12-23: )
Stack now 183 123 121 36 31 0
Entering state 284
Next token is token ';' (12.25: )
Shifting token ';' (12.25: )
Entering state 380
Reducing stack by rule 151 (line 915):
   $1 = token RETURN (12.5-9: )
   $2 = nterm expression_opt (12.12-23: )
   $3 = token ';' (12.25: )
-> $$ = nterm jump_statement (12.5-24: )
Stack now 123 121 36 31 0
Entering state 232
Reducing stack by rule 130 (line 805):
   $1 = nterm jump_statement (12.5-24: )
-> $$ = nterm statement (12.5-24: )
Stack now 123 121 36 31 0
Entering state 225
Reducing stack by rule 137 (line 838):
   $1 = nterm statement (12.5-24: )
-> $$ = nterm statement_seq (12.5-24: )
Stack now 123 121 36 31 0
Entering state 229
Reading a token: Next token is token '}' (13.1: )
Shifting token '}' (13.1: )
Entering state 333
Reducing stack by rule 136 (line 833):
   $1 = token '{' (11.23: )
   $2 = nterm statement_seq (12.5-24: )
   $3 = token '}' (13.1: )
-> $$ = nterm compound_statement (11.23-13.0: )
Stack now 121 36 31 0
Entering state 124
Reducing stack by rule 228 (line 1288):
   $1 = nterm compound_statement (11.23-13.0: )
-> $$ = nterm function_body (11.23-13.0: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 227 (line 1278):
   $1 = nterm decl_specifier_seq (11.1-2: )
   $2 = nterm declarator (11.5-20: )
   $3 = nterm function_body (11.23-13.0: )
-> $$ = nterm function_definition (11.1-13.0: )
Stack now 31 0
Entering state 48
Reducing stack by rule 156 (line 941):
   $1 = nterm function_definition (11.1-13.0: )
-> $$ = nterm declaration (11.1-13.0: )
Stack now 31 0
Entering state 116
Reducing stack by rule 154 (line 935):
   $1 = nterm declaration_seq (1.1-9.0: )
   $2 = nterm declaration (11.1-13.0: )
-> $$ = nterm declaration_seq (1.1-13.0: )
Stack now 0
Entering state 31
Reading a token: Next token is token VOID (15.1-3: )
Shifting token VOID (15.1-3: )
Entering state 20
Reducing stack by rule 181 (line 1026):
   $1 = token VOID (15.1-3: )
-> $$ = nterm simple_type_specifier (15.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (15.1-3: )
-> $$ = nterm type_specifier (15.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (15.1-3: )
-> $$ = nterm decl_specifier (15.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (15.1-3: )
-> $$ = nterm decl_specifier_seq (15.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (15.6-9: )
Shifting token IDENTIFIER (15.6-9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (15.6-9: )
-> $$ = nterm identifier (15.6-9: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (15.6-9: )
-> $$ = nterm unqualified_id (15.6-9: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (15.6-9: )
-> $$ = nterm id_expression (15.6-9: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (15.6-9: )
-> $$ = nterm declarator_id (15.6-9: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (15.6-9: )
-> $$ = nterm direct_declarator (15.6-9: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '(' (15.11: )
Shifting token '(' (15.11: )
Entering state 127
Reading a token: Next token is token CONST (15.12-15: )
Shifting token CONST (15.12-15: )
Entering state 6
Reducing stack by rule 209 (line 1177):
   $1 = token CONST (15.12-15: )
-> $$ = nterm cv_qualifier (15.12-15: )
Stack now 127 43 36 31 0
Entering state 46
Reducing stack by rule 171 (line 1008):
   $1 = nterm cv_qualifier (15.12-15: )
-> $$ = nterm type_specifier (15.12-15: )
Stack now 127 43 36 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (15.12-15: )
-> $$ = nterm decl_specifier (15.12-15: )
Stack now 127 43 36 31 0
Entering state 35
Reducing stack by rule 164 (line 971):
   $1 = nterm decl_specifier (15.12-15: )
-> $$ = nterm decl_specifier_seq (15.12-15: )
Stack now 127 43 36 31 0
Entering state 239
Reading a token: Next token is token INT (15.18-19: )
Shifting token INT (15.18-19: )
Entering state 11
Reducing stack by rule 175 (line 1020):
   $1 = token INT (15.18-19: )
-> $$ = nterm simple_type_specifier (15.18-19: )
Stack now 239 127 43 36 31 0
Entering state 39
Reducing stack by rule 167 (line 988):
   $1 = nterm simple_type_specifier (15.18-19: )
-> $$ = nterm type_specifier (15.18-19: )
Stack now 239 127 43 36 31 0
Entering state 38
Reducing stack by rule 160 (line 960):
   $1 = nterm type_specifier (15.18-19: )
-> $$ = nterm decl_specifier (15.18-19: )
Stack now 239 127 43 36 31 0
Entering state 118
Reducing stack by rule 165 (line 973):
   $1 = nterm decl_specifier_seq (15.12-15: )
   $2 = nterm decl_specifier (15.18-19: )
-> $$ = nterm decl_specifier_seq (15.12-19: )
Stack now 127 43 36 31 0
Entering state 239
Reading a token: Next token is token '&' (15.22: )
Shifting token '&' (15.22: )
Entering state 22
Reducing stack by rule 207 (line 1166):
   $1 = token '&' (15.22: )
-> $$ = nterm ptr_operator (15.22: )
Stack now 239 127 43 36 31 0
Entering state 45
Reading a token: Next token is token IDENTIFIER (15.23: )
Reducing stack by rule 204 (line 1154):
   $1 = nterm ptr_operator (15.22: )
-> $$ = nterm ptr_operator_list (15.22: )
Stack now 239 127 43 36 31 0
Entering state 340
Next token is token IDENTIFIER (15.23: )
Shifting token IDENTIFIER (15.23: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (15.23: )
-> $$ = nterm identifier (15.23: )
Stack now 340 239 127 43 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (15.23: )
-> $$ = nterm unqualified_id (15.23: )
Stack now 340 239 127 43 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (15.23: )
-> $$ = nterm id_expression (15.23: )
Stack now 340 239 127 43 36 31 0
Entering state 27
Reducing stack by rule 210 (line 1181):
   $1 = nterm id_expression (15.23: )
-> $$ = nterm declarator_id (15.23: )
Stack now 340 239 127 43 36 31 0
Entering state 47
Reducing stack by rule 200 (line 1128):
   $1 = nterm declarator_id (15.23: )
-> $$ = nterm direct_declarator (15.23: )
Stack now 340 239 127 43 36 31 0
Entering state 130
Reading a token: Next token is token ')' (15.24: )
Reducing stack by rule 199 (line 1123):
   $1 = nterm ptr_operator_list (15.22: )
   $2 = nterm direct_declarator (15.23: )
-> $$ = nterm declarator (15.22: )
Stack now 239 127 43 36 31 0
Entering state 339
Next token is token ')' (15.24: )
Reducing stack by rule 335 (line 1603):
-> $$ = nterm assignment_expression_opt (15.23: )
Stack now 339 239 127 43 36 31 0
Entering state 426
Reducing stack by rule 223 (line 1248):
   $1 = nterm decl_specifier_seq (15.12-19: )
   $2 = nterm declarator (15.22: )
   $3 = nterm assignment_expression_opt (15.23: )
-> $$ = nterm parameter_declaration (15.12-22: )
Stack now 127 43 36 31 0
Entering state 241
Reducing stack by rule 221 (line 1241):
   $1 = nterm parameter_declaration (15.12-22: )
-> $$ = nterm parameter_declaration_list (15.12-22: )
Stack now 127 43 36 31 0
Entering state 240
Next token is token ')' (15.24: )
Shifting token ')' (15.24: )
Entering state 346
Reading a token: Next token is token '{' (15.26: )
Reducing stack by rule 329 (line 1591):
-> $$ = nterm cv_qualifier_opt (15.24: )
Stack now 346 240 127 43 36 31 0
Entering state 432
Reducing stack by rule 201 (line 1130):
   $1 = nterm direct_declarator (15.6-9: )
   $2 = token '(' (15.11: )
   $3 = nterm parameter_declaration_list (15.12-22: )
   $4 = token ')' (15.24: )
   $5 = nterm cv_qualifier_opt (15.24: )
-> $$ = nterm direct_declarator (15.6-23: )
Stack now 36 31 0
Entering state 43
Next token is token '{' (15.26: )
Reducing stack by rule 198 (line 1121):
   $1 = nterm direct_declarator (15.6-23: )
-> $$ = nterm declarator (15.6-23: )
Stack now 36 31 0
Entering state 121
Next token is token '{' (15.26: )
Shifting token '{' (15.26: )
Entering state 123
Reading a token: Next token is token IF (16.5: )
Shifting token IF (16.5: )
Entering state 182
Reading a token: Next token is token '(' (16.8: )
Shifting token '(' (16.8: )
Entering state 283
Reading a token: Next token is token IDENTIFIER (16.9: )
Shifting token IDENTIFIER (16.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (16.9: )
-> $$ = nterm identifier (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (16.9: )
-> $$ = nterm unqualified_id (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (16.9: )
-> $$ = nterm id_expression (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (16.9: )
-> $$ = nterm primary_expression (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (16.9: )
-> $$ = nterm postfix_expression (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '+' (16.11: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (16.9: )
-> $$ = nterm unary_expression (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (16.9: )
-> $$ = nterm cast_expression (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (16.9: )
-> $$ = nterm pm_expression (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 211
Next token is token '+' (16.11: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (16.9: )
-> $$ = nterm multiplicative_expression (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 212
Next token is token '+' (16.11: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (16.9: )
-> $$ = nterm additive_expression (16.9: )
Stack now 283 182 123 121 36 31 0
Entering state 213
Next token is token '+' (16.11: )
Shifting token '+' (16.11: )
Entering state 304
Reading a token: Next token is token IDENTIFIER (16.13: )
Shifting token IDENTIFIER (16.13: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (16.13: )
-> $$ = nterm identifier (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (16.13: )
-> $$ = nterm unqualified_id (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (16.13: )
-> $$ = nterm id_expression (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (16.13: )
-> $$ = nterm primary_expression (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (16.13: )
-> $$ = nterm postfix_expression (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '>' (16.15: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (16.13: )
-> $$ = nterm unary_expression (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (16.13: )
-> $$ = nterm cast_expression (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (16.13: )
-> $$ = nterm pm_expression (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 211
Next token is token '>' (16.15: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (16.13: )
-> $$ = nterm multiplicative_expression (16.13: )
Stack now 304 213 283 182 123 121 36 31 0
Entering state 401
Next token is token '>' (16.15: )
Reducing stack by rule 84 (line 576):
   $1 = nterm additive_expression (16.9: )
   $2 = token '+' (16.11: )
   $3 = nterm multiplicative_expression (16.13: )
-> $$ = nterm additive_expression (16.9-12: )
Stack now 283 182 123 121 36 31 0
Entering state 213
Next token is token '>' (16.15: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (16.9-12: )
-> $$ = nterm shift_expression (16.9-12: )
Stack now 283 182 123 121 36 31 0
Entering state 214
Next token is token '>' (16.15: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (16.9-12: )
-> $$ = nterm relational_expression (16.9-12: )
Stack now 283 182 123 121 36 31 0
Entering state 215
Next token is token '>' (16.15: )
Shifting token '>' (16.15: )
Entering state 311
Reading a token: Next token is token INTVAL (16.17: )
Shifting token INTVAL (16.17: )
Entering state 168
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (16.17: )
-> $$ = nterm int_literal (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 197
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (16.17: )
-> $$ = nterm literal (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 196
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (16.17: )
-> $$ = nterm primary_expression (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (16.17: )
-> $$ = nterm postfix_expression (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ')' (16.18: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (16.17: )
-> $$ = nterm unary_expression (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (16.17: )
-> $$ = nterm cast_expression (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (16.17: )
-> $$ = nterm pm_expression (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 211
Next token is token ')' (16.18: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (16.17: )
-> $$ = nterm multiplicative_expression (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 212
Next token is token ')' (16.18: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (16.17: )
-> $$ = nterm additive_expression (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 213
Next token is token ')' (16.18: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (16.17: )
-> $$ = nterm shift_expression (16.17: )
Stack now 311 215 283 182 123 121 36 31 0
Entering state 408
Next token is token ')' (16.18: )
Reducing stack by rule 91 (line 626):
   $1 = nterm relational_expression (16.9-12: )
   $2 = token '>' (16.15: )
   $3 = nterm shift_expression (16.17: )
-> $$ = nterm relational_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 215
Next token is token ')' (16.18: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (16.9-16: )
-> $$ = nterm equality_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 216
Next token is token ')' (16.18: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (16.9-16: )
-> $$ = nterm and_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 217
Next token is token ')' (16.18: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (16.9-16: )
-> $$ = nterm exclusive_or_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 218
Next token is token ')' (16.18: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (16.9-16: )
-> $$ = nterm inclusive_or_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 219
Next token is token ')' (16.18: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (16.9-16: )
-> $$ = nterm logical_and_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 220
Next token is token ')' (16.18: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (16.9-16: )
-> $$ = nterm logical_or_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 221
Next token is token ')' (16.18: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (16.9-16: )
-> $$ = nterm conditional_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (16.9-16: )
-> $$ = nterm assignment_expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 223
Reducing stack by rule 122 (line 779):
   $1 = nterm assignment_expression (16.9-16: )
-> $$ = nterm expression (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 378
Next token is token ')' (16.18: )
Reducing stack by rule 143 (line 867):
   $1 = nterm expression (16.9-16: )
-> $$ = nterm condition (16.9-16: )
Stack now 283 182 123 121 36 31 0
Entering state 379
Next token is token ')' (16.18: )
Shifting token ')' (16.18: )
Entering state 451
Reading a token: Next token is token IDENTIFIER (17.9-12: )
Shifting token IDENTIFIER (17.9-12: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (17.9-12: )
-> $$ = nterm identifier (17.9-12: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (17.9-12: )
-> $$ = nterm unqualified_id (17.9-12: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (17.9-12: )
-> $$ = nterm id_expression (17.9-12: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (17.9-12: )
-> $$ = nterm primary_expression (17.9-12: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (17.9-12: )
-> $$ = nterm postfix_expression (17.9-12: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '(' (17.14: )
Shifting token '(' (17.14: )
Entering state 296
Reading a token: Next token is token IDENTIFIER (17.15: )
Shifting token IDENTIFIER (17.15: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (17.15: )
-> $$ = nterm identifier (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (17.15: )
-> $$ = nterm unqualified_id (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (17.15: )
-> $$ = nterm id_expression (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (17.15: )
-> $$ = nterm primary_expression (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (17.15: )
-> $$ = nterm postfix_expression (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token '-' (17.17: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (17.15: )
-> $$ = nterm unary_expression (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (17.15: )
-> $$ = nterm cast_expression (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (17.15: )
-> $$ = nterm pm_expression (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 211
Next token is token '-' (17.17: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (17.15: )
-> $$ = nterm multiplicative_expression (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 212
Next token is token '-' (17.17: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (17.15: )
-> $$ = nterm additive_expression (17.15: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 213
Next token is token '-' (17.17: )
Shifting token '-' (17.17: )
Entering state 305
Reading a token: Next token is token INTVAL (17.19: )
Shifting token INTVAL (17.19: )
Entering state 168
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (17.19: )
-> $$ = nterm int_literal (17.19: )
Stack now 305 213 296 205 451 379 283 182 123 121 36 31 0
Entering state 197
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (17.19: )
-> $$ = nterm literal (17.19: )
Stack now 305 213 296 205 451 379 283 182 123 121 36 31 0
Entering state 196
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (17.19: )
-> $$ = nterm primary_expression (17.19: )
Stack now 305 213 296 205 451 379 283 182 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (17.19: )
-> $$ = nterm postfix_expression (17.19: )
Stack now 305 213 296 205 451 379 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ')' (17.20: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (17.19: )
-> $$ = nterm unary_expression (17.19: )
Stack now 305 213 296 205 451 379 283 182 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (17.19: )
-> $$ = nterm cast_expression (17.19: )
Stack now 305 213 296 205 451 379 283 182 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (17.19: )
-> $$ = nterm pm_expression (17.19: )
Stack now 305 213 296 205 451 379 283 182 123 121 36 31 0
Entering state 211
Next token is token ')' (17.20: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (17.19: )
-> $$ = nterm multiplicative_expression (17.19: )
Stack now 305 213 296 205 451 379 283 182 123 121 36 31 0
Entering state 402
Next token is token ')' (17.20: )
Reducing stack by rule 85 (line 584):
   $1 = nterm additive_expression (17.15: )
   $2 = token '-' (17.17: )
   $3 = nterm multiplicative_expression (17.19: )
-> $$ = nterm additive_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 213
Next token is token ')' (17.20: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (17.15-18: )
-> $$ = nterm shift_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 214
Next token is token ')' (17.20: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (17.15-18: )
-> $$ = nterm relational_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 215
Next token is token ')' (17.20: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (17.15-18: )
-> $$ = nterm equality_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 216
Next token is token ')' (17.20: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (17.15-18: )
-> $$ = nterm and_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 217
Next token is token ')' (17.20: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (17.15-18: )
-> $$ = nterm exclusive_or_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 218
Next token is token ')' (17.20: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (17.15-18: )
-> $$ = nterm inclusive_or_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 219
Next token is token ')' (17.20: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (17.15-18: )
-> $$ = nterm logical_and_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 220
Next token is token ')' (17.20: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (17.15-18: )
-> $$ = nterm logical_or_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 221
Next token is token ')' (17.20: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (17.15-18: )
-> $$ = nterm conditional_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (17.15-18: )
-> $$ = nterm assignment_expression (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 273
Reducing stack by rule 43 (line 366):
   $1 = nterm assignment_expression (17.15-18: )
-> $$ = nterm expression_list (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 370
Next token is token ')' (17.20: )
Reducing stack by rule 312 (line 1556):
   $1 = nterm expression_list (17.15-18: )
-> $$ = nterm expression_list_opt (17.15-18: )
Stack now 296 205 451 379 283 182 123 121 36 31 0
Entering state 394
Next token is token ')' (17.20: )
Shifting token ')' (17.20: )
Entering state 458
Reducing stack by rule 36 (line 310):
   $1 = nterm postfix_expression (17.9-12: )
   $2 = token '(' (17.14: )
   $3 = nterm expression_list_opt (17.15-18: )
   $4 = token ')' (17.20: )
-> $$ = nterm postfix_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ';' (17.21: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (17.9-19: )
-> $$ = nterm unary_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (17.9-19: )
-> $$ = nterm cast_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (17.9-19: )
-> $$ = nterm pm_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 211
Next token is token ';' (17.21: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (17.9-19: )
-> $$ = nterm multiplicative_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 212
Next token is token ';' (17.21: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (17.9-19: )
-> $$ = nterm additive_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 213
Next token is token ';' (17.21: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (17.9-19: )
-> $$ = nterm shift_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 214
Next token is token ';' (17.21: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (17.9-19: )
-> $$ = nterm relational_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 215
Next token is token ';' (17.21: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (17.9-19: )
-> $$ = nterm equality_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 216
Next token is token ';' (17.21: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (17.9-19: )
-> $$ = nterm and_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 217
Next token is token ';' (17.21: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (17.9-19: )
-> $$ = nterm exclusive_or_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 218
Next token is token ';' (17.21: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (17.9-19: )
-> $$ = nterm inclusive_or_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 219
Next token is token ';' (17.21: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (17.9-19: )
-> $$ = nterm logical_and_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 220
Next token is token ';' (17.21: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (17.9-19: )
-> $$ = nterm logical_or_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 221
Next token is token ';' (17.21: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (17.9-19: )
-> $$ = nterm conditional_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (17.9-19: )
-> $$ = nterm assignment_expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 223
Reducing stack by rule 122 (line 779):
   $1 = nterm assignment_expression (17.9-19: )
-> $$ = nterm expression (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 224
Next token is token ';' (17.21: )
Reducing stack by rule 322 (line 1576):
   $1 = nterm expression (17.9-19: )
-> $$ = nterm expression_opt (17.9-19: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 237
Next token is token ';' (17.21: )
Shifting token ';' (17.21: )
Entering state 337
Reducing stack by rule 134 (line 826):
   $1 = nterm expression_opt (17.9-19: )
   $2 = token ';' (17.21: )
-> $$ = nterm expression_statement (17.9-20: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 227
Reducing stack by rule 126 (line 801):
   $1 = nterm expression_statement (17.9-20: )
-> $$ = nterm statement (17.9-20: )
Stack now 451 379 283 182 123 121 36 31 0
Entering state 478
Reading a token: Next token is token ELSE (18.5-7: )
Shifting token ELSE (18.5-7: )
Entering state 498
Reading a token: Next token is token IDENTIFIER (19.9: )
Shifting token IDENTIFIER (19.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (19.9: )
-> $$ = nterm identifier (19.9: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (19.9: )
-> $$ = nterm unqualified_id (19.9: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (19.9: )
-> $$ = nterm id_expression (19.9: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 203
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (19.9: )
-> $$ = nterm primary_expression (19.9: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 202
Reducing stack by rule 34 (line 300):
   $1 = nterm primary_expression (19.9: )
-> $$ = nterm postfix_expression (19.9: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token "++" (19.10: )
Shifting token "++" (19.10: )
Entering state 292
Reducing stack by rule 41 (line 349):
   $1 = nterm postfix_expression (19.9: )
   $2 = token "++" (19.10: )
-> $$ = nterm postfix_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 205
Reading a token: Next token is token ';' (19.12: )
Reducing stack by rule 46 (line 387):
   $1 = nterm postfix_expression (19.9-10: )
-> $$ = nterm unary_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 206
Reducing stack by rule 74 (line 512):
   $1 = nterm unary_expression (19.9-10: )
-> $$ = nterm cast_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 210
Reducing stack by rule 76 (line 524):
   $1 = nterm cast_expression (19.9-10: )
-> $$ = nterm pm_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 211
Next token is token ';' (19.12: )
Reducing stack by rule 79 (line 545):
   $1 = nterm pm_expression (19.9-10: )
-> $$ = nterm multiplicative_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 212
Next token is token ';' (19.12: )
Reducing stack by rule 83 (line 574):
   $1 = nterm multiplicative_expression (19.9-10: )
-> $$ = nterm additive_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 213
Next token is token ';' (19.12: )
Reducing stack by rule 86 (line 595):
   $1 = nterm additive_expression (19.9-10: )
-> $$ = nterm shift_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 214
Next token is token ';' (19.12: )
Reducing stack by rule 89 (line 616):
   $1 = nterm shift_expression (19.9-10: )
-> $$ = nterm relational_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 215
Next token is token ';' (19.12: )
Reducing stack by rule 94 (line 653):
   $1 = nterm relational_expression (19.9-10: )
-> $$ = nterm equality_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 216
Next token is token ';' (19.12: )
Reducing stack by rule 97 (line 674):
   $1 = nterm equality_expression (19.9-10: )
-> $$ = nterm and_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 217
Next token is token ';' (19.12: )
Reducing stack by rule 99 (line 687):
   $1 = nterm and_expression (19.9-10: )
-> $$ = nterm exclusive_or_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 218
Next token is token ';' (19.12: )
Reducing stack by rule 101 (line 700):
   $1 = nterm exclusive_or_expression (19.9-10: )
-> $$ = nterm inclusive_or_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 219
Next token is token ';' (19.12: )
Reducing stack by rule 103 (line 713):
   $1 = nterm inclusive_or_expression (19.9-10: )
-> $$ = nterm logical_and_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 220
Next token is token ';' (19.12: )
Reducing stack by rule 105 (line 726):
   $1 = nterm logical_and_expression (19.9-10: )
-> $$ = nterm logical_or_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 221
Next token is token ';' (19.12: )
Reducing stack by rule 107 (line 739):
   $1 = nterm logical_or_expression (19.9-10: )
-> $$ = nterm conditional_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 222
Reducing stack by rule 109 (line 752):
   $1 = nterm conditional_expression (19.9-10: )
-> $$ = nterm assignment_expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 223
Reducing stack by rule 122 (line 779):
   $1 = nterm assignment_expression (19.9-10: )
-> $$ = nterm expression (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 224
Next token is token ';' (19.12: )
Reducing stack by rule 322 (line 1576):
   $1 = nterm expression (19.9-10: )
-> $$ = nterm expression_opt (19.9-10: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 237
Next token is token ';' (19.12: )
Shifting token ';' (19.12: )
Entering state 337
Reducing stack by rule 134 (line 826):
   $1 = nterm expression_opt (19.9-10: )
   $2 = token ';' (19.12: )
-> $$ = nterm expression_statement (19.9-11: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 227
Reducing stack by rule 126 (line 801):
   $1 = nterm expression_statement (19.9-11: )
-> $$ = nterm statement (19.9-11: )
Stack now 498 478 451 379 283 182 123 121 36 31 0
Entering state 511
Reducing stack by rule 142 (line 863):
   $1 = token ELSE (18.5-7: )
   $2 = nterm statement (19.9-11: )
-> $$ = nterm else_statement (18.5-19.11: )
Stack now 478 451 379 283 182 123 121 36 31 0
Entering state 499
Reducing stack by rule 139 (line 845):
   $1 = token IF (16.5: )
   $2 = token '(' (16.8: )
   $3 = nterm condition (16.9-16: )
   $4 = token ')' (16.18: )
   $5 = nterm statement (17.9-20: )
   $6 = nterm else_statement (18.5-19.11: )
-> $$ = nterm selection_statement (16.5-19.11: )
Stack now 123 121 36 31 0
Entering state 230
Reducing stack by rule 128 (line 803):
   $1 = nterm selection_statement (16.5-19.11: )
-> $$ = nterm statement (16.5-19.11: )
Stack now 123 121 36 31 0
Entering state 225
Reducing stack by rule 137 (line 838):
   $1 = nterm statement (16.5-19.11: )
-> $$ = nterm statement_seq (16.5-19.11: )
Stack now 123 121 36 31 0
Entering state 229
Reading a token: Next token is token '}' (20.1: )
Shifting token '}' (20.1: )
Entering state 333
Reducing stack by rule 136 (line 833):
   $1 = token '{' (15.26: )
   $2 = nterm statement_seq (16.5-19.11: )
   $3 = token '}' (20.1: )
-> $$ = nterm compound_statement (15.26-20.0: )
Stack now 121 36 31 0
Entering state 124
Reducing stack by rule 228 (line 1288):
   $1 = nterm compound_statement (15.26-20.0: )
-> $$ = nterm function_body (15.26-20.0: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 227 (line 1278):
   $1 = nterm decl_specifier_seq (15.1-3: )
   $2 = nterm declarator (15.6-23: )
   $3 = nterm function_body (15.26-20.0: )
-> $$ = nterm function_definition (15.1-20.0: )
Stack now 31 0
Entering state 48
Reducing stack by rule 156 (line 941):
   $1 = nterm function_definition (15.1-20.0: )
-> $$ = nterm declaration (15.1-20.0: )
Stack now 31 0
Entering state 116
Reducing stack by rule 154 (line 935):
   $1 = nterm declaration_seq (1.1-13.0: )
   $2 = nterm declaration (15.1-20.0: )
-> $$ = nterm declaration_seq (1.1-20.0: )
Stack now 0
Entering state 31
Reading a token: Next token is token $end (20.1: )
Reducing stack by rule 16 (line 236):
   $1 = nterm declaration_seq (1.1-20.0: )
-> $$ = nterm translation_unit (1.1-20.0: )
Stack now 0
Entering state 26
Next token is token $end (20.1: )
Shifting token $end (20.1: )
Entering state 113
Cleanup: popping token $end (20.1: )
Cleanup: popping nterm translation_unit (1.1-20.0: )
