Starting parse
Entering state 0
Reading a token: Next token is token INT (1.1-2: )
Shifting token INT (1.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (1.1-2: )
-> $$ = nterm simple_type_specifier (1.1-2: )
Stack now 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (1.1-2: )
-> $$ = nterm type_specifier (1.1-2: )
Stack now 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (1.1-2: )
-> $$ = nterm decl_specifier (1.1-2: )
Stack now 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (1.1-2: )
-> $$ = nterm decl_specifier_seq (1.1-2: )
Stack now 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (1.5: )
Shifting token IDENTIFIER (1.5: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (1.5: )
-> $$ = nterm identifier (1.5: )
Stack now 36 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (1.5: )
-> $$ = nterm unqualified_id (1.5: )
Stack now 36 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (1.5: )
-> $$ = nterm id_expression (1.5: )
Stack now 36 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (1.5: )
-> $$ = nterm declarator_id (1.5: )
Stack now 36 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (1.5: )
-> $$ = nterm direct_declarator (1.5: )
Stack now 36 0
Entering state 43
Reading a token: Next token is token ';' (1.6: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (1.5: )
-> $$ = nterm declarator (1.5: )
Stack now 36 0
Entering state 121
Next token is token ';' (1.6: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (1.5: )
Stack now 121 36 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (1.5: )
   $2 = nterm initializer_opt (1.5: )
-> $$ = nterm init_declarator (1.5: )
Stack now 36 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (1.5: )
-> $$ = nterm init_declarator_list (1.5: )
Stack now 36 0
Entering state 119
Next token is token ';' (1.6: )
Shifting token ';' (1.6: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (1.1-2: )
   $2 = nterm init_declarator_list (1.5: )
   $3 = token ';' (1.6: )
-> $$ = nterm simple_declaration (1.1-5: )
Stack now 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (1.1-5: )
-> $$ = nterm block_declaration (1.1-5: )
Stack now 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (1.1-5: )
-> $$ = nterm declaration (1.1-5: )
Stack now 0
Entering state 32
Reducing stack by rule 154 (line 939):
   $1 = nterm declaration (1.1-5: )
-> $$ = nterm declaration_seq (1.1-5: )
Stack now 0
Entering state 31
Reading a token: Next token is token CHAR (2.1-3: )
Shifting token CHAR (2.1-3: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (2.1-3: )
-> $$ = nterm simple_type_specifier (2.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (2.1-3: )
-> $$ = nterm type_specifier (2.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (2.1-3: )
-> $$ = nterm decl_specifier (2.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (2.1-3: )
-> $$ = nterm decl_specifier_seq (2.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (2.6: )
Shifting token IDENTIFIER (2.6: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (2.6: )
-> $$ = nterm identifier (2.6: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (2.6: )
-> $$ = nterm unqualified_id (2.6: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (2.6: )
-> $$ = nterm id_expression (2.6: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (2.6: )
-> $$ = nterm declarator_id (2.6: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (2.6: )
-> $$ = nterm direct_declarator (2.6: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (2.7: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (2.6: )
-> $$ = nterm declarator (2.6: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (2.7: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (2.6: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (2.6: )
   $2 = nterm initializer_opt (2.6: )
-> $$ = nterm init_declarator (2.6: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (2.6: )
-> $$ = nterm init_declarator_list (2.6: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (2.7: )
Shifting token ';' (2.7: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (2.1-3: )
   $2 = nterm init_declarator_list (2.6: )
   $3 = token ';' (2.7: )
-> $$ = nterm simple_declaration (2.1-6: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (2.1-6: )
-> $$ = nterm block_declaration (2.1-6: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (2.1-6: )
-> $$ = nterm declaration (2.1-6: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-5: )
   $2 = nterm declaration (2.1-6: )
-> $$ = nterm declaration_seq (1.1-2.6: )
Stack now 0
Entering state 31
Reading a token: Next token is token FLOAT (3.1-4: )
Shifting token FLOAT (3.1-4: )
Entering state 9
Reducing stack by rule 180 (line 1039):
   $1 = token FLOAT (3.1-4: )
-> $$ = nterm simple_type_specifier (3.1-4: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (3.1-4: )
-> $$ = nterm type_specifier (3.1-4: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (3.1-4: )
-> $$ = nterm decl_specifier (3.1-4: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (3.1-4: )
-> $$ = nterm decl_specifier_seq (3.1-4: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (3.7: )
Shifting token IDENTIFIER (3.7: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (3.7: )
-> $$ = nterm identifier (3.7: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (3.7: )
-> $$ = nterm unqualified_id (3.7: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (3.7: )
-> $$ = nterm id_expression (3.7: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (3.7: )
-> $$ = nterm declarator_id (3.7: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (3.7: )
-> $$ = nterm direct_declarator (3.7: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (3.8: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (3.7: )
-> $$ = nterm declarator (3.7: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (3.8: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (3.7: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (3.7: )
   $2 = nterm initializer_opt (3.7: )
-> $$ = nterm init_declarator (3.7: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (3.7: )
-> $$ = nterm init_declarator_list (3.7: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (3.8: )
Shifting token ';' (3.8: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (3.1-4: )
   $2 = nterm init_declarator_list (3.7: )
   $3 = token ';' (3.8: )
-> $$ = nterm simple_declaration (3.1-7: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (3.1-7: )
-> $$ = nterm block_declaration (3.1-7: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (3.1-7: )
-> $$ = nterm declaration (3.1-7: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-2.6: )
   $2 = nterm declaration (3.1-7: )
-> $$ = nterm declaration_seq (1.1-3.7: )
Stack now 0
Entering state 31
Reading a token: Next token is token DOUBLE (4.1-5: )
Shifting token DOUBLE (4.1-5: )
Entering state 7
Reducing stack by rule 181 (line 1040):
   $1 = token DOUBLE (4.1-5: )
-> $$ = nterm simple_type_specifier (4.1-5: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (4.1-5: )
-> $$ = nterm type_specifier (4.1-5: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (4.1-5: )
-> $$ = nterm decl_specifier (4.1-5: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (4.1-5: )
-> $$ = nterm decl_specifier_seq (4.1-5: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (4.8: )
Shifting token IDENTIFIER (4.8: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (4.8: )
-> $$ = nterm identifier (4.8: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (4.8: )
-> $$ = nterm unqualified_id (4.8: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (4.8: )
-> $$ = nterm id_expression (4.8: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (4.8: )
-> $$ = nterm declarator_id (4.8: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (4.8: )
-> $$ = nterm direct_declarator (4.8: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (4.9: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (4.8: )
-> $$ = nterm declarator (4.8: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (4.9: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (4.8: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (4.8: )
   $2 = nterm initializer_opt (4.8: )
-> $$ = nterm init_declarator (4.8: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (4.8: )
-> $$ = nterm init_declarator_list (4.8: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (4.9: )
Shifting token ';' (4.9: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (4.1-5: )
   $2 = nterm init_declarator_list (4.8: )
   $3 = token ';' (4.9: )
-> $$ = nterm simple_declaration (4.1-8: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (4.1-8: )
-> $$ = nterm block_declaration (4.1-8: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (4.1-8: )
-> $$ = nterm declaration (4.1-8: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-3.7: )
   $2 = nterm declaration (4.1-8: )
-> $$ = nterm declaration_seq (1.1-4.8: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (7.1-2: )
Shifting token INT (7.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (7.1-2: )
-> $$ = nterm simple_type_specifier (7.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (7.1-2: )
-> $$ = nterm type_specifier (7.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (7.1-2: )
-> $$ = nterm decl_specifier (7.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (7.1-2: )
-> $$ = nterm decl_specifier_seq (7.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (7.5: )
Shifting token IDENTIFIER (7.5: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (7.5: )
-> $$ = nterm identifier (7.5: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (7.5: )
-> $$ = nterm unqualified_id (7.5: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (7.5: )
-> $$ = nterm id_expression (7.5: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (7.5: )
-> $$ = nterm declarator_id (7.5: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (7.5: )
-> $$ = nterm direct_declarator (7.5: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ',' (7.6: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (7.5: )
-> $$ = nterm declarator (7.5: )
Stack now 36 31 0
Entering state 121
Next token is token ',' (7.6: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (7.5: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (7.5: )
   $2 = nterm initializer_opt (7.5: )
-> $$ = nterm init_declarator (7.5: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (7.5: )
-> $$ = nterm init_declarator_list (7.5: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (7.6: )
Shifting token ',' (7.6: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (7.8: )
Shifting token IDENTIFIER (7.8: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (7.8: )
-> $$ = nterm identifier (7.8: )
Stack now 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (7.8: )
-> $$ = nterm unqualified_id (7.8: )
Stack now 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (7.8: )
-> $$ = nterm id_expression (7.8: )
Stack now 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (7.8: )
-> $$ = nterm declarator_id (7.8: )
Stack now 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (7.8: )
-> $$ = nterm direct_declarator (7.8: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token ',' (7.9: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (7.8: )
-> $$ = nterm declarator (7.8: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ',' (7.9: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (7.8: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (7.8: )
   $2 = nterm initializer_opt (7.8: )
-> $$ = nterm init_declarator (7.8: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (7.5: )
   $2 = token ',' (7.6: )
   $3 = nterm init_declarator (7.8: )
-> $$ = nterm init_declarator_list (7.5-7: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (7.9: )
Shifting token ',' (7.9: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (7.11: )
Shifting token IDENTIFIER (7.11: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (7.11: )
-> $$ = nterm identifier (7.11: )
Stack now 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (7.11: )
-> $$ = nterm unqualified_id (7.11: )
Stack now 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (7.11: )
-> $$ = nterm id_expression (7.11: )
Stack now 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (7.11: )
-> $$ = nterm declarator_id (7.11: )
Stack now 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (7.11: )
-> $$ = nterm direct_declarator (7.11: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token ';' (7.12: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (7.11: )
-> $$ = nterm declarator (7.11: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ';' (7.12: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (7.11: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (7.11: )
   $2 = nterm initializer_opt (7.11: )
-> $$ = nterm init_declarator (7.11: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (7.5-7: )
   $2 = token ',' (7.9: )
   $3 = nterm init_declarator (7.11: )
-> $$ = nterm init_declarator_list (7.5-10: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (7.12: )
Shifting token ';' (7.12: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (7.1-2: )
   $2 = nterm init_declarator_list (7.5-10: )
   $3 = token ';' (7.12: )
-> $$ = nterm simple_declaration (7.1-11: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (7.1-11: )
-> $$ = nterm block_declaration (7.1-11: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (7.1-11: )
-> $$ = nterm declaration (7.1-11: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-4.8: )
   $2 = nterm declaration (7.1-11: )
-> $$ = nterm declaration_seq (1.1-7.11: )
Stack now 0
Entering state 31
Reading a token: Next token is token LONG (8.1-3: )
Shifting token LONG (8.1-3: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (8.1-3: )
-> $$ = nterm simple_type_specifier (8.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (8.1-3: )
-> $$ = nterm type_specifier (8.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (8.1-3: )
-> $$ = nterm decl_specifier (8.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (8.1-3: )
-> $$ = nterm decl_specifier_seq (8.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (8.6: )
Shifting token IDENTIFIER (8.6: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.6: )
-> $$ = nterm identifier (8.6: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.6: )
-> $$ = nterm unqualified_id (8.6: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.6: )
-> $$ = nterm id_expression (8.6: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (8.6: )
-> $$ = nterm declarator_id (8.6: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (8.6: )
-> $$ = nterm direct_declarator (8.6: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ',' (8.7: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (8.6: )
-> $$ = nterm declarator (8.6: )
Stack now 36 31 0
Entering state 121
Next token is token ',' (8.7: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (8.6: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (8.6: )
   $2 = nterm initializer_opt (8.6: )
-> $$ = nterm init_declarator (8.6: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (8.6: )
-> $$ = nterm init_declarator_list (8.6: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (8.7: )
Shifting token ',' (8.7: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (8.9: )
Shifting token IDENTIFIER (8.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.9: )
-> $$ = nterm identifier (8.9: )
Stack now 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.9: )
-> $$ = nterm unqualified_id (8.9: )
Stack now 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.9: )
-> $$ = nterm id_expression (8.9: )
Stack now 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (8.9: )
-> $$ = nterm declarator_id (8.9: )
Stack now 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (8.9: )
-> $$ = nterm direct_declarator (8.9: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token ',' (8.10: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (8.9: )
-> $$ = nterm declarator (8.9: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ',' (8.10: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (8.9: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (8.9: )
   $2 = nterm initializer_opt (8.9: )
-> $$ = nterm init_declarator (8.9: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (8.6: )
   $2 = token ',' (8.7: )
   $3 = nterm init_declarator (8.9: )
-> $$ = nterm init_declarator_list (8.6-8: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (8.10: )
Shifting token ',' (8.10: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (8.12: )
Shifting token IDENTIFIER (8.12: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (8.12: )
-> $$ = nterm identifier (8.12: )
Stack now 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (8.12: )
-> $$ = nterm unqualified_id (8.12: )
Stack now 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (8.12: )
-> $$ = nterm id_expression (8.12: )
Stack now 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (8.12: )
-> $$ = nterm declarator_id (8.12: )
Stack now 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (8.12: )
-> $$ = nterm direct_declarator (8.12: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token ';' (8.13: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (8.12: )
-> $$ = nterm declarator (8.12: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ';' (8.13: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (8.12: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (8.12: )
   $2 = nterm initializer_opt (8.12: )
-> $$ = nterm init_declarator (8.12: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (8.6-8: )
   $2 = token ',' (8.10: )
   $3 = nterm init_declarator (8.12: )
-> $$ = nterm init_declarator_list (8.6-11: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (8.13: )
Shifting token ';' (8.13: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (8.1-3: )
   $2 = nterm init_declarator_list (8.6-11: )
   $3 = token ';' (8.13: )
-> $$ = nterm simple_declaration (8.1-12: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (8.1-12: )
-> $$ = nterm block_declaration (8.1-12: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (8.1-12: )
-> $$ = nterm declaration (8.1-12: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-7.11: )
   $2 = nterm declaration (8.1-12: )
-> $$ = nterm declaration_seq (1.1-8.12: )
Stack now 0
Entering state 31
Reading a token: Next token is token UNSIGNED (11.1-7: )
Shifting token UNSIGNED (11.1-7: )
Entering state 18
Reducing stack by rule 179 (line 1038):
   $1 = token UNSIGNED (11.1-7: )
-> $$ = nterm simple_type_specifier (11.1-7: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (11.1-7: )
-> $$ = nterm type_specifier (11.1-7: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (11.1-7: )
-> $$ = nterm decl_specifier (11.1-7: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (11.1-7: )
-> $$ = nterm decl_specifier_seq (11.1-7: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token INT (11.10-11: )
Shifting token INT (11.10-11: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (11.10-11: )
-> $$ = nterm simple_type_specifier (11.10-11: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (11.10-11: )
-> $$ = nterm type_specifier (11.10-11: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (11.10-11: )
-> $$ = nterm decl_specifier (11.10-11: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (11.1-7: )
   $2 = nterm decl_specifier (11.10-11: )
-> $$ = nterm decl_specifier_seq (11.1-11: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (11.14: )
Shifting token IDENTIFIER (11.14: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (11.14: )
-> $$ = nterm identifier (11.14: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (11.14: )
-> $$ = nterm unqualified_id (11.14: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (11.14: )
-> $$ = nterm id_expression (11.14: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (11.14: )
-> $$ = nterm declarator_id (11.14: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (11.14: )
-> $$ = nterm direct_declarator (11.14: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (11.16: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (11.14: )
-> $$ = nterm declarator (11.14: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (11.16: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (11.15: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (11.14: )
   $2 = nterm initializer_opt (11.15: )
-> $$ = nterm init_declarator (11.14: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (11.14: )
-> $$ = nterm init_declarator_list (11.14: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (11.16: )
Shifting token ';' (11.16: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (11.1-11: )
   $2 = nterm init_declarator_list (11.14: )
   $3 = token ';' (11.16: )
-> $$ = nterm simple_declaration (11.1-15: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (11.1-15: )
-> $$ = nterm block_declaration (11.1-15: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (11.1-15: )
-> $$ = nterm declaration (11.1-15: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-8.12: )
   $2 = nterm declaration (11.1-15: )
-> $$ = nterm declaration_seq (1.1-11.15: )
Stack now 0
Entering state 31
Reading a token: Next token is token SIGNED (12.1-5: )
Shifting token SIGNED (12.1-5: )
Entering state 15
Reducing stack by rule 178 (line 1037):
   $1 = token SIGNED (12.1-5: )
-> $$ = nterm simple_type_specifier (12.1-5: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (12.1-5: )
-> $$ = nterm type_specifier (12.1-5: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (12.1-5: )
-> $$ = nterm decl_specifier (12.1-5: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (12.1-5: )
-> $$ = nterm decl_specifier_seq (12.1-5: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token CHAR (12.8-10: )
Shifting token CHAR (12.8-10: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (12.8-10: )
-> $$ = nterm simple_type_specifier (12.8-10: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (12.8-10: )
-> $$ = nterm type_specifier (12.8-10: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (12.8-10: )
-> $$ = nterm decl_specifier (12.8-10: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (12.1-5: )
   $2 = nterm decl_specifier (12.8-10: )
-> $$ = nterm decl_specifier_seq (12.1-10: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (12.13: )
Shifting token IDENTIFIER (12.13: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (12.13: )
-> $$ = nterm identifier (12.13: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (12.13: )
-> $$ = nterm unqualified_id (12.13: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (12.13: )
-> $$ = nterm id_expression (12.13: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (12.13: )
-> $$ = nterm declarator_id (12.13: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (12.13: )
-> $$ = nterm direct_declarator (12.13: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (12.15: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (12.13: )
-> $$ = nterm declarator (12.13: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (12.15: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (12.14: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (12.13: )
   $2 = nterm initializer_opt (12.14: )
-> $$ = nterm init_declarator (12.13: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (12.13: )
-> $$ = nterm init_declarator_list (12.13: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (12.15: )
Shifting token ';' (12.15: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (12.1-10: )
   $2 = nterm init_declarator_list (12.13: )
   $3 = token ';' (12.15: )
-> $$ = nterm simple_declaration (12.1-14: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (12.1-14: )
-> $$ = nterm block_declaration (12.1-14: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (12.1-14: )
-> $$ = nterm declaration (12.1-14: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-11.15: )
   $2 = nterm declaration (12.1-14: )
-> $$ = nterm declaration_seq (1.1-12.14: )
Stack now 0
Entering state 31
Reading a token: Next token is token LONG (13.1-3: )
Shifting token LONG (13.1-3: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (13.1-3: )
-> $$ = nterm simple_type_specifier (13.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (13.1-3: )
-> $$ = nterm type_specifier (13.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (13.1-3: )
-> $$ = nterm decl_specifier (13.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (13.1-3: )
-> $$ = nterm decl_specifier_seq (13.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token INT (13.6-7: )
Shifting token INT (13.6-7: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (13.6-7: )
-> $$ = nterm simple_type_specifier (13.6-7: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (13.6-7: )
-> $$ = nterm type_specifier (13.6-7: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (13.6-7: )
-> $$ = nterm decl_specifier (13.6-7: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (13.1-3: )
   $2 = nterm decl_specifier (13.6-7: )
-> $$ = nterm decl_specifier_seq (13.1-7: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (13.10: )
Shifting token IDENTIFIER (13.10: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (13.10: )
-> $$ = nterm identifier (13.10: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (13.10: )
-> $$ = nterm unqualified_id (13.10: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (13.10: )
-> $$ = nterm id_expression (13.10: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (13.10: )
-> $$ = nterm declarator_id (13.10: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (13.10: )
-> $$ = nterm direct_declarator (13.10: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (13.12: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (13.10: )
-> $$ = nterm declarator (13.10: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (13.12: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (13.11: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (13.10: )
   $2 = nterm initializer_opt (13.11: )
-> $$ = nterm init_declarator (13.10: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (13.10: )
-> $$ = nterm init_declarator_list (13.10: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (13.12: )
Shifting token ';' (13.12: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (13.1-7: )
   $2 = nterm init_declarator_list (13.10: )
   $3 = token ';' (13.12: )
-> $$ = nterm simple_declaration (13.1-11: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (13.1-11: )
-> $$ = nterm block_declaration (13.1-11: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (13.1-11: )
-> $$ = nterm declaration (13.1-11: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-12.14: )
   $2 = nterm declaration (13.1-11: )
-> $$ = nterm declaration_seq (1.1-13.11: )
Stack now 0
Entering state 31
Reading a token: Next token is token SHORT (14.1-4: )
Shifting token SHORT (14.1-4: )
Entering state 14
Reducing stack by rule 175 (line 1034):
   $1 = token SHORT (14.1-4: )
-> $$ = nterm simple_type_specifier (14.1-4: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (14.1-4: )
-> $$ = nterm type_specifier (14.1-4: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (14.1-4: )
-> $$ = nterm decl_specifier (14.1-4: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (14.1-4: )
-> $$ = nterm decl_specifier_seq (14.1-4: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token INT (14.7-8: )
Shifting token INT (14.7-8: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (14.7-8: )
-> $$ = nterm simple_type_specifier (14.7-8: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (14.7-8: )
-> $$ = nterm type_specifier (14.7-8: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (14.7-8: )
-> $$ = nterm decl_specifier (14.7-8: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (14.1-4: )
   $2 = nterm decl_specifier (14.7-8: )
-> $$ = nterm decl_specifier_seq (14.1-8: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (14.11: )
Shifting token IDENTIFIER (14.11: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (14.11: )
-> $$ = nterm identifier (14.11: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (14.11: )
-> $$ = nterm unqualified_id (14.11: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (14.11: )
-> $$ = nterm id_expression (14.11: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (14.11: )
-> $$ = nterm declarator_id (14.11: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (14.11: )
-> $$ = nterm direct_declarator (14.11: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (14.13: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (14.11: )
-> $$ = nterm declarator (14.11: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (14.13: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (14.12: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (14.11: )
   $2 = nterm initializer_opt (14.12: )
-> $$ = nterm init_declarator (14.11: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (14.11: )
-> $$ = nterm init_declarator_list (14.11: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (14.13: )
Shifting token ';' (14.13: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (14.1-8: )
   $2 = nterm init_declarator_list (14.11: )
   $3 = token ';' (14.13: )
-> $$ = nterm simple_declaration (14.1-12: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (14.1-12: )
-> $$ = nterm block_declaration (14.1-12: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (14.1-12: )
-> $$ = nterm declaration (14.1-12: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-13.11: )
   $2 = nterm declaration (14.1-12: )
-> $$ = nterm declaration_seq (1.1-14.12: )
Stack now 0
Entering state 31
Reading a token: Next token is token UNSIGNED (15.1-7: )
Shifting token UNSIGNED (15.1-7: )
Entering state 18
Reducing stack by rule 179 (line 1038):
   $1 = token UNSIGNED (15.1-7: )
-> $$ = nterm simple_type_specifier (15.1-7: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (15.1-7: )
-> $$ = nterm type_specifier (15.1-7: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (15.1-7: )
-> $$ = nterm decl_specifier (15.1-7: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (15.1-7: )
-> $$ = nterm decl_specifier_seq (15.1-7: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token LONG (15.10-12: )
Shifting token LONG (15.10-12: )
Entering state 12
Reducing stack by rule 177 (line 1036):
   $1 = token LONG (15.10-12: )
-> $$ = nterm simple_type_specifier (15.10-12: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (15.10-12: )
-> $$ = nterm type_specifier (15.10-12: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (15.10-12: )
-> $$ = nterm decl_specifier (15.10-12: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (15.1-7: )
   $2 = nterm decl_specifier (15.10-12: )
-> $$ = nterm decl_specifier_seq (15.1-12: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token INT (15.15-16: )
Shifting token INT (15.15-16: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (15.15-16: )
-> $$ = nterm simple_type_specifier (15.15-16: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (15.15-16: )
-> $$ = nterm type_specifier (15.15-16: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (15.15-16: )
-> $$ = nterm decl_specifier (15.15-16: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (15.1-12: )
   $2 = nterm decl_specifier (15.15-16: )
-> $$ = nterm decl_specifier_seq (15.1-16: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (15.19: )
Shifting token IDENTIFIER (15.19: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (15.19: )
-> $$ = nterm identifier (15.19: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (15.19: )
-> $$ = nterm unqualified_id (15.19: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (15.19: )
-> $$ = nterm id_expression (15.19: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (15.19: )
-> $$ = nterm declarator_id (15.19: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (15.19: )
-> $$ = nterm direct_declarator (15.19: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (15.21: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (15.19: )
-> $$ = nterm declarator (15.19: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (15.21: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (15.20: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (15.19: )
   $2 = nterm initializer_opt (15.20: )
-> $$ = nterm init_declarator (15.19: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (15.19: )
-> $$ = nterm init_declarator_list (15.19: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (15.21: )
Shifting token ';' (15.21: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (15.1-16: )
   $2 = nterm init_declarator_list (15.19: )
   $3 = token ';' (15.21: )
-> $$ = nterm simple_declaration (15.1-20: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (15.1-20: )
-> $$ = nterm block_declaration (15.1-20: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (15.1-20: )
-> $$ = nterm declaration (15.1-20: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-14.12: )
   $2 = nterm declaration (15.1-20: )
-> $$ = nterm declaration_seq (1.1-15.20: )
Stack now 0
Entering state 31
Reading a token: Next token is token SIGNED (16.1-5: )
Shifting token SIGNED (16.1-5: )
Entering state 15
Reducing stack by rule 178 (line 1037):
   $1 = token SIGNED (16.1-5: )
-> $$ = nterm simple_type_specifier (16.1-5: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (16.1-5: )
-> $$ = nterm type_specifier (16.1-5: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (16.1-5: )
-> $$ = nterm decl_specifier (16.1-5: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (16.1-5: )
-> $$ = nterm decl_specifier_seq (16.1-5: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token SHORT (16.8-11: )
Shifting token SHORT (16.8-11: )
Entering state 14
Reducing stack by rule 175 (line 1034):
   $1 = token SHORT (16.8-11: )
-> $$ = nterm simple_type_specifier (16.8-11: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (16.8-11: )
-> $$ = nterm type_specifier (16.8-11: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (16.8-11: )
-> $$ = nterm decl_specifier (16.8-11: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (16.1-5: )
   $2 = nterm decl_specifier (16.8-11: )
-> $$ = nterm decl_specifier_seq (16.1-11: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token INT (16.14-15: )
Shifting token INT (16.14-15: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (16.14-15: )
-> $$ = nterm simple_type_specifier (16.14-15: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (16.14-15: )
-> $$ = nterm type_specifier (16.14-15: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (16.14-15: )
-> $$ = nterm decl_specifier (16.14-15: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (16.1-11: )
   $2 = nterm decl_specifier (16.14-15: )
-> $$ = nterm decl_specifier_seq (16.1-15: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (16.18: )
Shifting token IDENTIFIER (16.18: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (16.18: )
-> $$ = nterm identifier (16.18: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (16.18: )
-> $$ = nterm unqualified_id (16.18: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (16.18: )
-> $$ = nterm id_expression (16.18: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (16.18: )
-> $$ = nterm declarator_id (16.18: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (16.18: )
-> $$ = nterm direct_declarator (16.18: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (16.20: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (16.18: )
-> $$ = nterm declarator (16.18: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (16.20: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (16.19: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (16.18: )
   $2 = nterm initializer_opt (16.19: )
-> $$ = nterm init_declarator (16.18: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (16.18: )
-> $$ = nterm init_declarator_list (16.18: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (16.20: )
Shifting token ';' (16.20: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (16.1-15: )
   $2 = nterm init_declarator_list (16.18: )
   $3 = token ';' (16.20: )
-> $$ = nterm simple_declaration (16.1-19: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (16.1-19: )
-> $$ = nterm block_declaration (16.1-19: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (16.1-19: )
-> $$ = nterm declaration (16.1-19: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-15.20: )
   $2 = nterm declaration (16.1-19: )
-> $$ = nterm declaration_seq (1.1-16.19: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (19.1-2: )
Shifting token INT (19.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (19.1-2: )
-> $$ = nterm simple_type_specifier (19.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (19.1-2: )
-> $$ = nterm type_specifier (19.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (19.1-2: )
-> $$ = nterm decl_specifier (19.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (19.1-2: )
-> $$ = nterm decl_specifier_seq (19.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (19.5: )
Shifting token IDENTIFIER (19.5: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (19.5: )
-> $$ = nterm identifier (19.5: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (19.5: )
-> $$ = nterm unqualified_id (19.5: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (19.5: )
-> $$ = nterm id_expression (19.5: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (19.5: )
-> $$ = nterm declarator_id (19.5: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (19.5: )
-> $$ = nterm direct_declarator (19.5: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '=' (19.7: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (19.5: )
-> $$ = nterm declarator (19.5: )
Stack now 36 31 0
Entering state 121
Next token is token '=' (19.7: )
Shifting token '=' (19.7: )
Entering state 157
Reading a token: Next token is token INTVAL (19.9: )
Shifting token INTVAL (19.9: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (19.9: )
-> $$ = nterm int_literal (19.9: )
Stack now 157 121 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (19.9: )
-> $$ = nterm literal (19.9: )
Stack now 157 121 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (19.9: )
-> $$ = nterm primary_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (19.9: )
-> $$ = nterm postfix_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 198
Reading a token: Next token is token ',' (19.10: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (19.9: )
-> $$ = nterm unary_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (19.9: )
-> $$ = nterm cast_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (19.9: )
-> $$ = nterm pm_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 204
Next token is token ',' (19.10: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (19.9: )
-> $$ = nterm multiplicative_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 205
Next token is token ',' (19.10: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (19.9: )
-> $$ = nterm additive_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 206
Next token is token ',' (19.10: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (19.9: )
-> $$ = nterm shift_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 207
Next token is token ',' (19.10: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (19.9: )
-> $$ = nterm relational_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 208
Next token is token ',' (19.10: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (19.9: )
-> $$ = nterm equality_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 209
Next token is token ',' (19.10: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (19.9: )
-> $$ = nterm and_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 210
Next token is token ',' (19.10: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (19.9: )
-> $$ = nterm exclusive_or_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 211
Next token is token ',' (19.10: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (19.9: )
-> $$ = nterm inclusive_or_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 212
Next token is token ',' (19.10: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (19.9: )
-> $$ = nterm logical_and_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 213
Next token is token ',' (19.10: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (19.9: )
-> $$ = nterm logical_or_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 237
Next token is token ',' (19.10: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (19.9: )
-> $$ = nterm conditional_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (19.9: )
-> $$ = nterm assignment_expression (19.9: )
Stack now 157 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (19.9: )
-> $$ = nterm initializer_clause (19.9: )
Stack now 157 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (19.7: )
   $2 = nterm initializer_clause (19.9: )
-> $$ = nterm initializer (19.7-8: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (19.7-8: )
-> $$ = nterm initializer_opt (19.7-8: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (19.5: )
   $2 = nterm initializer_opt (19.7-8: )
-> $$ = nterm init_declarator (19.5-8: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (19.5-8: )
-> $$ = nterm init_declarator_list (19.5-8: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (19.10: )
Shifting token ',' (19.10: )
Entering state 155
Reading a token: Next token is token '&' (19.12: )
Shifting token '&' (19.12: )
Entering state 22
Reducing stack by rule 208 (line 1185):
   $1 = token '&' (19.12: )
-> $$ = nterm ptr_operator (19.12: )
Stack now 155 119 36 31 0
Entering state 45
Reading a token: Next token is token IDENTIFIER (19.13: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (19.12: )
-> $$ = nterm ptr_operator_list (19.12: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (19.13: )
Shifting token IDENTIFIER (19.13: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (19.13: )
-> $$ = nterm identifier (19.13: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (19.13: )
-> $$ = nterm unqualified_id (19.13: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (19.13: )
-> $$ = nterm id_expression (19.13: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (19.13: )
-> $$ = nterm declarator_id (19.13: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (19.13: )
-> $$ = nterm direct_declarator (19.13: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token '=' (19.16: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (19.12: )
   $2 = nterm direct_declarator (19.13: )
-> $$ = nterm declarator (19.12-13: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token '=' (19.16: )
Shifting token '=' (19.16: )
Entering state 157
Reading a token: Next token is token IDENTIFIER (19.18: )
Shifting token IDENTIFIER (19.18: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (19.18: )
-> $$ = nterm identifier (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (19.18: )
-> $$ = nterm unqualified_id (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (19.18: )
-> $$ = nterm id_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (19.18: )
-> $$ = nterm primary_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (19.18: )
-> $$ = nterm postfix_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ';' (19.19: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (19.18: )
-> $$ = nterm unary_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (19.18: )
-> $$ = nterm cast_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (19.18: )
-> $$ = nterm pm_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 204
Next token is token ';' (19.19: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (19.18: )
-> $$ = nterm multiplicative_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 205
Next token is token ';' (19.19: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (19.18: )
-> $$ = nterm additive_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 206
Next token is token ';' (19.19: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (19.18: )
-> $$ = nterm shift_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 207
Next token is token ';' (19.19: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (19.18: )
-> $$ = nterm relational_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 208
Next token is token ';' (19.19: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (19.18: )
-> $$ = nterm equality_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 209
Next token is token ';' (19.19: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (19.18: )
-> $$ = nterm and_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 210
Next token is token ';' (19.19: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (19.18: )
-> $$ = nterm exclusive_or_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 211
Next token is token ';' (19.19: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (19.18: )
-> $$ = nterm inclusive_or_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 212
Next token is token ';' (19.19: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (19.18: )
-> $$ = nterm logical_and_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 213
Next token is token ';' (19.19: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (19.18: )
-> $$ = nterm logical_or_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 237
Next token is token ';' (19.19: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (19.18: )
-> $$ = nterm conditional_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (19.18: )
-> $$ = nterm assignment_expression (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (19.18: )
-> $$ = nterm initializer_clause (19.18: )
Stack now 157 235 155 119 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (19.16: )
   $2 = nterm initializer_clause (19.18: )
-> $$ = nterm initializer (19.16-17: )
Stack now 235 155 119 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (19.16-17: )
-> $$ = nterm initializer_opt (19.16-17: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (19.12-13: )
   $2 = nterm initializer_opt (19.16-17: )
-> $$ = nterm init_declarator (19.12-17: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (19.5-8: )
   $2 = token ',' (19.10: )
   $3 = nterm init_declarator (19.12-17: )
-> $$ = nterm init_declarator_list (19.5-17: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (19.19: )
Shifting token ';' (19.19: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (19.1-2: )
   $2 = nterm init_declarator_list (19.5-17: )
   $3 = token ';' (19.19: )
-> $$ = nterm simple_declaration (19.1-18: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (19.1-18: )
-> $$ = nterm block_declaration (19.1-18: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (19.1-18: )
-> $$ = nterm declaration (19.1-18: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-16.19: )
   $2 = nterm declaration (19.1-18: )
-> $$ = nterm declaration_seq (1.1-19.18: )
Stack now 0
Entering state 31
Reading a token: Next token is token FLOAT (20.1-4: )
Shifting token FLOAT (20.1-4: )
Entering state 9
Reducing stack by rule 180 (line 1039):
   $1 = token FLOAT (20.1-4: )
-> $$ = nterm simple_type_specifier (20.1-4: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (20.1-4: )
-> $$ = nterm type_specifier (20.1-4: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (20.1-4: )
-> $$ = nterm decl_specifier (20.1-4: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (20.1-4: )
-> $$ = nterm decl_specifier_seq (20.1-4: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (20.7: )
Shifting token IDENTIFIER (20.7: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (20.7: )
-> $$ = nterm identifier (20.7: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (20.7: )
-> $$ = nterm unqualified_id (20.7: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (20.7: )
-> $$ = nterm id_expression (20.7: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (20.7: )
-> $$ = nterm declarator_id (20.7: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (20.7: )
-> $$ = nterm direct_declarator (20.7: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '=' (20.9: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (20.7: )
-> $$ = nterm declarator (20.7: )
Stack now 36 31 0
Entering state 121
Next token is token '=' (20.9: )
Shifting token '=' (20.9: )
Entering state 157
Reading a token: Next token is token FLOATVAL (20.11-13: )
Shifting token FLOATVAL (20.11-13: )
Entering state 174
Reducing stack by rule 9 (line 199):
   $1 = token FLOATVAL (20.11-13: )
-> $$ = nterm float_literal (20.11-13: )
Stack now 157 121 36 31 0
Entering state 193
Reducing stack by rule 4 (line 183):
   $1 = nterm float_literal (20.11-13: )
-> $$ = nterm literal (20.11-13: )
Stack now 157 121 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (20.11-13: )
-> $$ = nterm primary_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (20.11-13: )
-> $$ = nterm postfix_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (20.15: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (20.11-13: )
-> $$ = nterm unary_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (20.11-13: )
-> $$ = nterm cast_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (20.11-13: )
-> $$ = nterm pm_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 204
Next token is token ';' (20.15: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (20.11-13: )
-> $$ = nterm multiplicative_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 205
Next token is token ';' (20.15: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (20.11-13: )
-> $$ = nterm additive_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 206
Next token is token ';' (20.15: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (20.11-13: )
-> $$ = nterm shift_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 207
Next token is token ';' (20.15: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (20.11-13: )
-> $$ = nterm relational_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 208
Next token is token ';' (20.15: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (20.11-13: )
-> $$ = nterm equality_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 209
Next token is token ';' (20.15: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (20.11-13: )
-> $$ = nterm and_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 210
Next token is token ';' (20.15: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (20.11-13: )
-> $$ = nterm exclusive_or_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 211
Next token is token ';' (20.15: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (20.11-13: )
-> $$ = nterm inclusive_or_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 212
Next token is token ';' (20.15: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (20.11-13: )
-> $$ = nterm logical_and_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 213
Next token is token ';' (20.15: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (20.11-13: )
-> $$ = nterm logical_or_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 237
Next token is token ';' (20.15: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (20.11-13: )
-> $$ = nterm conditional_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (20.11-13: )
-> $$ = nterm assignment_expression (20.11-13: )
Stack now 157 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (20.11-13: )
-> $$ = nterm initializer_clause (20.11-13: )
Stack now 157 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (20.9: )
   $2 = nterm initializer_clause (20.11-13: )
-> $$ = nterm initializer (20.9-13: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (20.9-13: )
-> $$ = nterm initializer_opt (20.9-13: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (20.7: )
   $2 = nterm initializer_opt (20.9-13: )
-> $$ = nterm init_declarator (20.7-13: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (20.7-13: )
-> $$ = nterm init_declarator_list (20.7-13: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (20.15: )
Shifting token ';' (20.15: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (20.1-4: )
   $2 = nterm init_declarator_list (20.7-13: )
   $3 = token ';' (20.15: )
-> $$ = nterm simple_declaration (20.1-14: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (20.1-14: )
-> $$ = nterm block_declaration (20.1-14: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (20.1-14: )
-> $$ = nterm declaration (20.1-14: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-19.18: )
   $2 = nterm declaration (20.1-14: )
-> $$ = nterm declaration_seq (1.1-20.14: )
Stack now 0
Entering state 31
Reading a token: Next token is token CHAR (21.1-3: )
Shifting token CHAR (21.1-3: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (21.1-3: )
-> $$ = nterm simple_type_specifier (21.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (21.1-3: )
-> $$ = nterm type_specifier (21.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (21.1-3: )
-> $$ = nterm decl_specifier (21.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (21.1-3: )
-> $$ = nterm decl_specifier_seq (21.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (21.6: )
Shifting token IDENTIFIER (21.6: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (21.6: )
-> $$ = nterm identifier (21.6: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (21.6: )
-> $$ = nterm unqualified_id (21.6: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (21.6: )
-> $$ = nterm id_expression (21.6: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (21.6: )
-> $$ = nterm declarator_id (21.6: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (21.6: )
-> $$ = nterm direct_declarator (21.6: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '=' (21.8: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (21.6: )
-> $$ = nterm declarator (21.6: )
Stack now 36 31 0
Entering state 121
Next token is token '=' (21.8: )
Shifting token '=' (21.8: )
Entering state 157
Reading a token: Next token is token CHARVAL (21.10-11: )
Shifting token CHARVAL (21.10-11: )
Entering state 175
Reducing stack by rule 8 (line 194):
   $1 = token CHARVAL (21.10-11: )
-> $$ = nterm char_literal (21.10-11: )
Stack now 157 121 36 31 0
Entering state 192
Reducing stack by rule 3 (line 182):
   $1 = nterm char_literal (21.10-11: )
-> $$ = nterm literal (21.10-11: )
Stack now 157 121 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (21.10-11: )
-> $$ = nterm primary_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (21.10-11: )
-> $$ = nterm postfix_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (21.13: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (21.10-11: )
-> $$ = nterm unary_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (21.10-11: )
-> $$ = nterm cast_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (21.10-11: )
-> $$ = nterm pm_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 204
Next token is token ';' (21.13: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (21.10-11: )
-> $$ = nterm multiplicative_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 205
Next token is token ';' (21.13: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (21.10-11: )
-> $$ = nterm additive_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 206
Next token is token ';' (21.13: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (21.10-11: )
-> $$ = nterm shift_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 207
Next token is token ';' (21.13: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (21.10-11: )
-> $$ = nterm relational_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 208
Next token is token ';' (21.13: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (21.10-11: )
-> $$ = nterm equality_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 209
Next token is token ';' (21.13: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (21.10-11: )
-> $$ = nterm and_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 210
Next token is token ';' (21.13: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (21.10-11: )
-> $$ = nterm exclusive_or_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 211
Next token is token ';' (21.13: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (21.10-11: )
-> $$ = nterm inclusive_or_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 212
Next token is token ';' (21.13: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (21.10-11: )
-> $$ = nterm logical_and_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 213
Next token is token ';' (21.13: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (21.10-11: )
-> $$ = nterm logical_or_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 237
Next token is token ';' (21.13: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (21.10-11: )
-> $$ = nterm conditional_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (21.10-11: )
-> $$ = nterm assignment_expression (21.10-11: )
Stack now 157 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (21.10-11: )
-> $$ = nterm initializer_clause (21.10-11: )
Stack now 157 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (21.8: )
   $2 = nterm initializer_clause (21.10-11: )
-> $$ = nterm initializer (21.8-11: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (21.8-11: )
-> $$ = nterm initializer_opt (21.8-11: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (21.6: )
   $2 = nterm initializer_opt (21.8-11: )
-> $$ = nterm init_declarator (21.6-11: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (21.6-11: )
-> $$ = nterm init_declarator_list (21.6-11: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (21.13: )
Shifting token ';' (21.13: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (21.1-3: )
   $2 = nterm init_declarator_list (21.6-11: )
   $3 = token ';' (21.13: )
-> $$ = nterm simple_declaration (21.1-12: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (21.1-12: )
-> $$ = nterm block_declaration (21.1-12: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (21.1-12: )
-> $$ = nterm declaration (21.1-12: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-20.14: )
   $2 = nterm declaration (21.1-12: )
-> $$ = nterm declaration_seq (1.1-21.12: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (23.1-2: )
Shifting token INT (23.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (23.1-2: )
-> $$ = nterm simple_type_specifier (23.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (23.1-2: )
-> $$ = nterm type_specifier (23.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (23.1-2: )
-> $$ = nterm decl_specifier (23.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (23.1-2: )
-> $$ = nterm decl_specifier_seq (23.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (23.5-6: )
Shifting token IDENTIFIER (23.5-6: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (23.5-6: )
-> $$ = nterm identifier (23.5-6: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (23.5-6: )
-> $$ = nterm unqualified_id (23.5-6: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (23.5-6: )
-> $$ = nterm id_expression (23.5-6: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (23.5-6: )
-> $$ = nterm declarator_id (23.5-6: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (23.5-6: )
-> $$ = nterm direct_declarator (23.5-6: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '[' (23.8: )
Shifting token '[' (23.8: )
Entering state 128
Reading a token: Next token is token INTVAL (23.9: )
Shifting token INTVAL (23.9: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (23.9: )
-> $$ = nterm int_literal (23.9: )
Stack now 128 43 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (23.9: )
-> $$ = nterm literal (23.9: )
Stack now 128 43 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (23.9: )
-> $$ = nterm primary_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (23.9: )
-> $$ = nterm postfix_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 198
Reading a token: Next token is token ']' (23.11: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (23.9: )
-> $$ = nterm unary_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (23.9: )
-> $$ = nterm cast_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (23.9: )
-> $$ = nterm pm_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 204
Next token is token ']' (23.11: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (23.9: )
-> $$ = nterm multiplicative_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 205
Next token is token ']' (23.11: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (23.9: )
-> $$ = nterm additive_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 206
Next token is token ']' (23.11: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (23.9: )
-> $$ = nterm shift_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 207
Next token is token ']' (23.11: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (23.9: )
-> $$ = nterm relational_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 208
Next token is token ']' (23.11: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (23.9: )
-> $$ = nterm equality_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 209
Next token is token ']' (23.11: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (23.9: )
-> $$ = nterm and_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 210
Next token is token ']' (23.11: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (23.9: )
-> $$ = nterm exclusive_or_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 211
Next token is token ']' (23.11: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (23.9: )
-> $$ = nterm inclusive_or_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 212
Next token is token ']' (23.11: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (23.9: )
-> $$ = nterm logical_and_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 213
Next token is token ']' (23.11: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (23.9: )
-> $$ = nterm logical_or_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 214
Next token is token ']' (23.11: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (23.9: )
-> $$ = nterm conditional_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (23.9: )
-> $$ = nterm constant_expression (23.9: )
Stack now 128 43 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (23.9: )
-> $$ = nterm constant_expression_opt (23.9: )
Stack now 128 43 36 31 0
Entering state 218
Next token is token ']' (23.11: )
Shifting token ']' (23.11: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (23.5-6: )
   $2 = token '[' (23.8: )
   $3 = nterm constant_expression_opt (23.9: )
   $4 = token ']' (23.11: )
-> $$ = nterm direct_declarator (23.5-10: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ',' (23.12: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (23.5-10: )
-> $$ = nterm declarator (23.5-10: )
Stack now 36 31 0
Entering state 121
Next token is token ',' (23.12: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (23.11: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (23.5-10: )
   $2 = nterm initializer_opt (23.11: )
-> $$ = nterm init_declarator (23.5-10: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (23.5-10: )
-> $$ = nterm init_declarator_list (23.5-10: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (23.12: )
Shifting token ',' (23.12: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (23.14-16: )
Shifting token IDENTIFIER (23.14-16: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (23.14-16: )
-> $$ = nterm identifier (23.14-16: )
Stack now 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (23.14-16: )
-> $$ = nterm unqualified_id (23.14-16: )
Stack now 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (23.14-16: )
-> $$ = nterm id_expression (23.14-16: )
Stack now 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (23.14-16: )
-> $$ = nterm declarator_id (23.14-16: )
Stack now 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (23.14-16: )
-> $$ = nterm direct_declarator (23.14-16: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token '[' (23.18: )
Shifting token '[' (23.18: )
Entering state 128
Reading a token: Next token is token INTVAL (23.19: )
Shifting token INTVAL (23.19: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (23.19: )
-> $$ = nterm int_literal (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (23.19: )
-> $$ = nterm literal (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (23.19: )
-> $$ = nterm primary_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (23.19: )
-> $$ = nterm postfix_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ']' (23.20: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (23.19: )
-> $$ = nterm unary_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (23.19: )
-> $$ = nterm cast_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (23.19: )
-> $$ = nterm pm_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 204
Next token is token ']' (23.20: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (23.19: )
-> $$ = nterm multiplicative_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 205
Next token is token ']' (23.20: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (23.19: )
-> $$ = nterm additive_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 206
Next token is token ']' (23.20: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (23.19: )
-> $$ = nterm shift_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 207
Next token is token ']' (23.20: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (23.19: )
-> $$ = nterm relational_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 208
Next token is token ']' (23.20: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (23.19: )
-> $$ = nterm equality_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 209
Next token is token ']' (23.20: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (23.19: )
-> $$ = nterm and_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 210
Next token is token ']' (23.20: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (23.19: )
-> $$ = nterm exclusive_or_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 211
Next token is token ']' (23.20: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (23.19: )
-> $$ = nterm inclusive_or_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 212
Next token is token ']' (23.20: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (23.19: )
-> $$ = nterm logical_and_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 213
Next token is token ']' (23.20: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (23.19: )
-> $$ = nterm logical_or_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 214
Next token is token ']' (23.20: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (23.19: )
-> $$ = nterm conditional_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (23.19: )
-> $$ = nterm constant_expression (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (23.19: )
-> $$ = nterm constant_expression_opt (23.19: )
Stack now 128 43 155 119 36 31 0
Entering state 218
Next token is token ']' (23.20: )
Shifting token ']' (23.20: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (23.14-16: )
   $2 = token '[' (23.18: )
   $3 = nterm constant_expression_opt (23.19: )
   $4 = token ']' (23.20: )
-> $$ = nterm direct_declarator (23.14-19: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token '[' (23.21: )
Shifting token '[' (23.21: )
Entering state 128
Reading a token: Next token is token INTVAL (23.22: )
Shifting token INTVAL (23.22: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (23.22: )
-> $$ = nterm int_literal (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (23.22: )
-> $$ = nterm literal (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (23.22: )
-> $$ = nterm primary_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (23.22: )
-> $$ = nterm postfix_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ']' (23.23: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (23.22: )
-> $$ = nterm unary_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (23.22: )
-> $$ = nterm cast_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (23.22: )
-> $$ = nterm pm_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 204
Next token is token ']' (23.23: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (23.22: )
-> $$ = nterm multiplicative_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 205
Next token is token ']' (23.23: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (23.22: )
-> $$ = nterm additive_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 206
Next token is token ']' (23.23: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (23.22: )
-> $$ = nterm shift_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 207
Next token is token ']' (23.23: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (23.22: )
-> $$ = nterm relational_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 208
Next token is token ']' (23.23: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (23.22: )
-> $$ = nterm equality_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 209
Next token is token ']' (23.23: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (23.22: )
-> $$ = nterm and_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 210
Next token is token ']' (23.23: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (23.22: )
-> $$ = nterm exclusive_or_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 211
Next token is token ']' (23.23: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (23.22: )
-> $$ = nterm inclusive_or_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 212
Next token is token ']' (23.23: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (23.22: )
-> $$ = nterm logical_and_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 213
Next token is token ']' (23.23: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (23.22: )
-> $$ = nterm logical_or_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 214
Next token is token ']' (23.23: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (23.22: )
-> $$ = nterm conditional_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (23.22: )
-> $$ = nterm constant_expression (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (23.22: )
-> $$ = nterm constant_expression_opt (23.22: )
Stack now 128 43 155 119 36 31 0
Entering state 218
Next token is token ']' (23.23: )
Shifting token ']' (23.23: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (23.14-19: )
   $2 = token '[' (23.21: )
   $3 = nterm constant_expression_opt (23.22: )
   $4 = token ']' (23.23: )
-> $$ = nterm direct_declarator (23.14-22: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token ',' (23.24: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (23.14-22: )
-> $$ = nterm declarator (23.14-22: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ',' (23.24: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (23.23: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (23.14-22: )
   $2 = nterm initializer_opt (23.23: )
-> $$ = nterm init_declarator (23.14-22: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (23.5-10: )
   $2 = token ',' (23.12: )
   $3 = nterm init_declarator (23.14-22: )
-> $$ = nterm init_declarator_list (23.5-22: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (23.24: )
Shifting token ',' (23.24: )
Entering state 155
Reading a token: Next token is token IDENTIFIER (23.26-28: )
Shifting token IDENTIFIER (23.26-28: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (23.26-28: )
-> $$ = nterm identifier (23.26-28: )
Stack now 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (23.26-28: )
-> $$ = nterm unqualified_id (23.26-28: )
Stack now 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (23.26-28: )
-> $$ = nterm id_expression (23.26-28: )
Stack now 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (23.26-28: )
-> $$ = nterm declarator_id (23.26-28: )
Stack now 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (23.26-28: )
-> $$ = nterm direct_declarator (23.26-28: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token '[' (23.30: )
Shifting token '[' (23.30: )
Entering state 128
Reading a token: Next token is token INTVAL (23.31: )
Shifting token INTVAL (23.31: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (23.31: )
-> $$ = nterm int_literal (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (23.31: )
-> $$ = nterm literal (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (23.31: )
-> $$ = nterm primary_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (23.31: )
-> $$ = nterm postfix_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ']' (23.32: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (23.31: )
-> $$ = nterm unary_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (23.31: )
-> $$ = nterm cast_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (23.31: )
-> $$ = nterm pm_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 204
Next token is token ']' (23.32: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (23.31: )
-> $$ = nterm multiplicative_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 205
Next token is token ']' (23.32: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (23.31: )
-> $$ = nterm additive_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 206
Next token is token ']' (23.32: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (23.31: )
-> $$ = nterm shift_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 207
Next token is token ']' (23.32: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (23.31: )
-> $$ = nterm relational_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 208
Next token is token ']' (23.32: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (23.31: )
-> $$ = nterm equality_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 209
Next token is token ']' (23.32: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (23.31: )
-> $$ = nterm and_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 210
Next token is token ']' (23.32: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (23.31: )
-> $$ = nterm exclusive_or_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 211
Next token is token ']' (23.32: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (23.31: )
-> $$ = nterm inclusive_or_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 212
Next token is token ']' (23.32: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (23.31: )
-> $$ = nterm logical_and_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 213
Next token is token ']' (23.32: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (23.31: )
-> $$ = nterm logical_or_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 214
Next token is token ']' (23.32: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (23.31: )
-> $$ = nterm conditional_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (23.31: )
-> $$ = nterm constant_expression (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (23.31: )
-> $$ = nterm constant_expression_opt (23.31: )
Stack now 128 43 155 119 36 31 0
Entering state 218
Next token is token ']' (23.32: )
Shifting token ']' (23.32: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (23.26-28: )
   $2 = token '[' (23.30: )
   $3 = nterm constant_expression_opt (23.31: )
   $4 = token ']' (23.32: )
-> $$ = nterm direct_declarator (23.26-31: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token '[' (23.33: )
Shifting token '[' (23.33: )
Entering state 128
Reading a token: Next token is token INTVAL (23.34: )
Shifting token INTVAL (23.34: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (23.34: )
-> $$ = nterm int_literal (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (23.34: )
-> $$ = nterm literal (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (23.34: )
-> $$ = nterm primary_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (23.34: )
-> $$ = nterm postfix_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ']' (23.35: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (23.34: )
-> $$ = nterm unary_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (23.34: )
-> $$ = nterm cast_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (23.34: )
-> $$ = nterm pm_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 204
Next token is token ']' (23.35: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (23.34: )
-> $$ = nterm multiplicative_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 205
Next token is token ']' (23.35: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (23.34: )
-> $$ = nterm additive_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 206
Next token is token ']' (23.35: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (23.34: )
-> $$ = nterm shift_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 207
Next token is token ']' (23.35: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (23.34: )
-> $$ = nterm relational_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 208
Next token is token ']' (23.35: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (23.34: )
-> $$ = nterm equality_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 209
Next token is token ']' (23.35: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (23.34: )
-> $$ = nterm and_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 210
Next token is token ']' (23.35: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (23.34: )
-> $$ = nterm exclusive_or_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 211
Next token is token ']' (23.35: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (23.34: )
-> $$ = nterm inclusive_or_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 212
Next token is token ']' (23.35: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (23.34: )
-> $$ = nterm logical_and_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 213
Next token is token ']' (23.35: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (23.34: )
-> $$ = nterm logical_or_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 214
Next token is token ']' (23.35: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (23.34: )
-> $$ = nterm conditional_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (23.34: )
-> $$ = nterm constant_expression (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (23.34: )
-> $$ = nterm constant_expression_opt (23.34: )
Stack now 128 43 155 119 36 31 0
Entering state 218
Next token is token ']' (23.35: )
Shifting token ']' (23.35: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (23.26-31: )
   $2 = token '[' (23.33: )
   $3 = nterm constant_expression_opt (23.34: )
   $4 = token ']' (23.35: )
-> $$ = nterm direct_declarator (23.26-34: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token '[' (23.36: )
Shifting token '[' (23.36: )
Entering state 128
Reading a token: Next token is token INTVAL (23.37: )
Shifting token INTVAL (23.37: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (23.37: )
-> $$ = nterm int_literal (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (23.37: )
-> $$ = nterm literal (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (23.37: )
-> $$ = nterm primary_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (23.37: )
-> $$ = nterm postfix_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ']' (23.38: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (23.37: )
-> $$ = nterm unary_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (23.37: )
-> $$ = nterm cast_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (23.37: )
-> $$ = nterm pm_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 204
Next token is token ']' (23.38: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (23.37: )
-> $$ = nterm multiplicative_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 205
Next token is token ']' (23.38: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (23.37: )
-> $$ = nterm additive_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 206
Next token is token ']' (23.38: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (23.37: )
-> $$ = nterm shift_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 207
Next token is token ']' (23.38: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (23.37: )
-> $$ = nterm relational_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 208
Next token is token ']' (23.38: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (23.37: )
-> $$ = nterm equality_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 209
Next token is token ']' (23.38: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (23.37: )
-> $$ = nterm and_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 210
Next token is token ']' (23.38: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (23.37: )
-> $$ = nterm exclusive_or_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 211
Next token is token ']' (23.38: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (23.37: )
-> $$ = nterm inclusive_or_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 212
Next token is token ']' (23.38: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (23.37: )
-> $$ = nterm logical_and_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 213
Next token is token ']' (23.38: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (23.37: )
-> $$ = nterm logical_or_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 214
Next token is token ']' (23.38: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (23.37: )
-> $$ = nterm conditional_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (23.37: )
-> $$ = nterm constant_expression (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (23.37: )
-> $$ = nterm constant_expression_opt (23.37: )
Stack now 128 43 155 119 36 31 0
Entering state 218
Next token is token ']' (23.38: )
Shifting token ']' (23.38: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (23.26-34: )
   $2 = token '[' (23.36: )
   $3 = nterm constant_expression_opt (23.37: )
   $4 = token ']' (23.38: )
-> $$ = nterm direct_declarator (23.26-37: )
Stack now 155 119 36 31 0
Entering state 43
Reading a token: Next token is token ';' (23.39: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (23.26-37: )
-> $$ = nterm declarator (23.26-37: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ';' (23.39: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (23.38: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (23.26-37: )
   $2 = nterm initializer_opt (23.38: )
-> $$ = nterm init_declarator (23.26-37: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (23.5-22: )
   $2 = token ',' (23.24: )
   $3 = nterm init_declarator (23.26-37: )
-> $$ = nterm init_declarator_list (23.5-37: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (23.39: )
Shifting token ';' (23.39: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (23.1-2: )
   $2 = nterm init_declarator_list (23.5-37: )
   $3 = token ';' (23.39: )
-> $$ = nterm simple_declaration (23.1-38: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (23.1-38: )
-> $$ = nterm block_declaration (23.1-38: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (23.1-38: )
-> $$ = nterm declaration (23.1-38: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-21.12: )
   $2 = nterm declaration (23.1-38: )
-> $$ = nterm declaration_seq (1.1-23.38: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (25.1-2: )
Shifting token INT (25.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (25.1-2: )
-> $$ = nterm simple_type_specifier (25.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (25.1-2: )
-> $$ = nterm type_specifier (25.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (25.1-2: )
-> $$ = nterm decl_specifier (25.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (25.1-2: )
-> $$ = nterm decl_specifier_seq (25.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token '*' (25.5: )
Shifting token '*' (25.5: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (25.6: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (25.5: )
Stack now 21 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (25.5: )
   $2 = nterm cv_qualifier_opt (25.5: )
-> $$ = nterm ptr_operator (25.5: )
Stack now 36 31 0
Entering state 45
Next token is token IDENTIFIER (25.6: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (25.5: )
-> $$ = nterm ptr_operator_list (25.5: )
Stack now 36 31 0
Entering state 44
Next token is token IDENTIFIER (25.6: )
Shifting token IDENTIFIER (25.6: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (25.6: )
-> $$ = nterm identifier (25.6: )
Stack now 44 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (25.6: )
-> $$ = nterm unqualified_id (25.6: )
Stack now 44 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (25.6: )
-> $$ = nterm id_expression (25.6: )
Stack now 44 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (25.6: )
-> $$ = nterm declarator_id (25.6: )
Stack now 44 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (25.6: )
-> $$ = nterm direct_declarator (25.6: )
Stack now 44 36 31 0
Entering state 130
Reading a token: Next token is token ',' (25.8: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (25.5: )
   $2 = nterm direct_declarator (25.6: )
-> $$ = nterm declarator (25.5-6: )
Stack now 36 31 0
Entering state 121
Next token is token ',' (25.8: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (25.7: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (25.5-6: )
   $2 = nterm initializer_opt (25.7: )
-> $$ = nterm init_declarator (25.5-6: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (25.5-6: )
-> $$ = nterm init_declarator_list (25.5-6: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (25.8: )
Shifting token ',' (25.8: )
Entering state 155
Reading a token: Next token is token '*' (25.10: )
Shifting token '*' (25.10: )
Entering state 21
Reading a token: Next token is token '*' (25.11: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (25.10: )
Stack now 21 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (25.10: )
   $2 = nterm cv_qualifier_opt (25.10: )
-> $$ = nterm ptr_operator (25.10: )
Stack now 155 119 36 31 0
Entering state 45
Next token is token '*' (25.11: )
Shifting token '*' (25.11: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (25.12-13: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (25.11: )
Stack now 21 45 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (25.11: )
   $2 = nterm cv_qualifier_opt (25.11: )
-> $$ = nterm ptr_operator (25.11: )
Stack now 45 155 119 36 31 0
Entering state 45
Next token is token IDENTIFIER (25.12-13: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (25.11: )
-> $$ = nterm ptr_operator_list (25.11: )
Stack now 45 155 119 36 31 0
Entering state 132
Reducing stack by rule 206 (line 1175):
   $1 = nterm ptr_operator (25.10: )
   $2 = nterm ptr_operator_list (25.11: )
-> $$ = nterm ptr_operator_list (25.10: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (25.12-13: )
Shifting token IDENTIFIER (25.12-13: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (25.12-13: )
-> $$ = nterm identifier (25.12-13: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (25.12-13: )
-> $$ = nterm unqualified_id (25.12-13: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (25.12-13: )
-> $$ = nterm id_expression (25.12-13: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (25.12-13: )
-> $$ = nterm declarator_id (25.12-13: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (25.12-13: )
-> $$ = nterm direct_declarator (25.12-13: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token ',' (25.15: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (25.10: )
   $2 = nterm direct_declarator (25.12-13: )
-> $$ = nterm declarator (25.10-13: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ',' (25.15: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (25.14: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (25.10-13: )
   $2 = nterm initializer_opt (25.14: )
-> $$ = nterm init_declarator (25.10-13: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (25.5-6: )
   $2 = token ',' (25.8: )
   $3 = nterm init_declarator (25.10-13: )
-> $$ = nterm init_declarator_list (25.5-13: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (25.15: )
Shifting token ',' (25.15: )
Entering state 155
Reading a token: Next token is token '*' (25.17: )
Shifting token '*' (25.17: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (25.18-19: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (25.17: )
Stack now 21 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (25.17: )
   $2 = nterm cv_qualifier_opt (25.17: )
-> $$ = nterm ptr_operator (25.17: )
Stack now 155 119 36 31 0
Entering state 45
Next token is token IDENTIFIER (25.18-19: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (25.17: )
-> $$ = nterm ptr_operator_list (25.17: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (25.18-19: )
Shifting token IDENTIFIER (25.18-19: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (25.18-19: )
-> $$ = nterm identifier (25.18-19: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (25.18-19: )
-> $$ = nterm unqualified_id (25.18-19: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (25.18-19: )
-> $$ = nterm id_expression (25.18-19: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (25.18-19: )
-> $$ = nterm declarator_id (25.18-19: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (25.18-19: )
-> $$ = nterm direct_declarator (25.18-19: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token '[' (25.21: )
Shifting token '[' (25.21: )
Entering state 128
Reading a token: Next token is token INTVAL (25.22: )
Shifting token INTVAL (25.22: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (25.22: )
-> $$ = nterm int_literal (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (25.22: )
-> $$ = nterm literal (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (25.22: )
-> $$ = nterm primary_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (25.22: )
-> $$ = nterm postfix_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ']' (25.23: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (25.22: )
-> $$ = nterm unary_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (25.22: )
-> $$ = nterm cast_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (25.22: )
-> $$ = nterm pm_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 204
Next token is token ']' (25.23: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (25.22: )
-> $$ = nterm multiplicative_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 205
Next token is token ']' (25.23: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (25.22: )
-> $$ = nterm additive_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 206
Next token is token ']' (25.23: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (25.22: )
-> $$ = nterm shift_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 207
Next token is token ']' (25.23: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (25.22: )
-> $$ = nterm relational_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 208
Next token is token ']' (25.23: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (25.22: )
-> $$ = nterm equality_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 209
Next token is token ']' (25.23: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (25.22: )
-> $$ = nterm and_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 210
Next token is token ']' (25.23: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (25.22: )
-> $$ = nterm exclusive_or_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 211
Next token is token ']' (25.23: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (25.22: )
-> $$ = nterm inclusive_or_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 212
Next token is token ']' (25.23: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (25.22: )
-> $$ = nterm logical_and_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 213
Next token is token ']' (25.23: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (25.22: )
-> $$ = nterm logical_or_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 214
Next token is token ']' (25.23: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (25.22: )
-> $$ = nterm conditional_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (25.22: )
-> $$ = nterm constant_expression (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (25.22: )
-> $$ = nterm constant_expression_opt (25.22: )
Stack now 128 130 44 155 119 36 31 0
Entering state 218
Next token is token ']' (25.23: )
Shifting token ']' (25.23: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (25.18-19: )
   $2 = token '[' (25.21: )
   $3 = nterm constant_expression_opt (25.22: )
   $4 = token ']' (25.23: )
-> $$ = nterm direct_declarator (25.18-22: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token ',' (25.24: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (25.17: )
   $2 = nterm direct_declarator (25.18-22: )
-> $$ = nterm declarator (25.17-22: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ',' (25.24: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (25.23: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (25.17-22: )
   $2 = nterm initializer_opt (25.23: )
-> $$ = nterm init_declarator (25.17-22: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (25.5-13: )
   $2 = token ',' (25.15: )
   $3 = nterm init_declarator (25.17-22: )
-> $$ = nterm init_declarator_list (25.5-22: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (25.24: )
Shifting token ',' (25.24: )
Entering state 155
Reading a token: Next token is token '&' (25.26: )
Shifting token '&' (25.26: )
Entering state 22
Reducing stack by rule 208 (line 1185):
   $1 = token '&' (25.26: )
-> $$ = nterm ptr_operator (25.26: )
Stack now 155 119 36 31 0
Entering state 45
Reading a token: Next token is token IDENTIFIER (25.27: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (25.26: )
-> $$ = nterm ptr_operator_list (25.26: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (25.27: )
Shifting token IDENTIFIER (25.27: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (25.27: )
-> $$ = nterm identifier (25.27: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (25.27: )
-> $$ = nterm unqualified_id (25.27: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (25.27: )
-> $$ = nterm id_expression (25.27: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (25.27: )
-> $$ = nterm declarator_id (25.27: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (25.27: )
-> $$ = nterm direct_declarator (25.27: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token '=' (25.30: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (25.26: )
   $2 = nterm direct_declarator (25.27: )
-> $$ = nterm declarator (25.26-27: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token '=' (25.30: )
Shifting token '=' (25.30: )
Entering state 157
Reading a token: Next token is token IDENTIFIER (25.32: )
Shifting token IDENTIFIER (25.32: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (25.32: )
-> $$ = nterm identifier (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (25.32: )
-> $$ = nterm unqualified_id (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (25.32: )
-> $$ = nterm id_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (25.32: )
-> $$ = nterm primary_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (25.32: )
-> $$ = nterm postfix_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ';' (25.33: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (25.32: )
-> $$ = nterm unary_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (25.32: )
-> $$ = nterm cast_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (25.32: )
-> $$ = nterm pm_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 204
Next token is token ';' (25.33: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (25.32: )
-> $$ = nterm multiplicative_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 205
Next token is token ';' (25.33: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (25.32: )
-> $$ = nterm additive_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 206
Next token is token ';' (25.33: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (25.32: )
-> $$ = nterm shift_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 207
Next token is token ';' (25.33: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (25.32: )
-> $$ = nterm relational_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 208
Next token is token ';' (25.33: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (25.32: )
-> $$ = nterm equality_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 209
Next token is token ';' (25.33: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (25.32: )
-> $$ = nterm and_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 210
Next token is token ';' (25.33: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (25.32: )
-> $$ = nterm exclusive_or_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 211
Next token is token ';' (25.33: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (25.32: )
-> $$ = nterm inclusive_or_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 212
Next token is token ';' (25.33: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (25.32: )
-> $$ = nterm logical_and_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 213
Next token is token ';' (25.33: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (25.32: )
-> $$ = nterm logical_or_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 237
Next token is token ';' (25.33: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (25.32: )
-> $$ = nterm conditional_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (25.32: )
-> $$ = nterm assignment_expression (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (25.32: )
-> $$ = nterm initializer_clause (25.32: )
Stack now 157 235 155 119 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (25.30: )
   $2 = nterm initializer_clause (25.32: )
-> $$ = nterm initializer (25.30-31: )
Stack now 235 155 119 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (25.30-31: )
-> $$ = nterm initializer_opt (25.30-31: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (25.26-27: )
   $2 = nterm initializer_opt (25.30-31: )
-> $$ = nterm init_declarator (25.26-31: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (25.5-22: )
   $2 = token ',' (25.24: )
   $3 = nterm init_declarator (25.26-31: )
-> $$ = nterm init_declarator_list (25.5-31: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (25.33: )
Shifting token ';' (25.33: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (25.1-2: )
   $2 = nterm init_declarator_list (25.5-31: )
   $3 = token ';' (25.33: )
-> $$ = nterm simple_declaration (25.1-32: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (25.1-32: )
-> $$ = nterm block_declaration (25.1-32: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (25.1-32: )
-> $$ = nterm declaration (25.1-32: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-23.38: )
   $2 = nterm declaration (25.1-32: )
-> $$ = nterm declaration_seq (1.1-25.32: )
Stack now 0
Entering state 31
Reading a token: Next token is token CHAR (26.1-3: )
Shifting token CHAR (26.1-3: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (26.1-3: )
-> $$ = nterm simple_type_specifier (26.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (26.1-3: )
-> $$ = nterm type_specifier (26.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (26.1-3: )
-> $$ = nterm decl_specifier (26.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (26.1-3: )
-> $$ = nterm decl_specifier_seq (26.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token '*' (26.6: )
Shifting token '*' (26.6: )
Entering state 21
Reading a token: Next token is token '*' (26.7: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (26.6: )
Stack now 21 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (26.6: )
   $2 = nterm cv_qualifier_opt (26.6: )
-> $$ = nterm ptr_operator (26.6: )
Stack now 36 31 0
Entering state 45
Next token is token '*' (26.7: )
Shifting token '*' (26.7: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (26.9-10: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (26.7: )
Stack now 21 45 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (26.7: )
   $2 = nterm cv_qualifier_opt (26.7: )
-> $$ = nterm ptr_operator (26.7: )
Stack now 45 36 31 0
Entering state 45
Next token is token IDENTIFIER (26.9-10: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (26.7: )
-> $$ = nterm ptr_operator_list (26.7: )
Stack now 45 36 31 0
Entering state 132
Reducing stack by rule 206 (line 1175):
   $1 = nterm ptr_operator (26.6: )
   $2 = nterm ptr_operator_list (26.7: )
-> $$ = nterm ptr_operator_list (26.6: )
Stack now 36 31 0
Entering state 44
Next token is token IDENTIFIER (26.9-10: )
Shifting token IDENTIFIER (26.9-10: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (26.9-10: )
-> $$ = nterm identifier (26.9-10: )
Stack now 44 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (26.9-10: )
-> $$ = nterm unqualified_id (26.9-10: )
Stack now 44 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (26.9-10: )
-> $$ = nterm id_expression (26.9-10: )
Stack now 44 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (26.9-10: )
-> $$ = nterm declarator_id (26.9-10: )
Stack now 44 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (26.9-10: )
-> $$ = nterm direct_declarator (26.9-10: )
Stack now 44 36 31 0
Entering state 130
Reading a token: Next token is token ',' (26.12: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (26.6: )
   $2 = nterm direct_declarator (26.9-10: )
-> $$ = nterm declarator (26.6-10: )
Stack now 36 31 0
Entering state 121
Next token is token ',' (26.12: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (26.11: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (26.6-10: )
   $2 = nterm initializer_opt (26.11: )
-> $$ = nterm init_declarator (26.6-10: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (26.6-10: )
-> $$ = nterm init_declarator_list (26.6-10: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (26.12: )
Shifting token ',' (26.12: )
Entering state 155
Reading a token: Next token is token '*' (26.14: )
Shifting token '*' (26.14: )
Entering state 21
Reading a token: Next token is token '&' (26.15: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (26.14: )
Stack now 21 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (26.14: )
   $2 = nterm cv_qualifier_opt (26.14: )
-> $$ = nterm ptr_operator (26.14: )
Stack now 155 119 36 31 0
Entering state 45
Next token is token '&' (26.15: )
Shifting token '&' (26.15: )
Entering state 22
Reducing stack by rule 208 (line 1185):
   $1 = token '&' (26.15: )
-> $$ = nterm ptr_operator (26.15: )
Stack now 45 155 119 36 31 0
Entering state 45
Reading a token: Next token is token IDENTIFIER (26.16-17: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (26.15: )
-> $$ = nterm ptr_operator_list (26.15: )
Stack now 45 155 119 36 31 0
Entering state 132
Reducing stack by rule 206 (line 1175):
   $1 = nterm ptr_operator (26.14: )
   $2 = nterm ptr_operator_list (26.15: )
-> $$ = nterm ptr_operator_list (26.14: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (26.16-17: )
Shifting token IDENTIFIER (26.16-17: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (26.16-17: )
-> $$ = nterm identifier (26.16-17: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (26.16-17: )
-> $$ = nterm unqualified_id (26.16-17: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (26.16-17: )
-> $$ = nterm id_expression (26.16-17: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (26.16-17: )
-> $$ = nterm declarator_id (26.16-17: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (26.16-17: )
-> $$ = nterm direct_declarator (26.16-17: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token ';' (26.19: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (26.14: )
   $2 = nterm direct_declarator (26.16-17: )
-> $$ = nterm declarator (26.14-17: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ';' (26.19: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (26.18: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (26.14-17: )
   $2 = nterm initializer_opt (26.18: )
-> $$ = nterm init_declarator (26.14-17: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (26.6-10: )
   $2 = token ',' (26.12: )
   $3 = nterm init_declarator (26.14-17: )
-> $$ = nterm init_declarator_list (26.6-17: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (26.19: )
Shifting token ';' (26.19: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (26.1-3: )
   $2 = nterm init_declarator_list (26.6-17: )
   $3 = token ';' (26.19: )
-> $$ = nterm simple_declaration (26.1-18: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (26.1-18: )
-> $$ = nterm block_declaration (26.1-18: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (26.1-18: )
-> $$ = nterm declaration (26.1-18: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-25.32: )
   $2 = nterm declaration (26.1-18: )
-> $$ = nterm declaration_seq (1.1-26.18: )
Stack now 0
Entering state 31
Reading a token: Next token is token VOID (28.1-3: )
Shifting token VOID (28.1-3: )
Entering state 20
Reducing stack by rule 182 (line 1041):
   $1 = token VOID (28.1-3: )
-> $$ = nterm simple_type_specifier (28.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (28.1-3: )
-> $$ = nterm type_specifier (28.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (28.1-3: )
-> $$ = nterm decl_specifier (28.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (28.1-3: )
-> $$ = nterm decl_specifier_seq (28.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (28.6: )
Shifting token IDENTIFIER (28.6: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (28.6: )
-> $$ = nterm identifier (28.6: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (28.6: )
-> $$ = nterm unqualified_id (28.6: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (28.6: )
-> $$ = nterm id_expression (28.6: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (28.6: )
-> $$ = nterm declarator_id (28.6: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (28.6: )
-> $$ = nterm direct_declarator (28.6: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '(' (28.7: )
Shifting token '(' (28.7: )
Entering state 127
Reading a token: Next token is token INT (28.8-9: )
Shifting token INT (28.8-9: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (28.8-9: )
-> $$ = nterm simple_type_specifier (28.8-9: )
Stack now 127 43 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (28.8-9: )
-> $$ = nterm type_specifier (28.8-9: )
Stack now 127 43 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (28.8-9: )
-> $$ = nterm decl_specifier (28.8-9: )
Stack now 127 43 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (28.8-9: )
-> $$ = nterm decl_specifier_seq (28.8-9: )
Stack now 127 43 36 31 0
Entering state 170
Reading a token: Next token is token ')' (28.11: )
Reducing stack by rule 333 (line 1618):
-> $$ = nterm abstract_declarator_opt (28.10: )
Stack now 170 127 43 36 31 0
Entering state 276
Next token is token ')' (28.11: )
Reducing stack by rule 339 (line 1630):
-> $$ = nterm assignment_expression_opt (28.10: )
Stack now 276 170 127 43 36 31 0
Entering state 365
Reducing stack by rule 225 (line 1274):
   $1 = nterm decl_specifier_seq (28.8-9: )
   $2 = nterm abstract_declarator_opt (28.10: )
   $3 = nterm assignment_expression_opt (28.10: )
-> $$ = nterm parameter_declaration (28.8-9: )
Stack now 127 43 36 31 0
Entering state 172
Reducing stack by rule 222 (line 1260):
   $1 = nterm parameter_declaration (28.8-9: )
-> $$ = nterm parameter_declaration_list (28.8-9: )
Stack now 127 43 36 31 0
Entering state 171
Next token is token ')' (28.11: )
Shifting token ')' (28.11: )
Entering state 279
Reading a token: Next token is token ';' (28.12: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (28.11: )
Stack now 279 171 127 43 36 31 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (28.6: )
   $2 = token '(' (28.7: )
   $3 = nterm parameter_declaration_list (28.8-9: )
   $4 = token ')' (28.11: )
   $5 = nterm cv_qualifier_opt (28.11: )
-> $$ = nterm direct_declarator (28.6-10: )
Stack now 36 31 0
Entering state 43
Next token is token ';' (28.12: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (28.6-10: )
-> $$ = nterm declarator (28.6-10: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (28.12: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (28.11: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (28.6-10: )
   $2 = nterm initializer_opt (28.11: )
-> $$ = nterm init_declarator (28.6-10: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (28.6-10: )
-> $$ = nterm init_declarator_list (28.6-10: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (28.12: )
Shifting token ';' (28.12: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (28.1-3: )
   $2 = nterm init_declarator_list (28.6-10: )
   $3 = token ';' (28.12: )
-> $$ = nterm simple_declaration (28.1-11: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (28.1-11: )
-> $$ = nterm block_declaration (28.1-11: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (28.1-11: )
-> $$ = nterm declaration (28.1-11: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-26.18: )
   $2 = nterm declaration (28.1-11: )
-> $$ = nterm declaration_seq (1.1-28.11: )
Stack now 0
Entering state 31
Reading a token: Next token is token VOID (29.1-3: )
Shifting token VOID (29.1-3: )
Entering state 20
Reducing stack by rule 182 (line 1041):
   $1 = token VOID (29.1-3: )
-> $$ = nterm simple_type_specifier (29.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (29.1-3: )
-> $$ = nterm type_specifier (29.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (29.1-3: )
-> $$ = nterm decl_specifier (29.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (29.1-3: )
-> $$ = nterm decl_specifier_seq (29.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token '(' (29.6: )
Shifting token '(' (29.6: )
Entering state 23
Reading a token: Next token is token '*' (29.7: )
Shifting token '*' (29.7: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (29.8: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (29.7: )
Stack now 21 23 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (29.7: )
   $2 = nterm cv_qualifier_opt (29.7: )
-> $$ = nterm ptr_operator (29.7: )
Stack now 23 36 31 0
Entering state 45
Next token is token IDENTIFIER (29.8: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (29.7: )
-> $$ = nterm ptr_operator_list (29.7: )
Stack now 23 36 31 0
Entering state 44
Next token is token IDENTIFIER (29.8: )
Shifting token IDENTIFIER (29.8: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (29.8: )
-> $$ = nterm identifier (29.8: )
Stack now 44 23 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (29.8: )
-> $$ = nterm unqualified_id (29.8: )
Stack now 44 23 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (29.8: )
-> $$ = nterm id_expression (29.8: )
Stack now 44 23 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (29.8: )
-> $$ = nterm declarator_id (29.8: )
Stack now 44 23 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (29.8: )
-> $$ = nterm direct_declarator (29.8: )
Stack now 44 23 36 31 0
Entering state 130
Reading a token: Next token is token ')' (29.10: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (29.7: )
   $2 = nterm direct_declarator (29.8: )
-> $$ = nterm declarator (29.7-8: )
Stack now 23 36 31 0
Entering state 111
Next token is token ')' (29.10: )
Shifting token ')' (29.10: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (29.6: )
   $2 = nterm declarator (29.7-8: )
   $3 = token ')' (29.10: )
-> $$ = nterm direct_declarator (29.6-9: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '(' (29.11: )
Shifting token '(' (29.11: )
Entering state 127
Reading a token: Next token is token INT (29.12-13: )
Shifting token INT (29.12-13: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (29.12-13: )
-> $$ = nterm simple_type_specifier (29.12-13: )
Stack now 127 43 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (29.12-13: )
-> $$ = nterm type_specifier (29.12-13: )
Stack now 127 43 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (29.12-13: )
-> $$ = nterm decl_specifier (29.12-13: )
Stack now 127 43 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (29.12-13: )
-> $$ = nterm decl_specifier_seq (29.12-13: )
Stack now 127 43 36 31 0
Entering state 170
Reading a token: Next token is token ')' (29.15: )
Reducing stack by rule 333 (line 1618):
-> $$ = nterm abstract_declarator_opt (29.14: )
Stack now 170 127 43 36 31 0
Entering state 276
Next token is token ')' (29.15: )
Reducing stack by rule 339 (line 1630):
-> $$ = nterm assignment_expression_opt (29.14: )
Stack now 276 170 127 43 36 31 0
Entering state 365
Reducing stack by rule 225 (line 1274):
   $1 = nterm decl_specifier_seq (29.12-13: )
   $2 = nterm abstract_declarator_opt (29.14: )
   $3 = nterm assignment_expression_opt (29.14: )
-> $$ = nterm parameter_declaration (29.12-13: )
Stack now 127 43 36 31 0
Entering state 172
Reducing stack by rule 222 (line 1260):
   $1 = nterm parameter_declaration (29.12-13: )
-> $$ = nterm parameter_declaration_list (29.12-13: )
Stack now 127 43 36 31 0
Entering state 171
Next token is token ')' (29.15: )
Shifting token ')' (29.15: )
Entering state 279
Reading a token: Next token is token '=' (29.17: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (29.15: )
Stack now 279 171 127 43 36 31 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (29.6-9: )
   $2 = token '(' (29.11: )
   $3 = nterm parameter_declaration_list (29.12-13: )
   $4 = token ')' (29.15: )
   $5 = nterm cv_qualifier_opt (29.15: )
-> $$ = nterm direct_declarator (29.6-14: )
Stack now 36 31 0
Entering state 43
Next token is token '=' (29.17: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (29.6-14: )
-> $$ = nterm declarator (29.6-14: )
Stack now 36 31 0
Entering state 121
Next token is token '=' (29.17: )
Shifting token '=' (29.17: )
Entering state 157
Reading a token: Next token is token '&' (29.19: )
Shifting token '&' (29.19: )
Entering state 186
Reducing stack by rule 53 (line 421):
   $1 = token '&' (29.19: )
-> $$ = nterm unary_operator (29.19: )
Stack now 157 121 36 31 0
Entering state 200
Reading a token: Next token is token IDENTIFIER (29.20: )
Shifting token IDENTIFIER (29.20: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (29.20: )
-> $$ = nterm identifier (29.20: )
Stack now 200 157 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (29.20: )
-> $$ = nterm unqualified_id (29.20: )
Stack now 200 157 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (29.20: )
-> $$ = nterm id_expression (29.20: )
Stack now 200 157 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (29.20: )
-> $$ = nterm primary_expression (29.20: )
Stack now 200 157 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (29.20: )
-> $$ = nterm postfix_expression (29.20: )
Stack now 200 157 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (29.21: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (29.20: )
-> $$ = nterm unary_expression (29.20: )
Stack now 200 157 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (29.20: )
-> $$ = nterm cast_expression (29.20: )
Stack now 200 157 121 36 31 0
Entering state 291
Reducing stack by rule 47 (line 393):
   $1 = nterm unary_operator (29.19: )
   $2 = nterm cast_expression (29.20: )
-> $$ = nterm unary_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (29.19: )
-> $$ = nterm cast_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (29.19: )
-> $$ = nterm pm_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 204
Next token is token ';' (29.21: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (29.19: )
-> $$ = nterm multiplicative_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 205
Next token is token ';' (29.21: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (29.19: )
-> $$ = nterm additive_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 206
Next token is token ';' (29.21: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (29.19: )
-> $$ = nterm shift_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 207
Next token is token ';' (29.21: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (29.19: )
-> $$ = nterm relational_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 208
Next token is token ';' (29.21: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (29.19: )
-> $$ = nterm equality_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 209
Next token is token ';' (29.21: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (29.19: )
-> $$ = nterm and_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 210
Next token is token ';' (29.21: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (29.19: )
-> $$ = nterm exclusive_or_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 211
Next token is token ';' (29.21: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (29.19: )
-> $$ = nterm inclusive_or_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 212
Next token is token ';' (29.21: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (29.19: )
-> $$ = nterm logical_and_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 213
Next token is token ';' (29.21: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (29.19: )
-> $$ = nterm logical_or_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 237
Next token is token ';' (29.21: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (29.19: )
-> $$ = nterm conditional_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (29.19: )
-> $$ = nterm assignment_expression (29.19: )
Stack now 157 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (29.19: )
-> $$ = nterm initializer_clause (29.19: )
Stack now 157 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (29.17: )
   $2 = nterm initializer_clause (29.19: )
-> $$ = nterm initializer (29.17-19: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (29.17-19: )
-> $$ = nterm initializer_opt (29.17-19: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (29.6-14: )
   $2 = nterm initializer_opt (29.17-19: )
-> $$ = nterm init_declarator (29.6-19: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (29.6-19: )
-> $$ = nterm init_declarator_list (29.6-19: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (29.21: )
Shifting token ';' (29.21: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (29.1-3: )
   $2 = nterm init_declarator_list (29.6-19: )
   $3 = token ';' (29.21: )
-> $$ = nterm simple_declaration (29.1-20: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (29.1-20: )
-> $$ = nterm block_declaration (29.1-20: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (29.1-20: )
-> $$ = nterm declaration (29.1-20: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-28.11: )
   $2 = nterm declaration (29.1-20: )
-> $$ = nterm declaration_seq (1.1-29.20: )
Stack now 0
Entering state 31
Reading a token: Next token is token VOID (30.1-3: )
Shifting token VOID (30.1-3: )
Entering state 20
Reducing stack by rule 182 (line 1041):
   $1 = token VOID (30.1-3: )
-> $$ = nterm simple_type_specifier (30.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (30.1-3: )
-> $$ = nterm type_specifier (30.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (30.1-3: )
-> $$ = nterm decl_specifier (30.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (30.1-3: )
-> $$ = nterm decl_specifier_seq (30.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token '(' (30.6: )
Shifting token '(' (30.6: )
Entering state 23
Reading a token: Next token is token '*' (30.7: )
Shifting token '*' (30.7: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (30.8: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (30.7: )
Stack now 21 23 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (30.7: )
   $2 = nterm cv_qualifier_opt (30.7: )
-> $$ = nterm ptr_operator (30.7: )
Stack now 23 36 31 0
Entering state 45
Next token is token IDENTIFIER (30.8: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (30.7: )
-> $$ = nterm ptr_operator_list (30.7: )
Stack now 23 36 31 0
Entering state 44
Next token is token IDENTIFIER (30.8: )
Shifting token IDENTIFIER (30.8: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (30.8: )
-> $$ = nterm identifier (30.8: )
Stack now 44 23 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (30.8: )
-> $$ = nterm unqualified_id (30.8: )
Stack now 44 23 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (30.8: )
-> $$ = nterm id_expression (30.8: )
Stack now 44 23 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (30.8: )
-> $$ = nterm declarator_id (30.8: )
Stack now 44 23 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (30.8: )
-> $$ = nterm direct_declarator (30.8: )
Stack now 44 23 36 31 0
Entering state 130
Reading a token: Next token is token ')' (30.10: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (30.7: )
   $2 = nterm direct_declarator (30.8: )
-> $$ = nterm declarator (30.7-8: )
Stack now 23 36 31 0
Entering state 111
Next token is token ')' (30.10: )
Shifting token ')' (30.10: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (30.6: )
   $2 = nterm declarator (30.7-8: )
   $3 = token ')' (30.10: )
-> $$ = nterm direct_declarator (30.6-9: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '(' (30.11: )
Shifting token '(' (30.11: )
Entering state 127
Reading a token: Next token is token INT (30.12-13: )
Shifting token INT (30.12-13: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (30.12-13: )
-> $$ = nterm simple_type_specifier (30.12-13: )
Stack now 127 43 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (30.12-13: )
-> $$ = nterm type_specifier (30.12-13: )
Stack now 127 43 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (30.12-13: )
-> $$ = nterm decl_specifier (30.12-13: )
Stack now 127 43 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (30.12-13: )
-> $$ = nterm decl_specifier_seq (30.12-13: )
Stack now 127 43 36 31 0
Entering state 170
Reading a token: Next token is token ')' (30.15: )
Reducing stack by rule 333 (line 1618):
-> $$ = nterm abstract_declarator_opt (30.14: )
Stack now 170 127 43 36 31 0
Entering state 276
Next token is token ')' (30.15: )
Reducing stack by rule 339 (line 1630):
-> $$ = nterm assignment_expression_opt (30.14: )
Stack now 276 170 127 43 36 31 0
Entering state 365
Reducing stack by rule 225 (line 1274):
   $1 = nterm decl_specifier_seq (30.12-13: )
   $2 = nterm abstract_declarator_opt (30.14: )
   $3 = nterm assignment_expression_opt (30.14: )
-> $$ = nterm parameter_declaration (30.12-13: )
Stack now 127 43 36 31 0
Entering state 172
Reducing stack by rule 222 (line 1260):
   $1 = nterm parameter_declaration (30.12-13: )
-> $$ = nterm parameter_declaration_list (30.12-13: )
Stack now 127 43 36 31 0
Entering state 171
Next token is token ')' (30.15: )
Shifting token ')' (30.15: )
Entering state 279
Reading a token: Next token is token '=' (30.17: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (30.15: )
Stack now 279 171 127 43 36 31 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (30.6-9: )
   $2 = token '(' (30.11: )
   $3 = nterm parameter_declaration_list (30.12-13: )
   $4 = token ')' (30.15: )
   $5 = nterm cv_qualifier_opt (30.15: )
-> $$ = nterm direct_declarator (30.6-14: )
Stack now 36 31 0
Entering state 43
Next token is token '=' (30.17: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (30.6-14: )
-> $$ = nterm declarator (30.6-14: )
Stack now 36 31 0
Entering state 121
Next token is token '=' (30.17: )
Shifting token '=' (30.17: )
Entering state 157
Reading a token: Next token is token IDENTIFIER (30.19: )
Shifting token IDENTIFIER (30.19: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (30.19: )
-> $$ = nterm identifier (30.19: )
Stack now 157 121 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (30.19: )
-> $$ = nterm unqualified_id (30.19: )
Stack now 157 121 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (30.19: )
-> $$ = nterm id_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (30.19: )
-> $$ = nterm primary_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (30.19: )
-> $$ = nterm postfix_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 198
Reading a token: Next token is token ';' (30.20: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (30.19: )
-> $$ = nterm unary_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (30.19: )
-> $$ = nterm cast_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (30.19: )
-> $$ = nterm pm_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 204
Next token is token ';' (30.20: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (30.19: )
-> $$ = nterm multiplicative_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 205
Next token is token ';' (30.20: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (30.19: )
-> $$ = nterm additive_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 206
Next token is token ';' (30.20: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (30.19: )
-> $$ = nterm shift_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 207
Next token is token ';' (30.20: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (30.19: )
-> $$ = nterm relational_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 208
Next token is token ';' (30.20: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (30.19: )
-> $$ = nterm equality_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 209
Next token is token ';' (30.20: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (30.19: )
-> $$ = nterm and_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 210
Next token is token ';' (30.20: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (30.19: )
-> $$ = nterm exclusive_or_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 211
Next token is token ';' (30.20: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (30.19: )
-> $$ = nterm inclusive_or_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 212
Next token is token ';' (30.20: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (30.19: )
-> $$ = nterm logical_and_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 213
Next token is token ';' (30.20: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (30.19: )
-> $$ = nterm logical_or_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 237
Next token is token ';' (30.20: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (30.19: )
-> $$ = nterm conditional_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (30.19: )
-> $$ = nterm assignment_expression (30.19: )
Stack now 157 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (30.19: )
-> $$ = nterm initializer_clause (30.19: )
Stack now 157 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (30.17: )
   $2 = nterm initializer_clause (30.19: )
-> $$ = nterm initializer (30.17-18: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (30.17-18: )
-> $$ = nterm initializer_opt (30.17-18: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (30.6-14: )
   $2 = nterm initializer_opt (30.17-18: )
-> $$ = nterm init_declarator (30.6-18: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (30.6-18: )
-> $$ = nterm init_declarator_list (30.6-18: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (30.20: )
Shifting token ';' (30.20: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (30.1-3: )
   $2 = nterm init_declarator_list (30.6-18: )
   $3 = token ';' (30.20: )
-> $$ = nterm simple_declaration (30.1-19: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (30.1-19: )
-> $$ = nterm block_declaration (30.1-19: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (30.1-19: )
-> $$ = nterm declaration (30.1-19: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-29.20: )
   $2 = nterm declaration (30.1-19: )
-> $$ = nterm declaration_seq (1.1-30.19: )
Stack now 0
Entering state 31
Reading a token: Next token is token CONST (32.1-4: )
Shifting token CONST (32.1-4: )
Entering state 6
Reducing stack by rule 210 (line 1196):
   $1 = token CONST (32.1-4: )
-> $$ = nterm cv_qualifier (32.1-4: )
Stack now 31 0
Entering state 46
Reducing stack by rule 172 (line 1023):
   $1 = nterm cv_qualifier (32.1-4: )
-> $$ = nterm type_specifier (32.1-4: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (32.1-4: )
-> $$ = nterm decl_specifier (32.1-4: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (32.1-4: )
-> $$ = nterm decl_specifier_seq (32.1-4: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token INT (32.7-8: )
Shifting token INT (32.7-8: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (32.7-8: )
-> $$ = nterm simple_type_specifier (32.7-8: )
Stack now 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (32.7-8: )
-> $$ = nterm type_specifier (32.7-8: )
Stack now 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (32.7-8: )
-> $$ = nterm decl_specifier (32.7-8: )
Stack now 36 31 0
Entering state 118
Reducing stack by rule 166 (line 988):
   $1 = nterm decl_specifier_seq (32.1-4: )
   $2 = nterm decl_specifier (32.7-8: )
-> $$ = nterm decl_specifier_seq (32.1-8: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (32.11: )
Shifting token IDENTIFIER (32.11: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (32.11: )
-> $$ = nterm identifier (32.11: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (32.11: )
-> $$ = nterm unqualified_id (32.11: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (32.11: )
-> $$ = nterm id_expression (32.11: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (32.11: )
-> $$ = nterm declarator_id (32.11: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (32.11: )
-> $$ = nterm direct_declarator (32.11: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '=' (32.14: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (32.11: )
-> $$ = nterm declarator (32.11: )
Stack now 36 31 0
Entering state 121
Next token is token '=' (32.14: )
Shifting token '=' (32.14: )
Entering state 157
Reading a token: Next token is token INTVAL (32.16: )
Shifting token INTVAL (32.16: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (32.16: )
-> $$ = nterm int_literal (32.16: )
Stack now 157 121 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (32.16: )
-> $$ = nterm literal (32.16: )
Stack now 157 121 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (32.16: )
-> $$ = nterm primary_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (32.16: )
-> $$ = nterm postfix_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 198
Reading a token: Next token is token ',' (32.18: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (32.16: )
-> $$ = nterm unary_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (32.16: )
-> $$ = nterm cast_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (32.16: )
-> $$ = nterm pm_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 204
Next token is token ',' (32.18: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (32.16: )
-> $$ = nterm multiplicative_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 205
Next token is token ',' (32.18: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (32.16: )
-> $$ = nterm additive_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 206
Next token is token ',' (32.18: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (32.16: )
-> $$ = nterm shift_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 207
Next token is token ',' (32.18: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (32.16: )
-> $$ = nterm relational_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 208
Next token is token ',' (32.18: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (32.16: )
-> $$ = nterm equality_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 209
Next token is token ',' (32.18: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (32.16: )
-> $$ = nterm and_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 210
Next token is token ',' (32.18: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (32.16: )
-> $$ = nterm exclusive_or_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 211
Next token is token ',' (32.18: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (32.16: )
-> $$ = nterm inclusive_or_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 212
Next token is token ',' (32.18: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (32.16: )
-> $$ = nterm logical_and_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 213
Next token is token ',' (32.18: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (32.16: )
-> $$ = nterm logical_or_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 237
Next token is token ',' (32.18: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (32.16: )
-> $$ = nterm conditional_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (32.16: )
-> $$ = nterm assignment_expression (32.16: )
Stack now 157 121 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (32.16: )
-> $$ = nterm initializer_clause (32.16: )
Stack now 157 121 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (32.14: )
   $2 = nterm initializer_clause (32.16: )
-> $$ = nterm initializer (32.14-16: )
Stack now 121 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (32.14-16: )
-> $$ = nterm initializer_opt (32.14-16: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (32.11: )
   $2 = nterm initializer_opt (32.14-16: )
-> $$ = nterm init_declarator (32.11-16: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (32.11-16: )
-> $$ = nterm init_declarator_list (32.11-16: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (32.18: )
Shifting token ',' (32.18: )
Entering state 155
Reading a token: Next token is token '*' (32.20: )
Shifting token '*' (32.20: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (32.21: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (32.20: )
Stack now 21 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (32.20: )
   $2 = nterm cv_qualifier_opt (32.20: )
-> $$ = nterm ptr_operator (32.20: )
Stack now 155 119 36 31 0
Entering state 45
Next token is token IDENTIFIER (32.21: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (32.20: )
-> $$ = nterm ptr_operator_list (32.20: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (32.21: )
Shifting token IDENTIFIER (32.21: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (32.21: )
-> $$ = nterm identifier (32.21: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (32.21: )
-> $$ = nterm unqualified_id (32.21: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (32.21: )
-> $$ = nterm id_expression (32.21: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (32.21: )
-> $$ = nterm declarator_id (32.21: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (32.21: )
-> $$ = nterm direct_declarator (32.21: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token '=' (32.24: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (32.20: )
   $2 = nterm direct_declarator (32.21: )
-> $$ = nterm declarator (32.20-21: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token '=' (32.24: )
Shifting token '=' (32.24: )
Entering state 157
Reading a token: Next token is token '&' (32.26: )
Shifting token '&' (32.26: )
Entering state 186
Reducing stack by rule 53 (line 421):
   $1 = token '&' (32.26: )
-> $$ = nterm unary_operator (32.26: )
Stack now 157 235 155 119 36 31 0
Entering state 200
Reading a token: Next token is token IDENTIFIER (32.27: )
Shifting token IDENTIFIER (32.27: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (32.27: )
-> $$ = nterm identifier (32.27: )
Stack now 200 157 235 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (32.27: )
-> $$ = nterm unqualified_id (32.27: )
Stack now 200 157 235 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (32.27: )
-> $$ = nterm id_expression (32.27: )
Stack now 200 157 235 155 119 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (32.27: )
-> $$ = nterm primary_expression (32.27: )
Stack now 200 157 235 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (32.27: )
-> $$ = nterm postfix_expression (32.27: )
Stack now 200 157 235 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ',' (32.29: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (32.27: )
-> $$ = nterm unary_expression (32.27: )
Stack now 200 157 235 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (32.27: )
-> $$ = nterm cast_expression (32.27: )
Stack now 200 157 235 155 119 36 31 0
Entering state 291
Reducing stack by rule 47 (line 393):
   $1 = nterm unary_operator (32.26: )
   $2 = nterm cast_expression (32.27: )
-> $$ = nterm unary_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (32.26-27: )
-> $$ = nterm cast_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (32.26-27: )
-> $$ = nterm pm_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 204
Next token is token ',' (32.29: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (32.26-27: )
-> $$ = nterm multiplicative_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 205
Next token is token ',' (32.29: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (32.26-27: )
-> $$ = nterm additive_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 206
Next token is token ',' (32.29: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (32.26-27: )
-> $$ = nterm shift_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 207
Next token is token ',' (32.29: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (32.26-27: )
-> $$ = nterm relational_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 208
Next token is token ',' (32.29: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (32.26-27: )
-> $$ = nterm equality_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 209
Next token is token ',' (32.29: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (32.26-27: )
-> $$ = nterm and_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 210
Next token is token ',' (32.29: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (32.26-27: )
-> $$ = nterm exclusive_or_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 211
Next token is token ',' (32.29: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (32.26-27: )
-> $$ = nterm inclusive_or_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 212
Next token is token ',' (32.29: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (32.26-27: )
-> $$ = nterm logical_and_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 213
Next token is token ',' (32.29: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (32.26-27: )
-> $$ = nterm logical_or_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 237
Next token is token ',' (32.29: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (32.26-27: )
-> $$ = nterm conditional_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (32.26-27: )
-> $$ = nterm assignment_expression (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (32.26-27: )
-> $$ = nterm initializer_clause (32.26-27: )
Stack now 157 235 155 119 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (32.24: )
   $2 = nterm initializer_clause (32.26-27: )
-> $$ = nterm initializer (32.24-27: )
Stack now 235 155 119 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (32.24-27: )
-> $$ = nterm initializer_opt (32.24-27: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (32.20-21: )
   $2 = nterm initializer_opt (32.24-27: )
-> $$ = nterm init_declarator (32.20-27: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (32.11-16: )
   $2 = token ',' (32.18: )
   $3 = nterm init_declarator (32.20-27: )
-> $$ = nterm init_declarator_list (32.11-27: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (32.29: )
Shifting token ',' (32.29: )
Entering state 155
Reading a token: Next token is token '*' (32.31: )
Shifting token '*' (32.31: )
Entering state 21
Reading a token: Next token is token CONST (32.32-35: )
Shifting token CONST (32.32-35: )
Entering state 6
Reducing stack by rule 210 (line 1196):
   $1 = token CONST (32.32-35: )
-> $$ = nterm cv_qualifier (32.32-35: )
Stack now 21 155 119 36 31 0
Entering state 108
Reducing stack by rule 332 (line 1615):
   $1 = nterm cv_qualifier (32.32-35: )
-> $$ = nterm cv_qualifier_opt (32.32-35: )
Stack now 21 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (32.31: )
   $2 = nterm cv_qualifier_opt (32.32-35: )
-> $$ = nterm ptr_operator (32.31-35: )
Stack now 155 119 36 31 0
Entering state 45
Reading a token: Next token is token IDENTIFIER (32.38-39: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (32.31-35: )
-> $$ = nterm ptr_operator_list (32.31-35: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (32.38-39: )
Shifting token IDENTIFIER (32.38-39: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (32.38-39: )
-> $$ = nterm identifier (32.38-39: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (32.38-39: )
-> $$ = nterm unqualified_id (32.38-39: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (32.38-39: )
-> $$ = nterm id_expression (32.38-39: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (32.38-39: )
-> $$ = nterm declarator_id (32.38-39: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (32.38-39: )
-> $$ = nterm direct_declarator (32.38-39: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token '=' (32.42: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (32.31-35: )
   $2 = nterm direct_declarator (32.38-39: )
-> $$ = nterm declarator (32.31-39: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token '=' (32.42: )
Shifting token '=' (32.42: )
Entering state 157
Reading a token: Next token is token IDENTIFIER (32.44: )
Shifting token IDENTIFIER (32.44: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (32.44: )
-> $$ = nterm identifier (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (32.44: )
-> $$ = nterm unqualified_id (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (32.44: )
-> $$ = nterm id_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (32.44: )
-> $$ = nterm primary_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (32.44: )
-> $$ = nterm postfix_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ',' (32.46: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (32.44: )
-> $$ = nterm unary_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (32.44: )
-> $$ = nterm cast_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (32.44: )
-> $$ = nterm pm_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 204
Next token is token ',' (32.46: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (32.44: )
-> $$ = nterm multiplicative_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 205
Next token is token ',' (32.46: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (32.44: )
-> $$ = nterm additive_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 206
Next token is token ',' (32.46: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (32.44: )
-> $$ = nterm shift_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 207
Next token is token ',' (32.46: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (32.44: )
-> $$ = nterm relational_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 208
Next token is token ',' (32.46: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (32.44: )
-> $$ = nterm equality_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 209
Next token is token ',' (32.46: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (32.44: )
-> $$ = nterm and_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 210
Next token is token ',' (32.46: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (32.44: )
-> $$ = nterm exclusive_or_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 211
Next token is token ',' (32.46: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (32.44: )
-> $$ = nterm inclusive_or_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 212
Next token is token ',' (32.46: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (32.44: )
-> $$ = nterm logical_and_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 213
Next token is token ',' (32.46: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (32.44: )
-> $$ = nterm logical_or_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 237
Next token is token ',' (32.46: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (32.44: )
-> $$ = nterm conditional_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (32.44: )
-> $$ = nterm assignment_expression (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (32.44: )
-> $$ = nterm initializer_clause (32.44: )
Stack now 157 235 155 119 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (32.42: )
   $2 = nterm initializer_clause (32.44: )
-> $$ = nterm initializer (32.42-44: )
Stack now 235 155 119 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (32.42-44: )
-> $$ = nterm initializer_opt (32.42-44: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (32.31-39: )
   $2 = nterm initializer_opt (32.42-44: )
-> $$ = nterm init_declarator (32.31-44: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (32.11-27: )
   $2 = token ',' (32.29: )
   $3 = nterm init_declarator (32.31-44: )
-> $$ = nterm init_declarator_list (32.11-44: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (32.46: )
Shifting token ',' (32.46: )
Entering state 155
Reading a token: Next token is token '*' (32.48: )
Shifting token '*' (32.48: )
Entering state 21
Reading a token: Next token is token '*' (32.49: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (32.48: )
Stack now 21 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (32.48: )
   $2 = nterm cv_qualifier_opt (32.48: )
-> $$ = nterm ptr_operator (32.48: )
Stack now 155 119 36 31 0
Entering state 45
Next token is token '*' (32.49: )
Shifting token '*' (32.49: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (32.50-51: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (32.49: )
Stack now 21 45 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (32.49: )
   $2 = nterm cv_qualifier_opt (32.49: )
-> $$ = nterm ptr_operator (32.49: )
Stack now 45 155 119 36 31 0
Entering state 45
Next token is token IDENTIFIER (32.50-51: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (32.49: )
-> $$ = nterm ptr_operator_list (32.49: )
Stack now 45 155 119 36 31 0
Entering state 132
Reducing stack by rule 206 (line 1175):
   $1 = nterm ptr_operator (32.48: )
   $2 = nterm ptr_operator_list (32.49: )
-> $$ = nterm ptr_operator_list (32.48: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (32.50-51: )
Shifting token IDENTIFIER (32.50-51: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (32.50-51: )
-> $$ = nterm identifier (32.50-51: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (32.50-51: )
-> $$ = nterm unqualified_id (32.50-51: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (32.50-51: )
-> $$ = nterm id_expression (32.50-51: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (32.50-51: )
-> $$ = nterm declarator_id (32.50-51: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (32.50-51: )
-> $$ = nterm direct_declarator (32.50-51: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token ';' (32.53: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (32.48: )
   $2 = nterm direct_declarator (32.50-51: )
-> $$ = nterm declarator (32.48-51: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ';' (32.53: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (32.52: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (32.48-51: )
   $2 = nterm initializer_opt (32.52: )
-> $$ = nterm init_declarator (32.48-51: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (32.11-44: )
   $2 = token ',' (32.46: )
   $3 = nterm init_declarator (32.48-51: )
-> $$ = nterm init_declarator_list (32.11-51: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (32.53: )
Shifting token ';' (32.53: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (32.1-8: )
   $2 = nterm init_declarator_list (32.11-51: )
   $3 = token ';' (32.53: )
-> $$ = nterm simple_declaration (32.1-52: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (32.1-52: )
-> $$ = nterm block_declaration (32.1-52: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (32.1-52: )
-> $$ = nterm declaration (32.1-52: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-30.19: )
   $2 = nterm declaration (32.1-52: )
-> $$ = nterm declaration_seq (1.1-32.52: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (33.1-2: )
Shifting token INT (33.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (33.1-2: )
-> $$ = nterm simple_type_specifier (33.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (33.1-2: )
-> $$ = nterm type_specifier (33.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (33.1-2: )
-> $$ = nterm decl_specifier (33.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (33.1-2: )
-> $$ = nterm decl_specifier_seq (33.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token IDENTIFIER (33.5: )
Shifting token IDENTIFIER (33.5: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (33.5: )
-> $$ = nterm identifier (33.5: )
Stack now 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (33.5: )
-> $$ = nterm unqualified_id (33.5: )
Stack now 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (33.5: )
-> $$ = nterm id_expression (33.5: )
Stack now 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (33.5: )
-> $$ = nterm declarator_id (33.5: )
Stack now 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (33.5: )
-> $$ = nterm direct_declarator (33.5: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ',' (33.7: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (33.5: )
-> $$ = nterm declarator (33.5: )
Stack now 36 31 0
Entering state 121
Next token is token ',' (33.7: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (33.6: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (33.5: )
   $2 = nterm initializer_opt (33.6: )
-> $$ = nterm init_declarator (33.5: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (33.5: )
-> $$ = nterm init_declarator_list (33.5: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (33.7: )
Shifting token ',' (33.7: )
Entering state 155
Reading a token: Next token is token '*' (33.9: )
Shifting token '*' (33.9: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (33.10: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (33.9: )
Stack now 21 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (33.9: )
   $2 = nterm cv_qualifier_opt (33.9: )
-> $$ = nterm ptr_operator (33.9: )
Stack now 155 119 36 31 0
Entering state 45
Next token is token IDENTIFIER (33.10: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (33.9: )
-> $$ = nterm ptr_operator_list (33.9: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (33.10: )
Shifting token IDENTIFIER (33.10: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (33.10: )
-> $$ = nterm identifier (33.10: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (33.10: )
-> $$ = nterm unqualified_id (33.10: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (33.10: )
-> $$ = nterm id_expression (33.10: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (33.10: )
-> $$ = nterm declarator_id (33.10: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (33.10: )
-> $$ = nterm direct_declarator (33.10: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token ',' (33.11: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (33.9: )
   $2 = nterm direct_declarator (33.10: )
-> $$ = nterm declarator (33.9: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token ',' (33.11: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (33.10: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (33.9: )
   $2 = nterm initializer_opt (33.10: )
-> $$ = nterm init_declarator (33.9: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (33.5: )
   $2 = token ',' (33.7: )
   $3 = nterm init_declarator (33.9: )
-> $$ = nterm init_declarator_list (33.5-9: )
Stack now 36 31 0
Entering state 119
Next token is token ',' (33.11: )
Shifting token ',' (33.11: )
Entering state 155
Reading a token: Next token is token '*' (33.13: )
Shifting token '*' (33.13: )
Entering state 21
Reading a token: Next token is token CONST (33.14-17: )
Shifting token CONST (33.14-17: )
Entering state 6
Reducing stack by rule 210 (line 1196):
   $1 = token CONST (33.14-17: )
-> $$ = nterm cv_qualifier (33.14-17: )
Stack now 21 155 119 36 31 0
Entering state 108
Reducing stack by rule 332 (line 1615):
   $1 = nterm cv_qualifier (33.14-17: )
-> $$ = nterm cv_qualifier_opt (33.14-17: )
Stack now 21 155 119 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (33.13: )
   $2 = nterm cv_qualifier_opt (33.14-17: )
-> $$ = nterm ptr_operator (33.13-17: )
Stack now 155 119 36 31 0
Entering state 45
Reading a token: Next token is token IDENTIFIER (33.20: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (33.13-17: )
-> $$ = nterm ptr_operator_list (33.13-17: )
Stack now 155 119 36 31 0
Entering state 44
Next token is token IDENTIFIER (33.20: )
Shifting token IDENTIFIER (33.20: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (33.20: )
-> $$ = nterm identifier (33.20: )
Stack now 44 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (33.20: )
-> $$ = nterm unqualified_id (33.20: )
Stack now 44 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (33.20: )
-> $$ = nterm id_expression (33.20: )
Stack now 44 155 119 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (33.20: )
-> $$ = nterm declarator_id (33.20: )
Stack now 44 155 119 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (33.20: )
-> $$ = nterm direct_declarator (33.20: )
Stack now 44 155 119 36 31 0
Entering state 130
Reading a token: Next token is token '=' (33.23: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (33.13-17: )
   $2 = nterm direct_declarator (33.20: )
-> $$ = nterm declarator (33.13-20: )
Stack now 155 119 36 31 0
Entering state 235
Next token is token '=' (33.23: )
Shifting token '=' (33.23: )
Entering state 157
Reading a token: Next token is token '&' (33.25: )
Shifting token '&' (33.25: )
Entering state 186
Reducing stack by rule 53 (line 421):
   $1 = token '&' (33.25: )
-> $$ = nterm unary_operator (33.25: )
Stack now 157 235 155 119 36 31 0
Entering state 200
Reading a token: Next token is token IDENTIFIER (33.26: )
Shifting token IDENTIFIER (33.26: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (33.26: )
-> $$ = nterm identifier (33.26: )
Stack now 200 157 235 155 119 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (33.26: )
-> $$ = nterm unqualified_id (33.26: )
Stack now 200 157 235 155 119 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (33.26: )
-> $$ = nterm id_expression (33.26: )
Stack now 200 157 235 155 119 36 31 0
Entering state 197
Reducing stack by rule 20 (line 248):
   $1 = nterm id_expression (33.26: )
-> $$ = nterm primary_expression (33.26: )
Stack now 200 157 235 155 119 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (33.26: )
-> $$ = nterm postfix_expression (33.26: )
Stack now 200 157 235 155 119 36 31 0
Entering state 198
Reading a token: Next token is token ';' (33.28: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (33.26: )
-> $$ = nterm unary_expression (33.26: )
Stack now 200 157 235 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (33.26: )
-> $$ = nterm cast_expression (33.26: )
Stack now 200 157 235 155 119 36 31 0
Entering state 291
Reducing stack by rule 47 (line 393):
   $1 = nterm unary_operator (33.25: )
   $2 = nterm cast_expression (33.26: )
-> $$ = nterm unary_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (33.25-26: )
-> $$ = nterm cast_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (33.25-26: )
-> $$ = nterm pm_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 204
Next token is token ';' (33.28: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (33.25-26: )
-> $$ = nterm multiplicative_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 205
Next token is token ';' (33.28: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (33.25-26: )
-> $$ = nterm additive_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 206
Next token is token ';' (33.28: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (33.25-26: )
-> $$ = nterm shift_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 207
Next token is token ';' (33.28: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (33.25-26: )
-> $$ = nterm relational_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 208
Next token is token ';' (33.28: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (33.25-26: )
-> $$ = nterm equality_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 209
Next token is token ';' (33.28: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (33.25-26: )
-> $$ = nterm and_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 210
Next token is token ';' (33.28: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (33.25-26: )
-> $$ = nterm exclusive_or_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 211
Next token is token ';' (33.28: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (33.25-26: )
-> $$ = nterm inclusive_or_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 212
Next token is token ';' (33.28: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (33.25-26: )
-> $$ = nterm logical_and_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 213
Next token is token ';' (33.28: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (33.25-26: )
-> $$ = nterm logical_or_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 237
Next token is token ';' (33.28: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (33.25-26: )
-> $$ = nterm conditional_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 238
Reducing stack by rule 109 (line 756):
   $1 = nterm conditional_expression (33.25-26: )
-> $$ = nterm assignment_expression (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 239
Reducing stack by rule 232 (line 1321):
   $1 = nterm assignment_expression (33.25-26: )
-> $$ = nterm initializer_clause (33.25-26: )
Stack now 157 235 155 119 36 31 0
Entering state 240
Reducing stack by rule 230 (line 1311):
   $1 = token '=' (33.23: )
   $2 = nterm initializer_clause (33.25-26: )
-> $$ = nterm initializer (33.23-26: )
Stack now 235 155 119 36 31 0
Entering state 160
Reducing stack by rule 330 (line 1611):
   $1 = nterm initializer (33.23-26: )
-> $$ = nterm initializer_opt (33.23-26: )
Stack now 235 155 119 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (33.13-20: )
   $2 = nterm initializer_opt (33.23-26: )
-> $$ = nterm init_declarator (33.13-26: )
Stack now 155 119 36 31 0
Entering state 234
Reducing stack by rule 197 (line 1126):
   $1 = nterm init_declarator_list (33.5-9: )
   $2 = token ',' (33.11: )
   $3 = nterm init_declarator (33.13-26: )
-> $$ = nterm init_declarator_list (33.5-26: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (33.28: )
Shifting token ';' (33.28: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (33.1-2: )
   $2 = nterm init_declarator_list (33.5-26: )
   $3 = token ';' (33.28: )
-> $$ = nterm simple_declaration (33.1-27: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (33.1-27: )
-> $$ = nterm block_declaration (33.1-27: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (33.1-27: )
-> $$ = nterm declaration (33.1-27: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-32.52: )
   $2 = nterm declaration (33.1-27: )
-> $$ = nterm declaration_seq (1.1-33.27: )
Stack now 0
Entering state 31
Reading a token: Next token is token INT (35.1-2: )
Shifting token INT (35.1-2: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (35.1-2: )
-> $$ = nterm simple_type_specifier (35.1-2: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (35.1-2: )
-> $$ = nterm type_specifier (35.1-2: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (35.1-2: )
-> $$ = nterm decl_specifier (35.1-2: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (35.1-2: )
-> $$ = nterm decl_specifier_seq (35.1-2: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token '(' (35.5: )
Shifting token '(' (35.5: )
Entering state 23
Reading a token: Next token is token '*' (35.6: )
Shifting token '*' (35.6: )
Entering state 21
Reading a token: Next token is token '(' (35.7: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (35.6: )
Stack now 21 23 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (35.6: )
   $2 = nterm cv_qualifier_opt (35.6: )
-> $$ = nterm ptr_operator (35.6: )
Stack now 23 36 31 0
Entering state 45
Next token is token '(' (35.7: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (35.6: )
-> $$ = nterm ptr_operator_list (35.6: )
Stack now 23 36 31 0
Entering state 44
Next token is token '(' (35.7: )
Shifting token '(' (35.7: )
Entering state 23
Reading a token: Next token is token '*' (35.8: )
Shifting token '*' (35.8: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (35.9: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (35.8: )
Stack now 21 23 44 23 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (35.8: )
   $2 = nterm cv_qualifier_opt (35.8: )
-> $$ = nterm ptr_operator (35.8: )
Stack now 23 44 23 36 31 0
Entering state 45
Next token is token IDENTIFIER (35.9: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (35.8: )
-> $$ = nterm ptr_operator_list (35.8: )
Stack now 23 44 23 36 31 0
Entering state 44
Next token is token IDENTIFIER (35.9: )
Shifting token IDENTIFIER (35.9: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (35.9: )
-> $$ = nterm identifier (35.9: )
Stack now 44 23 44 23 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (35.9: )
-> $$ = nterm unqualified_id (35.9: )
Stack now 44 23 44 23 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (35.9: )
-> $$ = nterm id_expression (35.9: )
Stack now 44 23 44 23 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (35.9: )
-> $$ = nterm declarator_id (35.9: )
Stack now 44 23 44 23 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (35.9: )
-> $$ = nterm direct_declarator (35.9: )
Stack now 44 23 44 23 36 31 0
Entering state 130
Reading a token: Next token is token '[' (35.10: )
Shifting token '[' (35.10: )
Entering state 128
Reading a token: Next token is token INTVAL (35.11: )
Shifting token INTVAL (35.11: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (35.11: )
-> $$ = nterm int_literal (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (35.11: )
-> $$ = nterm literal (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (35.11: )
-> $$ = nterm primary_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (35.11: )
-> $$ = nterm postfix_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 198
Reading a token: Next token is token ']' (35.12: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (35.11: )
-> $$ = nterm unary_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (35.11: )
-> $$ = nterm cast_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (35.11: )
-> $$ = nterm pm_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 204
Next token is token ']' (35.12: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (35.11: )
-> $$ = nterm multiplicative_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 205
Next token is token ']' (35.12: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (35.11: )
-> $$ = nterm additive_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 206
Next token is token ']' (35.12: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (35.11: )
-> $$ = nterm shift_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 207
Next token is token ']' (35.12: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (35.11: )
-> $$ = nterm relational_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 208
Next token is token ']' (35.12: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (35.11: )
-> $$ = nterm equality_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 209
Next token is token ']' (35.12: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (35.11: )
-> $$ = nterm and_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 210
Next token is token ']' (35.12: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (35.11: )
-> $$ = nterm exclusive_or_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 211
Next token is token ']' (35.12: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (35.11: )
-> $$ = nterm inclusive_or_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 212
Next token is token ']' (35.12: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (35.11: )
-> $$ = nterm logical_and_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 213
Next token is token ']' (35.12: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (35.11: )
-> $$ = nterm logical_or_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 214
Next token is token ']' (35.12: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (35.11: )
-> $$ = nterm conditional_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (35.11: )
-> $$ = nterm constant_expression (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (35.11: )
-> $$ = nterm constant_expression_opt (35.11: )
Stack now 128 130 44 23 44 23 36 31 0
Entering state 218
Next token is token ']' (35.12: )
Shifting token ']' (35.12: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (35.9: )
   $2 = token '[' (35.10: )
   $3 = nterm constant_expression_opt (35.11: )
   $4 = token ']' (35.12: )
-> $$ = nterm direct_declarator (35.9-11: )
Stack now 44 23 44 23 36 31 0
Entering state 130
Reading a token: Next token is token ')' (35.13: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (35.8: )
   $2 = nterm direct_declarator (35.9-11: )
-> $$ = nterm declarator (35.8-11: )
Stack now 23 44 23 36 31 0
Entering state 111
Next token is token ')' (35.13: )
Shifting token ')' (35.13: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (35.7: )
   $2 = nterm declarator (35.8-11: )
   $3 = token ')' (35.13: )
-> $$ = nterm direct_declarator (35.7-12: )
Stack now 44 23 36 31 0
Entering state 130
Reading a token: Next token is token '(' (35.14: )
Shifting token '(' (35.14: )
Entering state 127
Reading a token: Next token is token ')' (35.15: )
Reducing stack by rule 221 (line 1259):
-> $$ = nterm parameter_declaration_list (35.14: )
Stack now 127 130 44 23 36 31 0
Entering state 171
Next token is token ')' (35.15: )
Shifting token ')' (35.15: )
Entering state 279
Reading a token: Next token is token ')' (35.16: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (35.15: )
Stack now 279 171 127 130 44 23 36 31 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (35.7-12: )
   $2 = token '(' (35.14: )
   $3 = nterm parameter_declaration_list (35.14: )
   $4 = token ')' (35.15: )
   $5 = nterm cv_qualifier_opt (35.15: )
-> $$ = nterm direct_declarator (35.7-14: )
Stack now 44 23 36 31 0
Entering state 130
Next token is token ')' (35.16: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (35.6: )
   $2 = nterm direct_declarator (35.7-14: )
-> $$ = nterm declarator (35.6-14: )
Stack now 23 36 31 0
Entering state 111
Next token is token ')' (35.16: )
Shifting token ')' (35.16: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (35.5: )
   $2 = nterm declarator (35.6-14: )
   $3 = token ')' (35.16: )
-> $$ = nterm direct_declarator (35.5-15: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token '[' (35.17: )
Shifting token '[' (35.17: )
Entering state 128
Reading a token: Next token is token INTVAL (35.18: )
Shifting token INTVAL (35.18: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (35.18: )
-> $$ = nterm int_literal (35.18: )
Stack now 128 43 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (35.18: )
-> $$ = nterm literal (35.18: )
Stack now 128 43 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (35.18: )
-> $$ = nterm primary_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (35.18: )
-> $$ = nterm postfix_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 198
Reading a token: Next token is token ']' (35.19: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (35.18: )
-> $$ = nterm unary_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (35.18: )
-> $$ = nterm cast_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (35.18: )
-> $$ = nterm pm_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 204
Next token is token ']' (35.19: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (35.18: )
-> $$ = nterm multiplicative_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 205
Next token is token ']' (35.19: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (35.18: )
-> $$ = nterm additive_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 206
Next token is token ']' (35.19: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (35.18: )
-> $$ = nterm shift_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 207
Next token is token ']' (35.19: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (35.18: )
-> $$ = nterm relational_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 208
Next token is token ']' (35.19: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (35.18: )
-> $$ = nterm equality_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 209
Next token is token ']' (35.19: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (35.18: )
-> $$ = nterm and_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 210
Next token is token ']' (35.19: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (35.18: )
-> $$ = nterm exclusive_or_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 211
Next token is token ']' (35.19: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (35.18: )
-> $$ = nterm inclusive_or_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 212
Next token is token ']' (35.19: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (35.18: )
-> $$ = nterm logical_and_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 213
Next token is token ']' (35.19: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (35.18: )
-> $$ = nterm logical_or_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 214
Next token is token ']' (35.19: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (35.18: )
-> $$ = nterm conditional_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (35.18: )
-> $$ = nterm constant_expression (35.18: )
Stack now 128 43 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (35.18: )
-> $$ = nterm constant_expression_opt (35.18: )
Stack now 128 43 36 31 0
Entering state 218
Next token is token ']' (35.19: )
Shifting token ']' (35.19: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (35.5-15: )
   $2 = token '[' (35.17: )
   $3 = nterm constant_expression_opt (35.18: )
   $4 = token ']' (35.19: )
-> $$ = nterm direct_declarator (35.5-18: )
Stack now 36 31 0
Entering state 43
Reading a token: Next token is token ';' (35.20: )
Reducing stack by rule 199 (line 1140):
   $1 = nterm direct_declarator (35.5-18: )
-> $$ = nterm declarator (35.5-18: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (35.20: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (35.19: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (35.5-18: )
   $2 = nterm initializer_opt (35.19: )
-> $$ = nterm init_declarator (35.5-18: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (35.5-18: )
-> $$ = nterm init_declarator_list (35.5-18: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (35.20: )
Shifting token ';' (35.20: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (35.1-2: )
   $2 = nterm init_declarator_list (35.5-18: )
   $3 = token ';' (35.20: )
-> $$ = nterm simple_declaration (35.1-19: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (35.1-19: )
-> $$ = nterm block_declaration (35.1-19: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (35.1-19: )
-> $$ = nterm declaration (35.1-19: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-33.27: )
   $2 = nterm declaration (35.1-19: )
-> $$ = nterm declaration_seq (1.1-35.19: )
Stack now 0
Entering state 31
Reading a token: Next token is token CHAR (36.1-3: )
Shifting token CHAR (36.1-3: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (36.1-3: )
-> $$ = nterm simple_type_specifier (36.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (36.1-3: )
-> $$ = nterm type_specifier (36.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (36.1-3: )
-> $$ = nterm decl_specifier (36.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (36.1-3: )
-> $$ = nterm decl_specifier_seq (36.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token '*' (36.5: )
Shifting token '*' (36.5: )
Entering state 21
Reading a token: Next token is token '(' (36.7: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (36.5: )
Stack now 21 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (36.5: )
   $2 = nterm cv_qualifier_opt (36.5: )
-> $$ = nterm ptr_operator (36.5: )
Stack now 36 31 0
Entering state 45
Next token is token '(' (36.7: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (36.5: )
-> $$ = nterm ptr_operator_list (36.5: )
Stack now 36 31 0
Entering state 44
Next token is token '(' (36.7: )
Shifting token '(' (36.7: )
Entering state 23
Reading a token: Next token is token '*' (36.8: )
Shifting token '*' (36.8: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (36.9-10: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (36.8: )
Stack now 21 23 44 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (36.8: )
   $2 = nterm cv_qualifier_opt (36.8: )
-> $$ = nterm ptr_operator (36.8: )
Stack now 23 44 36 31 0
Entering state 45
Next token is token IDENTIFIER (36.9-10: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (36.8: )
-> $$ = nterm ptr_operator_list (36.8: )
Stack now 23 44 36 31 0
Entering state 44
Next token is token IDENTIFIER (36.9-10: )
Shifting token IDENTIFIER (36.9-10: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (36.9-10: )
-> $$ = nterm identifier (36.9-10: )
Stack now 44 23 44 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (36.9-10: )
-> $$ = nterm unqualified_id (36.9-10: )
Stack now 44 23 44 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (36.9-10: )
-> $$ = nterm id_expression (36.9-10: )
Stack now 44 23 44 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (36.9-10: )
-> $$ = nterm declarator_id (36.9-10: )
Stack now 44 23 44 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (36.9-10: )
-> $$ = nterm direct_declarator (36.9-10: )
Stack now 44 23 44 36 31 0
Entering state 130
Reading a token: Next token is token ')' (36.12: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (36.8: )
   $2 = nterm direct_declarator (36.9-10: )
-> $$ = nterm declarator (36.8-10: )
Stack now 23 44 36 31 0
Entering state 111
Next token is token ')' (36.12: )
Shifting token ')' (36.12: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (36.7: )
   $2 = nterm declarator (36.8-10: )
   $3 = token ')' (36.12: )
-> $$ = nterm direct_declarator (36.7-11: )
Stack now 44 36 31 0
Entering state 130
Reading a token: Next token is token '(' (36.13: )
Shifting token '(' (36.13: )
Entering state 127
Reading a token: Next token is token CHAR (36.14-16: )
Shifting token CHAR (36.14-16: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (36.14-16: )
-> $$ = nterm simple_type_specifier (36.14-16: )
Stack now 127 130 44 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (36.14-16: )
-> $$ = nterm type_specifier (36.14-16: )
Stack now 127 130 44 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (36.14-16: )
-> $$ = nterm decl_specifier (36.14-16: )
Stack now 127 130 44 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (36.14-16: )
-> $$ = nterm decl_specifier_seq (36.14-16: )
Stack now 127 130 44 36 31 0
Entering state 170
Reading a token: Next token is token '*' (36.18: )
Shifting token '*' (36.18: )
Entering state 21
Reading a token: Next token is token ')' (36.19: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (36.18: )
Stack now 21 170 127 130 44 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (36.18: )
   $2 = nterm cv_qualifier_opt (36.18: )
-> $$ = nterm ptr_operator (36.18: )
Stack now 170 127 130 44 36 31 0
Entering state 45
Next token is token ')' (36.19: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (36.18: )
-> $$ = nterm ptr_operator_list (36.18: )
Stack now 170 127 130 44 36 31 0
Entering state 273
Next token is token ')' (36.19: )
Reducing stack by rule 216 (line 1228):
   $1 = nterm ptr_operator_list (36.18: )
-> $$ = nterm abstract_declarator (36.18: )
Stack now 170 127 130 44 36 31 0
Entering state 274
Reducing stack by rule 334 (line 1619):
   $1 = nterm abstract_declarator (36.18: )
-> $$ = nterm abstract_declarator_opt (36.18: )
Stack now 170 127 130 44 36 31 0
Entering state 276
Next token is token ')' (36.19: )
Reducing stack by rule 339 (line 1630):
-> $$ = nterm assignment_expression_opt (36.18: )
Stack now 276 170 127 130 44 36 31 0
Entering state 365
Reducing stack by rule 225 (line 1274):
   $1 = nterm decl_specifier_seq (36.14-16: )
   $2 = nterm abstract_declarator_opt (36.18: )
   $3 = nterm assignment_expression_opt (36.18: )
-> $$ = nterm parameter_declaration (36.14-17: )
Stack now 127 130 44 36 31 0
Entering state 172
Reducing stack by rule 222 (line 1260):
   $1 = nterm parameter_declaration (36.14-17: )
-> $$ = nterm parameter_declaration_list (36.14-17: )
Stack now 127 130 44 36 31 0
Entering state 171
Next token is token ')' (36.19: )
Shifting token ')' (36.19: )
Entering state 279
Reading a token: Next token is token ';' (36.20: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (36.19: )
Stack now 279 171 127 130 44 36 31 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (36.7-11: )
   $2 = token '(' (36.13: )
   $3 = nterm parameter_declaration_list (36.14-17: )
   $4 = token ')' (36.19: )
   $5 = nterm cv_qualifier_opt (36.19: )
-> $$ = nterm direct_declarator (36.7-18: )
Stack now 44 36 31 0
Entering state 130
Next token is token ';' (36.20: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (36.5: )
   $2 = nterm direct_declarator (36.7-18: )
-> $$ = nterm declarator (36.5-18: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (36.20: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (36.19: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (36.5-18: )
   $2 = nterm initializer_opt (36.19: )
-> $$ = nterm init_declarator (36.5-18: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (36.5-18: )
-> $$ = nterm init_declarator_list (36.5-18: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (36.20: )
Shifting token ';' (36.20: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (36.1-3: )
   $2 = nterm init_declarator_list (36.5-18: )
   $3 = token ';' (36.20: )
-> $$ = nterm simple_declaration (36.1-19: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (36.1-19: )
-> $$ = nterm block_declaration (36.1-19: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (36.1-19: )
-> $$ = nterm declaration (36.1-19: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-35.19: )
   $2 = nterm declaration (36.1-19: )
-> $$ = nterm declaration_seq (1.1-36.19: )
Stack now 0
Entering state 31
Reading a token: Next token is token CHAR (37.1-3: )
Shifting token CHAR (37.1-3: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (37.1-3: )
-> $$ = nterm simple_type_specifier (37.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (37.1-3: )
-> $$ = nterm type_specifier (37.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (37.1-3: )
-> $$ = nterm decl_specifier (37.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (37.1-3: )
-> $$ = nterm decl_specifier_seq (37.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token '*' (37.5: )
Shifting token '*' (37.5: )
Entering state 21
Reading a token: Next token is token '(' (37.7: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (37.5: )
Stack now 21 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (37.5: )
   $2 = nterm cv_qualifier_opt (37.5: )
-> $$ = nterm ptr_operator (37.5: )
Stack now 36 31 0
Entering state 45
Next token is token '(' (37.7: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (37.5: )
-> $$ = nterm ptr_operator_list (37.5: )
Stack now 36 31 0
Entering state 44
Next token is token '(' (37.7: )
Shifting token '(' (37.7: )
Entering state 23
Reading a token: Next token is token '*' (37.8: )
Shifting token '*' (37.8: )
Entering state 21
Reading a token: Next token is token '(' (37.9: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (37.8: )
Stack now 21 23 44 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (37.8: )
   $2 = nterm cv_qualifier_opt (37.8: )
-> $$ = nterm ptr_operator (37.8: )
Stack now 23 44 36 31 0
Entering state 45
Next token is token '(' (37.9: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (37.8: )
-> $$ = nterm ptr_operator_list (37.8: )
Stack now 23 44 36 31 0
Entering state 44
Next token is token '(' (37.9: )
Shifting token '(' (37.9: )
Entering state 23
Reading a token: Next token is token '*' (37.10: )
Shifting token '*' (37.10: )
Entering state 21
Reading a token: Next token is token IDENTIFIER (37.11-12: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (37.10: )
Stack now 21 23 44 23 44 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (37.10: )
   $2 = nterm cv_qualifier_opt (37.10: )
-> $$ = nterm ptr_operator (37.10: )
Stack now 23 44 23 44 36 31 0
Entering state 45
Next token is token IDENTIFIER (37.11-12: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (37.10: )
-> $$ = nterm ptr_operator_list (37.10: )
Stack now 23 44 23 44 36 31 0
Entering state 44
Next token is token IDENTIFIER (37.11-12: )
Shifting token IDENTIFIER (37.11-12: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (37.11-12: )
-> $$ = nterm identifier (37.11-12: )
Stack now 44 23 44 23 44 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (37.11-12: )
-> $$ = nterm unqualified_id (37.11-12: )
Stack now 44 23 44 23 44 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (37.11-12: )
-> $$ = nterm id_expression (37.11-12: )
Stack now 44 23 44 23 44 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (37.11-12: )
-> $$ = nterm declarator_id (37.11-12: )
Stack now 44 23 44 23 44 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (37.11-12: )
-> $$ = nterm direct_declarator (37.11-12: )
Stack now 44 23 44 23 44 36 31 0
Entering state 130
Reading a token: Next token is token '[' (37.14: )
Shifting token '[' (37.14: )
Entering state 128
Reading a token: Next token is token INTVAL (37.15: )
Shifting token INTVAL (37.15: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (37.15: )
-> $$ = nterm int_literal (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (37.15: )
-> $$ = nterm literal (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (37.15: )
-> $$ = nterm primary_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (37.15: )
-> $$ = nterm postfix_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 198
Reading a token: Next token is token ']' (37.16: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (37.15: )
-> $$ = nterm unary_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (37.15: )
-> $$ = nterm cast_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (37.15: )
-> $$ = nterm pm_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 204
Next token is token ']' (37.16: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (37.15: )
-> $$ = nterm multiplicative_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 205
Next token is token ']' (37.16: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (37.15: )
-> $$ = nterm additive_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 206
Next token is token ']' (37.16: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (37.15: )
-> $$ = nterm shift_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 207
Next token is token ']' (37.16: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (37.15: )
-> $$ = nterm relational_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 208
Next token is token ']' (37.16: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (37.15: )
-> $$ = nterm equality_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 209
Next token is token ']' (37.16: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (37.15: )
-> $$ = nterm and_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 210
Next token is token ']' (37.16: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (37.15: )
-> $$ = nterm exclusive_or_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 211
Next token is token ']' (37.16: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (37.15: )
-> $$ = nterm inclusive_or_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 212
Next token is token ']' (37.16: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (37.15: )
-> $$ = nterm logical_and_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 213
Next token is token ']' (37.16: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (37.15: )
-> $$ = nterm logical_or_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 214
Next token is token ']' (37.16: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (37.15: )
-> $$ = nterm conditional_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (37.15: )
-> $$ = nterm constant_expression (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (37.15: )
-> $$ = nterm constant_expression_opt (37.15: )
Stack now 128 130 44 23 44 23 44 36 31 0
Entering state 218
Next token is token ']' (37.16: )
Shifting token ']' (37.16: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (37.11-12: )
   $2 = token '[' (37.14: )
   $3 = nterm constant_expression_opt (37.15: )
   $4 = token ']' (37.16: )
-> $$ = nterm direct_declarator (37.11-15: )
Stack now 44 23 44 23 44 36 31 0
Entering state 130
Reading a token: Next token is token ')' (37.17: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (37.10: )
   $2 = nterm direct_declarator (37.11-15: )
-> $$ = nterm declarator (37.10-15: )
Stack now 23 44 23 44 36 31 0
Entering state 111
Next token is token ')' (37.17: )
Shifting token ')' (37.17: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (37.9: )
   $2 = nterm declarator (37.10-15: )
   $3 = token ')' (37.17: )
-> $$ = nterm direct_declarator (37.9-16: )
Stack now 44 23 44 36 31 0
Entering state 130
Reading a token: Next token is token '(' (37.18: )
Shifting token '(' (37.18: )
Entering state 127
Reading a token: Next token is token CHAR (37.19-21: )
Shifting token CHAR (37.19-21: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (37.19-21: )
-> $$ = nterm simple_type_specifier (37.19-21: )
Stack now 127 130 44 23 44 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (37.19-21: )
-> $$ = nterm type_specifier (37.19-21: )
Stack now 127 130 44 23 44 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (37.19-21: )
-> $$ = nterm decl_specifier (37.19-21: )
Stack now 127 130 44 23 44 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (37.19-21: )
-> $$ = nterm decl_specifier_seq (37.19-21: )
Stack now 127 130 44 23 44 36 31 0
Entering state 170
Reading a token: Next token is token '*' (37.23: )
Shifting token '*' (37.23: )
Entering state 21
Reading a token: Next token is token ')' (37.24: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (37.23: )
Stack now 21 170 127 130 44 23 44 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (37.23: )
   $2 = nterm cv_qualifier_opt (37.23: )
-> $$ = nterm ptr_operator (37.23: )
Stack now 170 127 130 44 23 44 36 31 0
Entering state 45
Next token is token ')' (37.24: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (37.23: )
-> $$ = nterm ptr_operator_list (37.23: )
Stack now 170 127 130 44 23 44 36 31 0
Entering state 273
Next token is token ')' (37.24: )
Reducing stack by rule 216 (line 1228):
   $1 = nterm ptr_operator_list (37.23: )
-> $$ = nterm abstract_declarator (37.23: )
Stack now 170 127 130 44 23 44 36 31 0
Entering state 274
Reducing stack by rule 334 (line 1619):
   $1 = nterm abstract_declarator (37.23: )
-> $$ = nterm abstract_declarator_opt (37.23: )
Stack now 170 127 130 44 23 44 36 31 0
Entering state 276
Next token is token ')' (37.24: )
Reducing stack by rule 339 (line 1630):
-> $$ = nterm assignment_expression_opt (37.23: )
Stack now 276 170 127 130 44 23 44 36 31 0
Entering state 365
Reducing stack by rule 225 (line 1274):
   $1 = nterm decl_specifier_seq (37.19-21: )
   $2 = nterm abstract_declarator_opt (37.23: )
   $3 = nterm assignment_expression_opt (37.23: )
-> $$ = nterm parameter_declaration (37.19-22: )
Stack now 127 130 44 23 44 36 31 0
Entering state 172
Reducing stack by rule 222 (line 1260):
   $1 = nterm parameter_declaration (37.19-22: )
-> $$ = nterm parameter_declaration_list (37.19-22: )
Stack now 127 130 44 23 44 36 31 0
Entering state 171
Next token is token ')' (37.24: )
Shifting token ')' (37.24: )
Entering state 279
Reading a token: Next token is token ')' (37.25: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (37.24: )
Stack now 279 171 127 130 44 23 44 36 31 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (37.9-16: )
   $2 = token '(' (37.18: )
   $3 = nterm parameter_declaration_list (37.19-22: )
   $4 = token ')' (37.24: )
   $5 = nterm cv_qualifier_opt (37.24: )
-> $$ = nterm direct_declarator (37.9-23: )
Stack now 44 23 44 36 31 0
Entering state 130
Next token is token ')' (37.25: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (37.8: )
   $2 = nterm direct_declarator (37.9-23: )
-> $$ = nterm declarator (37.8-23: )
Stack now 23 44 36 31 0
Entering state 111
Next token is token ')' (37.25: )
Shifting token ')' (37.25: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (37.7: )
   $2 = nterm declarator (37.8-23: )
   $3 = token ')' (37.25: )
-> $$ = nterm direct_declarator (37.7-24: )
Stack now 44 36 31 0
Entering state 130
Reading a token: Next token is token '[' (37.26: )
Shifting token '[' (37.26: )
Entering state 128
Reading a token: Next token is token INTVAL (37.27: )
Shifting token INTVAL (37.27: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (37.27: )
-> $$ = nterm int_literal (37.27: )
Stack now 128 130 44 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (37.27: )
-> $$ = nterm literal (37.27: )
Stack now 128 130 44 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (37.27: )
-> $$ = nterm primary_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (37.27: )
-> $$ = nterm postfix_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 198
Reading a token: Next token is token ']' (37.29: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (37.27: )
-> $$ = nterm unary_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (37.27: )
-> $$ = nterm cast_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (37.27: )
-> $$ = nterm pm_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 204
Next token is token ']' (37.29: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (37.27: )
-> $$ = nterm multiplicative_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 205
Next token is token ']' (37.29: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (37.27: )
-> $$ = nterm additive_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 206
Next token is token ']' (37.29: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (37.27: )
-> $$ = nterm shift_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 207
Next token is token ']' (37.29: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (37.27: )
-> $$ = nterm relational_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 208
Next token is token ']' (37.29: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (37.27: )
-> $$ = nterm equality_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 209
Next token is token ']' (37.29: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (37.27: )
-> $$ = nterm and_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 210
Next token is token ']' (37.29: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (37.27: )
-> $$ = nterm exclusive_or_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 211
Next token is token ']' (37.29: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (37.27: )
-> $$ = nterm inclusive_or_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 212
Next token is token ']' (37.29: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (37.27: )
-> $$ = nterm logical_and_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 213
Next token is token ']' (37.29: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (37.27: )
-> $$ = nterm logical_or_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 214
Next token is token ']' (37.29: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (37.27: )
-> $$ = nterm conditional_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (37.27: )
-> $$ = nterm constant_expression (37.27: )
Stack now 128 130 44 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (37.27: )
-> $$ = nterm constant_expression_opt (37.27: )
Stack now 128 130 44 36 31 0
Entering state 218
Next token is token ']' (37.29: )
Shifting token ']' (37.29: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (37.7-24: )
   $2 = token '[' (37.26: )
   $3 = nterm constant_expression_opt (37.27: )
   $4 = token ']' (37.29: )
-> $$ = nterm direct_declarator (37.7-28: )
Stack now 44 36 31 0
Entering state 130
Reading a token: Next token is token ';' (37.30: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (37.5: )
   $2 = nterm direct_declarator (37.7-28: )
-> $$ = nterm declarator (37.5-28: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (37.30: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (37.29: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (37.5-28: )
   $2 = nterm initializer_opt (37.29: )
-> $$ = nterm init_declarator (37.5-28: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (37.5-28: )
-> $$ = nterm init_declarator_list (37.5-28: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (37.30: )
Shifting token ';' (37.30: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (37.1-3: )
   $2 = nterm init_declarator_list (37.5-28: )
   $3 = token ';' (37.30: )
-> $$ = nterm simple_declaration (37.1-29: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (37.1-29: )
-> $$ = nterm block_declaration (37.1-29: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (37.1-29: )
-> $$ = nterm declaration (37.1-29: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-36.19: )
   $2 = nterm declaration (37.1-29: )
-> $$ = nterm declaration_seq (1.1-37.29: )
Stack now 0
Entering state 31
Reading a token: Next token is token CHAR (38.1-3: )
Shifting token CHAR (38.1-3: )
Entering state 4
Reducing stack by rule 173 (line 1032):
   $1 = token CHAR (38.1-3: )
-> $$ = nterm simple_type_specifier (38.1-3: )
Stack now 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (38.1-3: )
-> $$ = nterm type_specifier (38.1-3: )
Stack now 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (38.1-3: )
-> $$ = nterm decl_specifier (38.1-3: )
Stack now 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (38.1-3: )
-> $$ = nterm decl_specifier_seq (38.1-3: )
Stack now 31 0
Entering state 36
Reading a token: Next token is token '*' (38.6: )
Shifting token '*' (38.6: )
Entering state 21
Reading a token: Next token is token CONST (38.8-11: )
Shifting token CONST (38.8-11: )
Entering state 6
Reducing stack by rule 210 (line 1196):
   $1 = token CONST (38.8-11: )
-> $$ = nterm cv_qualifier (38.8-11: )
Stack now 21 36 31 0
Entering state 108
Reducing stack by rule 332 (line 1615):
   $1 = nterm cv_qualifier (38.8-11: )
-> $$ = nterm cv_qualifier_opt (38.8-11: )
Stack now 21 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (38.6: )
   $2 = nterm cv_qualifier_opt (38.8-11: )
-> $$ = nterm ptr_operator (38.6-11: )
Stack now 36 31 0
Entering state 45
Reading a token: Next token is token '(' (38.14: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (38.6-11: )
-> $$ = nterm ptr_operator_list (38.6-11: )
Stack now 36 31 0
Entering state 44
Next token is token '(' (38.14: )
Shifting token '(' (38.14: )
Entering state 23
Reading a token: Next token is token '*' (38.15: )
Shifting token '*' (38.15: )
Entering state 21
Reading a token: Next token is token '(' (38.16: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (38.15: )
Stack now 21 23 44 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (38.15: )
   $2 = nterm cv_qualifier_opt (38.15: )
-> $$ = nterm ptr_operator (38.15: )
Stack now 23 44 36 31 0
Entering state 45
Next token is token '(' (38.16: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (38.15: )
-> $$ = nterm ptr_operator_list (38.15: )
Stack now 23 44 36 31 0
Entering state 44
Next token is token '(' (38.16: )
Shifting token '(' (38.16: )
Entering state 23
Reading a token: Next token is token '*' (38.17: )
Shifting token '*' (38.17: )
Entering state 21
Reading a token: Next token is token CONST (38.19-22: )
Shifting token CONST (38.19-22: )
Entering state 6
Reducing stack by rule 210 (line 1196):
   $1 = token CONST (38.19-22: )
-> $$ = nterm cv_qualifier (38.19-22: )
Stack now 21 23 44 23 44 36 31 0
Entering state 108
Reducing stack by rule 332 (line 1615):
   $1 = nterm cv_qualifier (38.19-22: )
-> $$ = nterm cv_qualifier_opt (38.19-22: )
Stack now 21 23 44 23 44 36 31 0
Entering state 109
Reducing stack by rule 207 (line 1180):
   $1 = token '*' (38.17: )
   $2 = nterm cv_qualifier_opt (38.19-22: )
-> $$ = nterm ptr_operator (38.17-22: )
Stack now 23 44 23 44 36 31 0
Entering state 45
Reading a token: Next token is token IDENTIFIER (38.25-26: )
Reducing stack by rule 205 (line 1173):
   $1 = nterm ptr_operator (38.17-22: )
-> $$ = nterm ptr_operator_list (38.17-22: )
Stack now 23 44 23 44 36 31 0
Entering state 44
Next token is token IDENTIFIER (38.25-26: )
Shifting token IDENTIFIER (38.25-26: )
Entering state 1
Reducing stack by rule 1 (line 177):
   $1 = token IDENTIFIER (38.25-26: )
-> $$ = nterm identifier (38.25-26: )
Stack now 44 23 44 23 44 36 31 0
Entering state 25
Reducing stack by rule 23 (line 257):
   $1 = nterm identifier (38.25-26: )
-> $$ = nterm unqualified_id (38.25-26: )
Stack now 44 23 44 23 44 36 31 0
Entering state 28
Reducing stack by rule 21 (line 252):
   $1 = nterm unqualified_id (38.25-26: )
-> $$ = nterm id_expression (38.25-26: )
Stack now 44 23 44 23 44 36 31 0
Entering state 27
Reducing stack by rule 211 (line 1200):
   $1 = nterm id_expression (38.25-26: )
-> $$ = nterm declarator_id (38.25-26: )
Stack now 44 23 44 23 44 36 31 0
Entering state 47
Reducing stack by rule 201 (line 1147):
   $1 = nterm declarator_id (38.25-26: )
-> $$ = nterm direct_declarator (38.25-26: )
Stack now 44 23 44 23 44 36 31 0
Entering state 130
Reading a token: Next token is token ')' (38.28: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (38.17-22: )
   $2 = nterm direct_declarator (38.25-26: )
-> $$ = nterm declarator (38.17-26: )
Stack now 23 44 23 44 36 31 0
Entering state 111
Next token is token ')' (38.28: )
Shifting token ')' (38.28: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (38.16: )
   $2 = nterm declarator (38.17-26: )
   $3 = token ')' (38.28: )
-> $$ = nterm direct_declarator (38.16-27: )
Stack now 44 23 44 36 31 0
Entering state 130
Reading a token: Next token is token '[' (38.29: )
Shifting token '[' (38.29: )
Entering state 128
Reading a token: Next token is token INTVAL (38.30: )
Shifting token INTVAL (38.30: )
Entering state 173
Reducing stack by rule 7 (line 189):
   $1 = token INTVAL (38.30: )
-> $$ = nterm int_literal (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 191
Reducing stack by rule 2 (line 181):
   $1 = nterm int_literal (38.30: )
-> $$ = nterm literal (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 190
Reducing stack by rule 17 (line 245):
   $1 = nterm literal (38.30: )
-> $$ = nterm primary_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 196
Reducing stack by rule 34 (line 304):
   $1 = nterm primary_expression (38.30: )
-> $$ = nterm postfix_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 198
Reading a token: Next token is token ']' (38.31: )
Reducing stack by rule 46 (line 391):
   $1 = nterm postfix_expression (38.30: )
-> $$ = nterm unary_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 199
Reducing stack by rule 74 (line 516):
   $1 = nterm unary_expression (38.30: )
-> $$ = nterm cast_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 203
Reducing stack by rule 76 (line 528):
   $1 = nterm cast_expression (38.30: )
-> $$ = nterm pm_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 204
Next token is token ']' (38.31: )
Reducing stack by rule 79 (line 549):
   $1 = nterm pm_expression (38.30: )
-> $$ = nterm multiplicative_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 205
Next token is token ']' (38.31: )
Reducing stack by rule 83 (line 578):
   $1 = nterm multiplicative_expression (38.30: )
-> $$ = nterm additive_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 206
Next token is token ']' (38.31: )
Reducing stack by rule 86 (line 599):
   $1 = nterm additive_expression (38.30: )
-> $$ = nterm shift_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 207
Next token is token ']' (38.31: )
Reducing stack by rule 89 (line 620):
   $1 = nterm shift_expression (38.30: )
-> $$ = nterm relational_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 208
Next token is token ']' (38.31: )
Reducing stack by rule 94 (line 657):
   $1 = nterm relational_expression (38.30: )
-> $$ = nterm equality_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 209
Next token is token ']' (38.31: )
Reducing stack by rule 97 (line 678):
   $1 = nterm equality_expression (38.30: )
-> $$ = nterm and_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 210
Next token is token ']' (38.31: )
Reducing stack by rule 99 (line 691):
   $1 = nterm and_expression (38.30: )
-> $$ = nterm exclusive_or_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 211
Next token is token ']' (38.31: )
Reducing stack by rule 101 (line 704):
   $1 = nterm exclusive_or_expression (38.30: )
-> $$ = nterm inclusive_or_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 212
Next token is token ']' (38.31: )
Reducing stack by rule 103 (line 717):
   $1 = nterm inclusive_or_expression (38.30: )
-> $$ = nterm logical_and_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 213
Next token is token ']' (38.31: )
Reducing stack by rule 105 (line 730):
   $1 = nterm logical_and_expression (38.30: )
-> $$ = nterm logical_or_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 214
Next token is token ']' (38.31: )
Reducing stack by rule 107 (line 743):
   $1 = nterm logical_or_expression (38.30: )
-> $$ = nterm conditional_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 215
Reducing stack by rule 124 (line 796):
   $1 = nterm conditional_expression (38.30: )
-> $$ = nterm constant_expression (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 216
Reducing stack by rule 338 (line 1627):
   $1 = nterm constant_expression (38.30: )
-> $$ = nterm constant_expression_opt (38.30: )
Stack now 128 130 44 23 44 36 31 0
Entering state 218
Next token is token ']' (38.31: )
Shifting token ']' (38.31: )
Entering state 315
Reducing stack by rule 203 (line 1157):
   $1 = nterm direct_declarator (38.16-27: )
   $2 = token '[' (38.29: )
   $3 = nterm constant_expression_opt (38.30: )
   $4 = token ']' (38.31: )
-> $$ = nterm direct_declarator (38.16-30: )
Stack now 44 23 44 36 31 0
Entering state 130
Reading a token: Next token is token ')' (38.32: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (38.15: )
   $2 = nterm direct_declarator (38.16-30: )
-> $$ = nterm declarator (38.15-30: )
Stack now 23 44 36 31 0
Entering state 111
Next token is token ')' (38.32: )
Shifting token ')' (38.32: )
Entering state 153
Reducing stack by rule 204 (line 1164):
   $1 = token '(' (38.14: )
   $2 = nterm declarator (38.15-30: )
   $3 = token ')' (38.32: )
-> $$ = nterm direct_declarator (38.14-31: )
Stack now 44 36 31 0
Entering state 130
Reading a token: Next token is token '(' (38.33: )
Shifting token '(' (38.33: )
Entering state 127
Reading a token: Next token is token INT (38.34-35: )
Shifting token INT (38.34-35: )
Entering state 11
Reducing stack by rule 176 (line 1035):
   $1 = token INT (38.34-35: )
-> $$ = nterm simple_type_specifier (38.34-35: )
Stack now 127 130 44 36 31 0
Entering state 39
Reducing stack by rule 168 (line 1003):
   $1 = nterm simple_type_specifier (38.34-35: )
-> $$ = nterm type_specifier (38.34-35: )
Stack now 127 130 44 36 31 0
Entering state 38
Reducing stack by rule 161 (line 971):
   $1 = nterm type_specifier (38.34-35: )
-> $$ = nterm decl_specifier (38.34-35: )
Stack now 127 130 44 36 31 0
Entering state 35
Reducing stack by rule 165 (line 986):
   $1 = nterm decl_specifier (38.34-35: )
-> $$ = nterm decl_specifier_seq (38.34-35: )
Stack now 127 130 44 36 31 0
Entering state 170
Reading a token: Next token is token ')' (38.37: )
Reducing stack by rule 333 (line 1618):
-> $$ = nterm abstract_declarator_opt (38.36: )
Stack now 170 127 130 44 36 31 0
Entering state 276
Next token is token ')' (38.37: )
Reducing stack by rule 339 (line 1630):
-> $$ = nterm assignment_expression_opt (38.36: )
Stack now 276 170 127 130 44 36 31 0
Entering state 365
Reducing stack by rule 225 (line 1274):
   $1 = nterm decl_specifier_seq (38.34-35: )
   $2 = nterm abstract_declarator_opt (38.36: )
   $3 = nterm assignment_expression_opt (38.36: )
-> $$ = nterm parameter_declaration (38.34-35: )
Stack now 127 130 44 36 31 0
Entering state 172
Reducing stack by rule 222 (line 1260):
   $1 = nterm parameter_declaration (38.34-35: )
-> $$ = nterm parameter_declaration_list (38.34-35: )
Stack now 127 130 44 36 31 0
Entering state 171
Next token is token ')' (38.37: )
Shifting token ')' (38.37: )
Entering state 279
Reading a token: Next token is token ';' (38.38: )
Reducing stack by rule 331 (line 1614):
-> $$ = nterm cv_qualifier_opt (38.37: )
Stack now 279 171 127 130 44 36 31 0
Entering state 369
Reducing stack by rule 202 (line 1149):
   $1 = nterm direct_declarator (38.14-31: )
   $2 = token '(' (38.33: )
   $3 = nterm parameter_declaration_list (38.34-35: )
   $4 = token ')' (38.37: )
   $5 = nterm cv_qualifier_opt (38.37: )
-> $$ = nterm direct_declarator (38.14-36: )
Stack now 44 36 31 0
Entering state 130
Next token is token ';' (38.38: )
Reducing stack by rule 200 (line 1142):
   $1 = nterm ptr_operator_list (38.6-11: )
   $2 = nterm direct_declarator (38.14-36: )
-> $$ = nterm declarator (38.6-36: )
Stack now 36 31 0
Entering state 121
Next token is token ';' (38.38: )
Reducing stack by rule 329 (line 1610):
-> $$ = nterm initializer_opt (38.37: )
Stack now 121 36 31 0
Entering state 161
Reducing stack by rule 198 (line 1131):
   $1 = nterm declarator (38.6-36: )
   $2 = nterm initializer_opt (38.37: )
-> $$ = nterm init_declarator (38.6-36: )
Stack now 36 31 0
Entering state 120
Reducing stack by rule 196 (line 1124):
   $1 = nterm init_declarator (38.6-36: )
-> $$ = nterm init_declarator_list (38.6-36: )
Stack now 36 31 0
Entering state 119
Next token is token ';' (38.38: )
Shifting token ';' (38.38: )
Entering state 156
Reducing stack by rule 160 (line 961):
   $1 = nterm decl_specifier_seq (38.1-3: )
   $2 = nterm init_declarator_list (38.6-36: )
   $3 = token ';' (38.38: )
-> $$ = nterm simple_declaration (38.1-37: )
Stack now 31 0
Entering state 34
Reducing stack by rule 158 (line 951):
   $1 = nterm simple_declaration (38.1-37: )
-> $$ = nterm block_declaration (38.1-37: )
Stack now 31 0
Entering state 33
Reducing stack by rule 156 (line 946):
   $1 = nterm block_declaration (38.1-37: )
-> $$ = nterm declaration (38.1-37: )
Stack now 31 0
Entering state 116
Reducing stack by rule 155 (line 941):
   $1 = nterm declaration_seq (1.1-37.29: )
   $2 = nterm declaration (38.1-37: )
-> $$ = nterm declaration_seq (1.1-38.37: )
Stack now 0
Entering state 31
Reading a token: Next token is token $end (38.38: )
Reducing stack by rule 16 (line 236):
   $1 = nterm declaration_seq (1.1-38.37: )
-> $$ = nterm translation_unit (1.1-38.37: )
Stack now 0
Entering state 26
Next token is token $end (38.38: )
Shifting token $end (38.38: )
Entering state 113
Cleanup: popping token $end (38.38: )
Cleanup: popping nterm translation_unit (1.1-38.37: )
